1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d498c84e4ab246b3.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/b9d97b2190475167.css","style"]
:HL["/_next/static/css/851cdee6d90716dd.css","style"]
0:{"P":null,"b":"NFjmtHF2up8B2PpbDjLiS","p":"","c":["","front-end","core-modules","executable-code-and-execution-contexts","concurrency-model","concurrency-model"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","core-modules/executable-code-and-execution-contexts/concurrency-model/concurrency-model","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d498c84e4ab246b3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/b9d97b2190475167.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/851cdee6d90716dd.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","core-modules/executable-code-and-execution-contexts/concurrency-model/concurrency-model","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","XYqvtDOFen9Wx5xIQMKXy",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T2455,<h1>并发模型</h1>
<h2>名词解释</h2>
<p>在了解 JavaScript 单线程、非阻塞机制之前，先了解几组易混淆的概念。</p>
<p>进程和线程的概念以及关系：</p>
<ul>
<li><strong>进程（Process）</strong>：进程是系统资源分配和调度的单元。一个运行着的程序就对应了一个进程。一个进程包括了运行中的程序和程序所使用到的内存和系统资源。</li>
<li><strong>线程（Thread）</strong>：线程是进程下的执行者，一个进程至少开启一个线程（主线程），也可以开启多个线程。</li>
</ul>
<p>并行和并发的概念：</p>
<ul>
<li><strong>并行（Parallelism）</strong>：指程序的运行状态，在同一时间内有几件事情并行在处理。由于一个线程在同一时间只能处理一件事情，所以并行需要多个线程在同一时间执行多件事情。</li>
<li><strong>并发（Concurrency）</strong>：指程序的设计结构，在同一时间内多件事情能被交替地处理。重点是，在某个时间内只有一件事情在执行。比如单核 CPU 能实现多任务运行的过程就是并发。</li>
</ul>
<p>阻塞和非阻塞的概念：</p>
<ul>
<li><strong>阻塞（Blocking）</strong>：阻塞是指调用在等待的过程中线程被挂起（CPU 资源被分配到其他地方去）</li>
<li><strong>非阻塞（Non-blocking）</strong>：非阻塞是指等待的过程 CPU 资源还在该线程中，线程还能做其他的事情</li>
</ul>
<p>再来区分单线程和多线程的区别：</p>
<ul>
<li><strong>单线程</strong>：从头执行到尾，逐行执行，如果其中一行代码报错，那么剩下代码将不再执行。同时容易代码阻塞。</li>
<li><strong>多线程</strong>：代码运行的环境不同，各线程独立，互不影响，避免阻塞。</li>
</ul>
<p>同步与异步的概念：</p>
<ul>
<li><strong>同步（Synchronous）</strong>：程序发出调用的时候，一直等待直到返回结果，没有结果之前不会返回。也就是，同步时调用者主动等待调用过程，且能立即得到结果的。</li>
<li><strong>异步（Asynchronous）</strong>：程序发出调用之后，无法立即得到结果，需要额外的操作才能得到预期的结果是为异步。</li>
</ul>
<h2>运行环境</h2>
<p>JavaScript 的运行通常是在浏览器环境中进行的，具体由 JavaScript 引擎去解析和运行。</p>
<h3>浏览器线程</h3>
<p>目前最为流行的浏览器为：Chrome、IE、Safari、Firefox、Opera。浏览器的内核是多线程的，通常由以下几个常驻的线程组成：</p>
<ul>
<li><strong>渲染引擎线程</strong>：负责页面的渲染</li>
<li><strong>JavaScript 引擎线程</strong>：负责 JavaScript 的解析和执行</li>
<li><strong>定时触发器线程</strong>：处理定时事件，比如 <code>setTimeout</code>、<code>setInterval</code></li>
<li><strong>浏览器事件触发线程</strong>：处理 DOM 事件</li>
<li><strong>异步 HTTP 请求线程</strong>：处理 HTTP 请求</li>
</ul>
<p>⚠️ 需要注意的是，渲染线程和 JavaScript 引擎线程是 &lt;strong style=&quot;color: red&quot;&gt;互斥&lt;/strong&gt; 的。渲染线程在执行任务的时候，JavaScript 引擎线程会被挂起。因为 JavaScript 可以操作 DOM，若在渲染中 JavaScript 处理了 DOM，浏览器可能会不知所措了。</p>
<h3>内核引擎</h3>
<p>通常讲到浏览器的时候，我们会说到两个浏览器的核心组件：<strong>渲染引擎</strong>（Rendering Engine）和 <strong>JavaScript 解释器</strong>（JavaScript Interpreter）。</p>
<table>
<thead>
<tr>
<th style="text-align:left">浏览器厂商</th>
<th style="text-align:left">渲染引擎</th>
<th style="text-align:left">JavaScript 解释器（引擎）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Chrome</td>
<td style="text-align:left">Webkit =&gt; Blink</td>
<td style="text-align:left">V8</td>
</tr>
<tr>
<td style="text-align:left">Safari</td>
<td style="text-align:left">Webkit</td>
<td style="text-align:left">Nitro</td>
</tr>
<tr>
<td style="text-align:left">Firefox</td>
<td style="text-align:left">Gecko</td>
<td style="text-align:left">SpiderMonky / TraceMonkey / JaegerMonkey</td>
</tr>
<tr>
<td style="text-align:left">Opera</td>
<td style="text-align:left">Presto =&gt; Blink</td>
<td style="text-align:left">Linear A / Linear B / Futhark / Carakan</td>
</tr>
<tr>
<td style="text-align:left">Internet Explorer</td>
<td style="text-align:left">Trident =&gt; EdgeHTML</td>
<td style="text-align:left">JScript / Chakra（9+）</td>
</tr>
<tr>
<td style="text-align:left">Edge</td>
<td style="text-align:left">EdgeHTML =&gt; Chromium</td>
<td style="text-align:left">Chakra</td>
</tr>
</tbody>
</table>
<blockquote>
<p>注：Webkit 引擎包含 WebCore 排版引擎及 JavaScript Core 解析引擎</p>
</blockquote>
<p>不同的渲染引擎对同一个样式的实现不一致，就导致了经常被人诟病的浏览器样式兼容性问题。</p>
<p>JavaScript 解释器可以说是 JavaScript 虚拟机，负责 JavaScript 代码的解析和执行。这里 <a href="/front-end/core-modules/executable-code-and-execution-contexts/compilation/compilation">编译阶段</a> 有详细解读。</p>
<h2>单线程</h2>
<p>JavaScript 的<strong>单线程</strong>，与它的用途有关。作为浏览器脚本语言，JavaScript 的主要用途是与用户互动，以及操作 DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题。比如，假定 JavaScript 同时有两个线程，一个线程在某个 DOM 节点上添加内容，另一个线程删除了这个节点，这时浏览器应该以哪个线程为准呢？</p>
<p>所以，为了避免复杂性，从诞生之初以来，JavaScript 运行环境就是单线程，这已经成了这门语言的核心特征，将来也不会改变。</p>
<p>为了利用多核 CPU 的计算能力，HTML5 提出 Web Worker 标准，允许 JavaScript 脚本创建多个线程，但是子线程完全受主线程控制，且不得操作 DOM。所以，这个新标准并没有改变 JavaScript 单线程的本质。</p>
<p>⚠️ <strong>注意</strong>： 需要注意的是，JavaScript 的单线程是指一个程序进程（在浏览器运行环境中运行的就是浏览器进程）中只有一个 JavaScript 的执行线程，同一时刻内只会有一段 JavaScript 代码在执行。而异步机制是运行环境的两个或以上常驻线程共同完成的。</p>
<h2>任务队列</h2>
<p>JavaScript 中的程序任务可以分为两种：</p>
<ul>
<li><strong>同步任务（Synchronous）</strong>：同步任务在主线程上调用之后需要一直等待，只有当前任务执行完毕后，才能执行下一个任务</li>
<li><strong>异步任务（Asynchronous）</strong>：异步任务会在主线程先执行一部分，然后退出主线程至专用线程中执行。在异步任务准备就绪后，会被推进任务队列等待（Task Queue），当主线程空闲时，JavaScript 解释器会执行一次事件循环（EventLoop）将事件队列中首个事件推进主线程执行</li>
</ul>
<p>具体来说，<strong>异步执行的运行机制</strong> 如下：</p>
<ol>
<li>所有同步任务及异步任务按照 <a href="/front-end/core-modules/executable-code-and-execution-contexts/compilation/compilation#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86">编译原理</a> 在主线程上执行，形成一个 <a href="/front-end/core-modules/executable-code-and-execution-contexts/execution/execution-context-stack">执行上下文栈</a>（Execution Context Stack）</li>
<li>同步任务执行完成并返回结果后退出执行上下文栈；异步任务执行一部分后，退出主线程的执行上下文栈，推进至运行环境的专用线程中继续执行</li>
<li>当运行环境的专用线程中的异步任务准备就绪后，将被推至任务队列（Task Queue）中等待执行</li>
<li>主线程的执行上下文栈中的所有任务执行完毕后，JavaScript 解释器就会通过事件循环机制检查任务队列中是否存在等待执行的事件。如果存在，则队首的异步任务将结束等待状态，进入执行上下文执行</li>
<li>JavaScript 主线程运行期间将不断重复上面第四步</li>
</ol>
<p>&lt;br/&gt;</p>
<img alt="异步任务执行机制图解" src="../../../assets/concurrency-model/workflow.png" width="640" /><h2>参考资料</h2>
<ul>
<li><a href="https://hijiangtao.github.io/2018/01/08/JavaScript-and-Browser-Engines-with-Threads/" target="_blank" rel="noopener noreferrer nofollow">📝 聊聊 JavaScript 与浏览器的那些事：引擎与线程</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27035708" target="_blank" rel="noopener noreferrer nofollow">📝 JavaScript 单线程异步的背后——事件循环机制</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2014/10/event-loop.html" target="_blank" rel="noopener noreferrer nofollow">📝 JavaScript 运行机制详解：再谈 Event Loop</a></li>
<li><a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ" target="_blank" rel="noopener noreferrer nofollow">🎥 Philip Roverts: What the heck is the event loop anyway</a></li>
</ul>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
