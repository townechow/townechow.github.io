1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"NW9bMA21iAaih0TqCHqj1","p":"","c":["","front-end","core-modules","ecmascript-function-objects","function-arguments","rest-parameters"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","core-modules/ecmascript-function-objects/function-arguments/rest-parameters","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","core-modules/ecmascript-function-objects/function-arguments/rest-parameters","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","f1Tih4mOKfaw-_wKrDvVn",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T1460,<h1>剩余参数</h1>
<p><strong>剩余参数（亦称 rest 参数）</strong> 用于获取函数的多余参数，这样就不要使用 <code>arguments</code> 对象了。剩余参数搭配的变量是一个 <strong>数组</strong>，该变量将多余的参数放入数组中。</p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">...values</span>) {
  <span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;

  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> val <span class="hljs-keyword">of</span> values) {
    sum += val;
  }

  <span class="hljs-keyword">return</span> sum;
}

<span class="hljs-title function_">add</span>(<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>); <span class="hljs-comment">// 10</span>
</code></pre>
<p>上面代码的 <code>add</code> 函数是一个求和函数，利用函数剩余参数，可以向该函数传入任意数目的参数。</p>
<p>下面是一个函数剩余参数代替 <code>arguments</code> 变量的例子。</p>
<pre class="hljs"><code class="language-js"><span class="hljs-comment">// arguments变量的写法</span>
<span class="hljs-keyword">function</span> <span class="hljs-title function_">sortNumbers</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">slice</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>).<span class="hljs-title function_">sort</span>();
}

<span class="hljs-comment">// rest参数的写法</span>
<span class="hljs-keyword">const</span> <span class="hljs-title function_">sortNumbers</span> = (<span class="hljs-params">...numbers</span>) =&gt; numbers.<span class="hljs-title function_">sort</span>();
</code></pre>
<p><code>arguments</code> 对象不是数组，而是一个类似数组的对象。所以为了使用数组的方法，必须使用 <code>Array.prototype.slice.call</code> 先将其转为数组。函数剩余参数就不存在这个问题，它就是一个真正的数组，数组特有的方法都可以使用。下面是一个利用函数剩余参数改写数组 <code>push</code> 方法的例子。</p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">push</span>(<span class="hljs-params">array, ...items</span>) {
  items.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>) {
    array.<span class="hljs-title function_">push</span>(item);
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(item);
  });
}

<span class="hljs-keyword">const</span> collection = [];

<span class="hljs-title function_">push</span>(collection <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)
</code></pre>
<h2>与参数对象的对比</h2>
<table>
<thead>
<tr>
<th style="text-align:left">剩余参数</th>
<th style="text-align:left">参数对象</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">只包含那些没有对应形参的实参</td>
<td style="text-align:left">包含了传给函数的所有实参</td>
</tr>
<tr>
<td style="text-align:left">真实的数组，可直接使用所有数组方法</td>
<td style="text-align:left">不是一个真实的数组，是个类数组，需要 <code>Array.from</code> 或解构赋值转换为真实数组后方可遍历</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">还有一些附加的属性， 比如 <code>callee</code> 属性</td>
</tr>
</tbody>
</table>
<h2>注意事项</h2>
<ul>
<li>函数剩余参数之后不能再有其他参数（即 <strong>只能是最后一个参数</strong>），否则会报错。</li>
</ul>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">a, ...b, c</span>) { ... }
<span class="hljs-comment">// Uncaught SyntaxError: Rest parameter must be last formal parameter</span>
</code></pre>
<ul>
<li>函数的 <code>length</code> 属性，不包括函数剩余参数。</li>
</ul>
<pre class="hljs"><code class="language-js">(<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>) {}.<span class="hljs-property">length</span>);
<span class="hljs-comment">// 1</span>
</code></pre>
<pre class="hljs"><code class="language-js">(<span class="hljs-keyword">function</span>(<span class="hljs-params">...a</span>) {}.<span class="hljs-property">length</span>);
<span class="hljs-comment">// 0</span>
</code></pre>
<pre class="hljs"><code class="language-js">(<span class="hljs-keyword">function</span>(<span class="hljs-params">a, ...b</span>) {}.<span class="hljs-property">length</span>);
<span class="hljs-comment">// 1</span>
</code></pre>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
