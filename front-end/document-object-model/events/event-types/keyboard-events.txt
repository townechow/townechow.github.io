1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"ToCgoFiTXvECVEVLCeZww","p":"","c":["","front-end","document-object-model","events","event-types","keyboard-events"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","document-object-model/events/event-types/keyboard-events","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","document-object-model/events/event-types/keyboard-events","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","ZINVtkc50Oc4BevokI3yW",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T1e44,<h1>键盘事件</h1>
<p>用户在使用键盘时会触发键盘事件。</p>
<p>键盘事件：</p>
<ul>
<li><code>keydown</code>：当用户按下键盘上的任意时触发，而且如果按住不放的话，会重复触发此事件</li>
<li><code>keypress</code>：当用户按下键盘上的字符键时触发，而且如果按住不放的话，会重复触发此事件</li>
<li><code>keyup</code>：当用户释放键盘上的键时触发</li>
</ul>
<p>文本事件：</p>
<ul>
<li><code>textInput</code>：在文本插入文本框之前会触发 <code>textInput</code> 事件</li>
</ul>
<p>程序：</p>
<p>当用户按下一个键盘上的字符键：<code>keydown</code> -&gt; <code>keypress</code> -&gt; <code>keyup</code></p>
<p>当用户按下一个键盘上的非字符键：<code>keydown</code> -&gt; <code>keyup</code></p>
<h2>键码</h2>
<p>在发生 <code>keydown</code> 和 <code>keyup</code> 事件时，<code>event</code> 对象的 <code>keycode</code> 属性中会包含一个代码，与键盘上一个特定的键对应。对数字字母字符键，<code>keycode</code> 属性的值与 ASCII 码对应小写字母或数字的编码相同。</p>
<table>
<thead>
<tr>
<th>键</th>
<th>键码</th>
<th>键</th>
<th>键码</th>
</tr>
</thead>
<tbody>
<tr>
<td>退格（Backspace）</td>
<td>8</td>
<td>数字小键盘 9</td>
<td>105</td>
</tr>
<tr>
<td>制表（Tab）</td>
<td>9</td>
<td>数字小键盘+</td>
<td>107</td>
</tr>
<tr>
<td>回车（Enter）</td>
<td>13</td>
<td>数字小键盘及大键盘上的-</td>
<td>109</td>
</tr>
<tr>
<td>上档（Shift）</td>
<td>16</td>
<td>数字小键盘.</td>
<td>110</td>
</tr>
<tr>
<td>控制（Ctrl）</td>
<td>17</td>
<td>数字小键盘/</td>
<td>111</td>
</tr>
<tr>
<td>Alt</td>
<td>18</td>
<td>F1</td>
<td>112</td>
</tr>
<tr>
<td>暂停/中断（Pause/Break）</td>
<td>19</td>
<td>F2</td>
<td>113</td>
</tr>
<tr>
<td>大写（Caps Lock）</td>
<td>20</td>
<td>F3</td>
<td>114</td>
</tr>
<tr>
<td>退出（Esc）</td>
<td>27</td>
<td>F4</td>
<td>115</td>
</tr>
<tr>
<td>上翻页（Page Up）</td>
<td>33</td>
<td>F5</td>
<td>116</td>
</tr>
<tr>
<td>下翻页（Page Down）</td>
<td>34</td>
<td>F6</td>
<td>117</td>
</tr>
<tr>
<td>结尾（End）</td>
<td>35</td>
<td>F7</td>
<td>118</td>
</tr>
<tr>
<td>开头（Home）</td>
<td>36</td>
<td>F8</td>
<td>119</td>
</tr>
<tr>
<td>左箭头（Left Arrow）</td>
<td>37</td>
<td>F9</td>
<td>120</td>
</tr>
<tr>
<td>上箭头（Up Arrow）</td>
<td>38</td>
<td>F10</td>
<td>121</td>
</tr>
<tr>
<td>右箭头（Right Arrow）</td>
<td>39</td>
<td>F11</td>
<td>122</td>
</tr>
<tr>
<td>下箭头（Down Arrow）</td>
<td>40</td>
<td>F12</td>
<td>123</td>
</tr>
<tr>
<td>插入（Ins）</td>
<td>45</td>
<td>数字锁</td>
<td>144</td>
</tr>
<tr>
<td>删除（Del）</td>
<td>46</td>
<td>滚动锁</td>
<td>145</td>
</tr>
<tr>
<td>左 Windows 键</td>
<td>91</td>
<td>分号（E/Safari/Chrome）</td>
<td>186</td>
</tr>
<tr>
<td>右 Windows 键</td>
<td>91</td>
<td>分号（Opera/Firefox）</td>
<td>59</td>
</tr>
<tr>
<td>上下文菜单键</td>
<td>93</td>
<td>小于</td>
<td>188</td>
</tr>
<tr>
<td>数字小键盘 0</td>
<td>96</td>
<td>大于</td>
<td>190</td>
</tr>
<tr>
<td>数字小键盘 1</td>
<td>97</td>
<td>正斜杠</td>
<td>191</td>
</tr>
<tr>
<td>数字小键盘 2</td>
<td>98</td>
<td>沉音符</td>
<td>192</td>
</tr>
<tr>
<td>数字小键盘 3</td>
<td>99</td>
<td>等于</td>
<td>61</td>
</tr>
<tr>
<td>数字小键盘 4</td>
<td>100</td>
<td>左方括号</td>
<td>219</td>
</tr>
<tr>
<td>数字小键盘 5</td>
<td>101</td>
<td>反斜杠</td>
<td>220</td>
</tr>
<tr>
<td>数字小键盘 6</td>
<td>102</td>
<td>右方括号</td>
<td>221</td>
</tr>
<tr>
<td>数字小键盘 7</td>
<td>103</td>
<td>单引号</td>
<td>222</td>
</tr>
<tr>
<td>数字小键盘 8</td>
<td>104</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2>字符编码</h2>
<p><code>charCode</code> 这个属性只有在发生 <code>keypress</code> 事件才包含值，而且这个值是按下的那个键所代表字符的 ASCⅡ 编码，此时的 <code>keyCode</code> 通常等于 0 或者也可能等于所按键的键码。</p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">EventUtil</span> = {
  <span class="hljs-comment">// 省略的代码</span>
  <span class="hljs-attr">getCharCode</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) {
    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> event.<span class="hljs-property">charCode</span> == <span class="hljs-string">&#x27;number&#x27;</span>) {
      <span class="hljs-keyword">return</span> event.<span class="hljs-property">charCode</span>;
    } <span class="hljs-keyword">else</span> {
      <span class="hljs-keyword">return</span> event.<span class="hljs-property">keyCode</span>;
    }
  },
};
</code></pre>
<p>这个方法首先检测 <code>charCode</code> 属性是否包含数值（在不支持这个属性的浏览器中，值为 <code>undefined</code>），如果是，则返回改值。否则，就返回 <code>keyCode</code> 属性值。</p>
<h2>textInput 事件</h2>
<p>当用户在可编辑区域中输入字符时，就会触发这个事件。这个用于替代 <code>keypress</code> 的 <code>textInput</code> 事件的行为稍有不同。区别之一就是任何可以获得焦点的元素都可以触发 <code>keypress</code> 事件，但只有可编辑区域才能触发 <code>textInput</code> 事件。区别之二是 <code>textInput</code> 事件只会在用户按下能够输入实际字符的键时才会被触发，而 <code>keypress</code> 事件则在按下那些能够影响文本显示的键时也会触发（例如退格键）。</p>
<p>由于 <code>textInput</code> 事件主要考虑的是字符，因此它的 <code>event</code> 对象中还包含一个 <code>deta</code> 属性，这个属性的值就是用户输入的字符（而非字符编码）。换句话说，用户在没有按上档键的情况下按下了 S 键，<code>data</code> 的值就是 <code>&quot;s&quot;</code>，而如果在按住上档键时按下该键，<code>data</code> 的值就是 <code>&quot;S&quot;</code>。</p>
<h2>设备中的键盘事件</h2>
<p>任天堂 Wii 会在用户按下 Wii 遥控器上的按键时触发键盘事件。尽管没有办法访问 Wii 遥控器中的所有按键，但还是有一些键可以触发键盘事件。</p>
<p>当用户按下十字键盘（键码为 175 ～ 178）、减号（170）、加号（174）、1（172）或 2（173）键时就会触发键盘事件。但没有办法得知用户是否按下了电源开关、A、B 或主页键。</p>
<p>iOS 版 Safari 和 Android 版 Webkit 在使用屏幕键盘时会触发键盘事件。</p>
<p>删除</p>
<p>Backspace 和 Delete</p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> keycode = e.<span class="hljs-property">keycode</span>;

<span class="hljs-keyword">if</span> (keycode === <span class="hljs-number">46</span> || keycode === <span class="hljs-number">8</span>) {
}
</code></pre>
<p>兼容 ctrl 和 command</p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">if</span> (!e.<span class="hljs-property">altKey</span> &amp;&amp; !e.<span class="hljs-property">shiftKey</span> &amp;&amp; e.<span class="hljs-property">keyCode</span> === <span class="hljs-number">75</span> &amp;&amp; (e.<span class="hljs-property">metaKey</span> || e.<span class="hljs-property">ctrlKey</span>)) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;ctrl+k 或者 command+k &#x27;</span>);
}
</code></pre>
4:["$","div",null,{"className":"markdown-body","children":[["$","h1",null,{"children":"键盘事件"}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
