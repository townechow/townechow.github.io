1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d4dd73d504c89c58.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"1zJy3VHENUSg9vzcRvJ6P","p":"","c":["","front-end","computer-networks","computer-network-architecture","dns"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","computer-networks/computer-network-architecture/dns","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d4dd73d504c89c58.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","computer-networks/computer-network-architecture/dns","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","zWEB5oZGoQqgmOsmOD1SY",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T5181,<h1>DNS 域名解析系统</h1>
<p><strong>DNS 域名解析系统（Domain Name System）</strong> 是进行域名（domain name）和与之相对应的 IP 地址（IP address）转换的服务器。DNS 中保存了一张域名（domain name）和与之相对应的 IP 地址（IP address）的表，以解析消息的域名。</p>
<p>使用 IP 地址而非使用域名进行通信的原因：</p>
<ul>
<li>IP 地址是固定长度，IPv4 是 32 位，IPv6 是 128 位，而域名是变长的，不便于计算机处理</li>
<li>IP 地址对于用户来说不方便记忆，但域名便于用户使用</li>
</ul>
<p>简单来说就是 IP 面向主机，域名面向用户。</p>
<h2>域名的分层结构</h2>
<p>由于因特网的用户数量较多，所以因特网在命名时采用的是层次树状结构的命名方法。任何一个连接在因特网上的主机或路由器，都有一个唯一的层次结构的名字，即域名（domain name）。这里，<strong>域</strong>（domain）是名字空间中一个可被管理的划分。从语法上讲，每一个域名都是有标号（label）序列组成，而各标号之间用点（<code>.</code>）隔开。域名可以划分为各个子域，子域还可以继续划分为子域的子域，这样就形成了顶级域、主域名、子域名等。</p>
<p><strong>域名系统必须要保持唯一性。</strong></p>
<p>特点：</p>
<ol>
<li>每个域名都是一个标号序列，用字母（大小写等价）、数字（0-9）和连接符（-）组成</li>
<li>标号序列总长度不能超过 255 个字符，它由各标点之间用 <code>.</code> 分割成一个个的标号</li>
<li>每个标号应该在 63 个字符之内，每个标号都可以堪称一个层次的域名</li>
<li>级别最低的域名写在左边，级别最高的域名写在右边</li>
</ol>
<p>域名服务是基于 UDP 实现的，服务器的端口号为 <code>53</code>。</p>
<p>以 <code>www.example.google.com</code> 为例：</p>
<ul>
<li><code>.com</code>：是顶级域名</li>
<li><code>google.com</code>：是主域名（也可称托管一级域名），主要指企业名</li>
<li><code>example.google.com</code>：是子域名（也可称为托管二级域名）</li>
<li><code>www.example.google.com</code>：是子域名的子域（也可称为托管三级域名）</li>
</ul>
<p>域名可以划分为各个子域，子域还可以继续划分为子域的子域，这样就形成了顶级域、二级域、三级域等。</p>
<table>
<thead>
<tr>
<th style="text-align:left">顶级域名</th>
<th style="text-align:left">标识</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">国家顶级域名</td>
<td style="text-align:left">中国 <code>cn</code>；美国 <code>us</code>；英国 <code>uk</code></td>
</tr>
<tr>
<td style="text-align:left">通用顶级域名</td>
<td style="text-align:left">公司企业 <code>com</code>；教育机构 <code>edu</code>；政府部门 <code>gov</code>；国际组织 <code>int</code>；军事部门 <code>mil</code>；网络 <code>net</code>；非盈利组织 <code>org</code></td>
</tr>
<tr>
<td style="text-align:left">反向域名</td>
<td style="text-align:left">Arpa 用于 PTR 查询（IP 地址转换为域名）</td>
</tr>
</tbody>
</table>
<h2>查询类型</h2>
<h3>递归查询</h3>
<p>递归查询（Recursive）是一种 DNS 服务器的查询模式，在该模式下 DNS 服务器接收到客户机请求，必须使用一个准确的查询结果回复客户机。如果 DNS 服务器本地没有存储查询 DNS 信息，那么该服务器会询问其他服务器，并将返回的查询结果提交给客户机。所以，一般情况下服务器跟内网 DNS 或直接 DNS 之间都采用递归查询。</p>
<h3>迭代查询</h3>
<p>DNS 服务器另外一种查询方式为迭代查询，DNS 服务器会向客户机提供其他能够解析查询请求的 DNS 服务器地址，当客户机发送查询请求时，DNS 服务器并不直接回复查询结果，而是告诉客户机另一台 DNS 服务器地址，客户机再向这台 DNS 服务器提交请求，依次循环直到返回查询的结果。所以一般内网 DNS 和外网 DNS 之间的都采用迭代查询。</p>
<h2>分层结构</h2>
<p>域名是分层结构，域名 DNS 服务器也是对应的层级结构。有了域名结构，还需要有域名 DNS 服务器去解析域名，且是需要由遍及全世界的域名 DNS 服务器去解析，域名 DNS 服务器实际上就是装有域名系统的主机。域名解析过程涉及 4 个 DNS 服务器，分别如下：</p>
<table>
<thead>
<tr>
<th style="text-align:left">分类</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">根 DNS 服务器</td>
<td style="text-align:left">Root NameServer，本地域名服务器在本地查询不到解析结果时，则第一步会向它进行查询，并获取顶级域名服务器的 IP 地址。</td>
</tr>
<tr>
<td style="text-align:left">顶级域名服务器</td>
<td style="text-align:left">TLD（Top-level） NameServer。负责管理在该顶级域名服务器下注册的二级域名，例如 <code>www.example.com</code>、<code>.com</code> 则是顶级域名服务器，在向它查询时，可以返回二级域名 <code>example.com</code> 所在的权威域名服务器地址</td>
</tr>
<tr>
<td style="text-align:left">权威域名服务器</td>
<td style="text-align:left">Authoritative NameServer。在特定区域内具有唯一性，负责维护该区域内的域名与 IP 地址之间的对应关系，例如云解析 DNS。</td>
</tr>
<tr>
<td style="text-align:left">本地域名服务器</td>
<td style="text-align:left">DNS Resolver 或 Local DNS。本地域名服务器是响应来自客户端的递归请求，并最终跟踪直到获取到解析结果的 DNS 服务器。例如用户本机自动分配的 DNS、运营商 ISP 分配的 DNS、谷歌/114 公共 DNS 等</td>
</tr>
</tbody>
</table>
<blockquote>
<p>每个层的域名上都有自己的域名服务器，最顶层的是根域名服务器</p>
<p>每一级域名服务器都知道下级域名服务器的 IP 地址，以便于一级一级向下查询</p>
</blockquote>
<h2>记录类型</h2>
<p>在 DNS 系统中，最常见的资源记录方式是 Internet 类记录，该记录由包含 4 个字段的数据构成：<code>Name</code>、<code>Value</code>、<code>Type</code>、<code>TTL</code>。</p>
<p>其中 <code>Name</code> 和 <code>Value</code> 可以理解为一对键值对，但是其具体含义取决于 <code>Type</code> 的类型，<code>TTL</code> 记录了该条记录应当从缓存中删除的时间。</p>
<p>在资源记录的类型中中，最为常见且重要的类型 <code>Type</code> 主要有：</p>
<table>
<thead>
<tr>
<th style="text-align:left">类型</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">A</td>
<td style="text-align:left">将域名指向一个 IPv4 地址，<code>A</code> 记录用于描述目标域名到 IP 地址的映射关系，将目标域名与 <code>A</code> 记录的 <code>Name</code> 字段进行匹配，将成功匹配的记录的 Value 字段的内容（IP 地址）输出到 DNS 回应报文中。</td>
</tr>
<tr>
<td style="text-align:left">CNAME</td>
<td style="text-align:left">将域名指向另一个域名，<code>CNAME</code> 记录用于描述目的域名和别名的对应关系，如果说 <code>A</code> 记录可以将目标域名转换为对应主机的 IP 地址，那么 <code>CNAME</code> 记录则可以将一个域名（别名）转换为另一个域名，如果多条 <code>CNAME</code> 记录指向同一个域名，则可以将多个不同的域名的请求指向同一台服务器主机。并且，<code>CNAME</code> 记录通常还对应了一条 <code>A</code> 记录，用于提供被转换的域名的 IP 地址</td>
</tr>
<tr>
<td style="text-align:left">NS</td>
<td style="text-align:left">将子域名指向另一个 DNS 服务器解析，<code>NS</code> 记录用于描述目标域名到负责解析该域名的 DNS 的映射关系，根据目标域名对 <code>NS</code> 记录的 <code>Name</code> 字段进行匹配，将成功匹配的记录的 <code>Value</code> 字段（负责解析目标域名的 DNS 的 IP 地址）输出到 DNS 回应报文中</td>
</tr>
<tr>
<td style="text-align:left">AAAA</td>
<td style="text-align:left">将域名指向一个 IPv6 地址</td>
</tr>
<tr>
<td style="text-align:left">MX</td>
<td style="text-align:left">将域名指向邮件服务器地址</td>
</tr>
<tr>
<td style="text-align:left">SRV</td>
<td style="text-align:left">记录提供特定的服务的服务器</td>
</tr>
<tr>
<td style="text-align:left">TXT</td>
<td style="text-align:left">文本长度限制 512，通常做 SDF 记录（反垃圾邮件）</td>
</tr>
<tr>
<td style="text-align:left">CAA</td>
<td style="text-align:left">CA 证书颁发机构授权校验</td>
</tr>
<tr>
<td style="text-align:left">显性 URL</td>
<td style="text-align:left">将域名重定向至另一个地址</td>
</tr>
<tr>
<td style="text-align:left">隐形 URL</td>
<td style="text-align:left">与显性 URL 类似，但是会隐藏真实的目标地址</td>
</tr>
</tbody>
</table>
<h2>解析过程</h2>
<p>DNS 是一种使用 UDP 协议进行域名查询的协议，其最主要的目标就是将域名转换为 IP 地址。</p>
<p>DNS 查询的结果通常会在本地域名服务器中进行缓存，如果本地域名服务器中有缓存的情况下，则会跳过如下 DNS 查询步骤，很快返回解析结果。下面的示例则概述了本地域名服务器没有缓存的情况下，DNS 查询所需的 8 个步骤：</p>
<ol>
<li>用户在 Web 浏览器中输入 <code>www.taobao.com</code>， 则由本地域名服务器开始进行递归查询。</li>
<li>本地域名服务器采用 <strong>迭代查询</strong> 的方法，向根域名服务器进行查询 。</li>
<li>根域名服务器告诉本地域名服务器，下一步应该查询的顶级域名服务器 <code>.com</code> TLD 的 IP 地址</li>
<li>本地域名服务器向顶级域名服务器 <code>.com</code> TLD 进行查询</li>
<li><code>.com</code> TLD 服务器告诉本地域名服务器，下一步查询 <code>www.taobao.com</code> <strong>权威域名服务器</strong>的 IP 地址</li>
<li>本地域名服务器向 <code>www.taobao.com</code> 权威域名服务器发送查询</li>
<li><code>www.taobao.com</code> 权威域名服务器告诉本地域名服务器所查询的主机 IP 地址</li>
<li>本地域名服务器最后把查询的 IP 地址响应给 Web 浏览器，一旦 DNS 查询的 8 个步骤返回了 <code>www.taobao.com</code> 的 IP 地址，浏览器就能够发出对网页的请求：</li>
<li>浏览器向 IP 地址发出 HTTP 请求</li>
<li>该 IP 处的 web 服务器返回要在浏览器中呈现的网页</li>
</ol>
<pre class="hljs"><code class="language-jsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;
<span class="hljs-keyword">import</span> img <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../assets/dns/workflow.jpeg&#x27;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-title function_">default</span> () =&gt; <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;DNS Workflow&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">{img}</span> <span class="hljs-attr">width</span>=<span class="hljs-string">{540}</span> /&gt;</span></span>;
</code></pre>
<p><strong>详细解析：</strong></p>
<p>以查询 <code>www.taobao.com</code> 对应的 IP 地址为例，操作系统首先会在本地尝试解析，比如使用众所周知的 <code>hosts</code> 文件，同时如果有解析缓存的话，操作系统也会去查询。如果是在浏览器中进行查询，浏览器自己有时也会有解析缓存。</p>
<ul>
<li>用户设备
<ul>
<li>浏览器可能会缓存域名解析</li>
<li>用户系统中可以有自己的域名映射表</li>
</ul>
</li>
<li>公共域名服务器
<ul>
<li>通常由 ISP 提供</li>
<li>缓存上一级域名服务器的结果</li>
</ul>
</li>
</ul>
<p>在查询没有结果时，设备最终会开始向域名服务器发起查询请求。公共域名服务器一般就是用户的 ISP 提供的。这种公共域名服务器通常会缓存查询结果，因此如果缓存命中，查询就可以到此结束。当然缓存本身是有时效的，这个时效就被称为 TTL。对于超过时效的查询结果，域名服务器有义务重新发起查询请求。但查询本身是非常消耗流量的事情，因此也有一些公共服务器不严格遵守 TTL，超时缓存。</p>
<p>未命名缓存的查询，公共服务器会向顶级域名服务器进行查询。以上述例子来说，因为公共域名服务器不知道 <code>taobao.com</code> 的解析权归谁，因此它会向顶级域名服务器——<code>com</code> 域名服务器发起请求，寻找 <code>taobao.com</code> 对应的域名服务器。顶级域名服务器一般是由域名经营机构来维护的，有些甚至归属国家机关管理，例如国别域名。理论上来说，在顶级域名服务器之上还有一个根域名服务器，不过在平时很难意识到它的存在。</p>
<ul>
<li>公共域名服务器
<ul>
<li>DNS 级联的特性决定了中途可以有更多域名服务器</li>
</ul>
</li>
<li>顶级域名服务器
<ul>
<li>由顶级域名经营机构维护</li>
<li>可细分为与国家、通用</li>
</ul>
</li>
</ul>
<p>在查找到 <code>taobao.com</code> 的域名服务器之后，就可以向域名服务器查询 <code>www.taobao.com</code> 的 IP 了。这个过程是由上到下指定下来的，所以这种域名服务器可以被称为权威域名服务器。对于开发者来说，我们自己平时在域名服务器那里购买到域名之后，录入自己域名对应的 IP，其实就是在向权威域名服务器录入信息。一些大型企业会自己维护权威域名服务器，这样既可以抵御一些针对性的攻击，同时也可以更好地优化解析的速度。</p>
<ul>
<li>公共域名服务器</li>
<li>权威域名服务器
<ul>
<li>通常由专业的域名服务机构提供</li>
<li>购买域名时一般会提供</li>
</ul>
</li>
</ul>
<h2>排查与优化</h2>
<h3>常见问题</h3>
<ul>
<li>DNS 服务器本身有问题，响应慢并且不稳定</li>
<li>或者是，客户端到 DNS 服务器的网络延迟比较大</li>
<li>再或者，DNS 请求或者响应包，在某些情况下被链路中的网络设备弄丢了</li>
</ul>
<h3>故障排查顺序</h3>
<ol>
<li>检查本地 <code>hosts</code>：<code>cat /etc/hosts</code></li>
<li>检查 <code>resolv.conf</code> 文件：<code>cat /etc/resolv.conf</code>。在 <code>Redhat7 / Centos7</code> 上修改 <code>resolv.conf</code> 里的 DNS 地址后，重启启网络服务发现 DNS 地址消失了，那么检查下网卡配置文件。</li>
<li>检查网卡配置文件：<code>cat /etc/sysconfig/network-scripts/ifcfg-&lt;网卡名称&gt;</code>，看下里头有没 DNS 配置信息，没有的话补上去。</li>
</ol>
<h3>常见优化技术</h3>
<ol>
<li>HttpDNS：客户端基于 HTTP 协议，向 CDN 服务商指定的 DNS 服务器发送域名解析请求，从而避免 LocalDNS 造成的域名劫持和跨网访问</li>
<li>Http 302 跳转：CDN 厂商维护 CDN 域名 IP 库，根据用户访问终端的 IP 和 CDN 边缘节点的状态，选择最合适的 CDN 节点，发出 HTTP 的 302 返回码，将用户的请求跳转到合适的 CDN 边缘节点。</li>
</ol>
<h3>常见优化方法</h3>
<ul>
<li>缓存：缓存是最有效的方法，但要注意，一旦缓存过期，还是要去 DNS 服务器重新获取新记录。不过，这对大部分应用程序来说都是可接受的。</li>
<li>预解析：这是浏览器等 Web 应用中最常用的方法，也就是说，不等用户点击页面上的超链接，浏览器就会在后台自动解析域名，并把结果缓存起来。</li>
<li>HTTPDNS：使用 HTTPDNS 取代常规的 DNS 解析。这是很多移动应用会选择的方法，特别是如今域名劫持普遍存在，使用 HTTP 协议绕过链路中的 DNS 服务器，就可以避免域名劫持的问题。</li>
<li>全局负载均衡：基于 DNS 的全局负载均衡（GSLB）。这不仅为服务提供了负载均衡和高可用的功能，还可以根据用户的位置，返回距离最近的 IP 地址。</li>
<li>对于移动客户端，在 APP 启动时对需要解析的域名做预先解析，然后把解析的结果缓存到本地的一个 LRU 缓存里面。这样当我们要使用这个域名的时候，只需要从缓存中直接拿到所需要的 IP 地址就好了，如果缓存中不存在才会走整个 DNS 查询的过程。同时为了避免 DNS 解析结果的变更造成缓存内数据失效，我们可以启动一个定时器定期地更新缓存中的数据。</li>
</ul>
<h3>DNS 污染解决方案</h3>
<p>一般是考虑尽可能自主控制 DNS 解析，比如使用专用 DNS 服务器，HTTPDNS，甚至是直接使用 IP 地址跳过解析</p>
<h2>DNS 术语</h2>
<p><strong>DNS 缓存</strong></p>
<p>DNS 缓存是将解析数据存储在靠近发起请求的客户端的位置，也可以说 DNS 数据是可以缓存在任意位置，最终目的是以此减少递归查询过程，可以更快的让用户获得请求结果。</p>
<p><strong>TTL</strong></p>
<p>英文全称 Time To Live ，这个值是告诉本地域名服务器，域名解析结果可缓存的最长时间，缓存时间到期后本地域名服务器则会删除该解析记录的数据，删除之后，如有用户请求域名，则会重新进行递归查询/迭代查询的过程。</p>
<p><strong>DNS Query Flood Attack</strong></p>
<p>指域名查询攻击，攻击方法是通过操纵大量傀儡机器，发送海量的域名查询请求，当每秒域名查询请求次数超过 DNS 服务器可承载的能力时，则会造成解析域名超时从而直接影响业务的可用性。</p>
<p><strong>URL 转发</strong></p>
<p>英文 Url Forwarding，也可称地址转向，它是通过服务器的特殊设置，将一个域名指向到另外一个已存在的站点</p>
<p><strong>DNSSEC</strong></p>
<p>域名系统安全扩展（DNS Security Extensions），简称 DNSSEC。它是通过数字签名来保证 DNS 应答报文的真实性和完整性，可有效防止 DNS 欺骗和缓存污染等攻击，能够保护用户不被重定向到非预期地址，从而提高用户对互联网的信任。</p>
<h2>常用 DNS</h2>
<ul>
<li>114 DNS：<code>114.114.114.114</code> 或 <code>114.114.115.115</code></li>
<li>阿里 DNS：<code>223.5.5.5</code> 或 <code>223.6.6.6</code></li>
<li>百度 DNS：<code>180.76.76.76</code></li>
<li>DNS 派：
<ul>
<li>电信 <code>101.226.4.6</code></li>
<li>联通 <code>123.125.81.6</code></li>
<li>移动 <code>101.226.4.6</code></li>
<li>铁通 <code>101.226.4.6</code></li>
</ul>
</li>
<li>OneDNS
<ul>
<li>南方 <code>112.124.47.27</code></li>
<li>北方 <code>114.215.126.16</code></li>
<li>共用 <code>42.236.82.22</code></li>
</ul>
</li>
<li>Google DNS：<code>8.8.8.8</code> 或 <code>8.8.4.4</code></li>
<li>OpenDNS：<code>208.67.222.222</code> 或 <code>208.67.220.220</code></li>
<li>360 DNS：<code>101.226.4.6</code> 或 <code>123.125.81.6</code></li>
</ul>
<h2>参考资料</h2>
<ul>
<li><a href="https://blog.csdn.net/baidu_37964071/article/details/80500825" target="_blank" rel="noopener noreferrer nofollow">DNS（域名解析协议）详解</a></li>
<li><a href="https://www.tuicool.com/articles/V7JN32Z" target="_blank" rel="noopener noreferrer nofollow">从输入 URL 到页面加载完成的过程中都发生了什么</a></li>
<li><a href="https://www.cnblogs.com/coco1s/p/5365179.html" target="_blank" rel="noopener noreferrer nofollow">前端性能：浅谈域名发散与域名收敛</a></li>
<li><a href="https://segmentfault.com/a/1190000004641599" target="_blank" rel="noopener noreferrer nofollow">域名收敛：前端优化</a></li>
<li><a href="https://www.cnblogs.com/zhangchengye/p/5368398.html" target="_blank" rel="noopener noreferrer nofollow">DNS 解析过程与域名收敛、域名发散、SPDY 应用</a></li>
<li><a href="https://help.aliyun.com/knowledge_detail/39834.html" target="_blank" rel="noopener noreferrer nofollow">解析生效测试方法</a></li>
<li><a href="https://github.com/amandakelake/blog/issues/50" target="_blank" rel="noopener noreferrer nofollow">【性能优化】DNS 预解析</a></li>
</ul>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
