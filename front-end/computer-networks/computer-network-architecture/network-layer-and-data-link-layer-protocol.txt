1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"ToCgoFiTXvECVEVLCeZww","p":"","c":["","front-end","computer-networks","computer-network-architecture","network-layer-and-data-link-layer-protocol"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","computer-networks/computer-network-architecture/network-layer-and-data-link-layer-protocol","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","computer-networks/computer-network-architecture/network-layer-and-data-link-layer-protocol","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Lckvg2G1nvFvsM7U7Yirx",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T2243,<h1>网络层与数据链路层协议</h1>
<p>网络层用来处理在网络上流动的数据包（数据包：网络上传输的最小数据单位）。网络层规定在众多选项中通过怎样的路径（传输线路）到达对方的计算机，把数据包传输给对方。</p>
<p>该层中最突出的协议是 Internet Protocol（IP），因此该层也称为 IP 层。IP 的核心是两个主要功能：&lt;span style=&quot;font-weight:bold;color:red&quot;&gt;地址&lt;/span&gt; 和 &lt;span style=&quot;font-weight:bold;color:red&quot;&gt;路由&lt;/span&gt;。</p>
<p>IP 协议是 TCP / IP 协议的核心，所有的 TCP、UDP、IMCP、IGMP 的数据都以 IP 数据格式传输。要注意的是，IP 不是可靠的协议，这是指 IP 协议没有提供一种数据未传达以后的处理机制，这被认为是上层协议：TCP 或 UDP 要做的事情。</p>
<p>网络层功能：</p>
<ul>
<li>IP 寻址</li>
<li>选路</li>
<li>封装打包</li>
<li>分片</li>
</ul>
<p>数据链路层功能：</p>
<ul>
<li>逻辑链路控制</li>
<li>媒体访问控制</li>
<li>封装链路层帧</li>
<li>MAC 寻址</li>
<li>差错检测与处理</li>
<li>定义物理层标准</li>
</ul>
<h2>IPv4 分类地址</h2>
<p>在数据链路层中我们一般通过 MAC 地址来识别不同的节点，而在 IP 层我们也要有一个类似的地址标识，这就是 IP 地址。</p>
<p>32 位 IP 地址（IPv4 地址的点分十进制表示）分为网络位和地址位，这样做可以减少路由器中路由表记录的数目，有了网络地址，就可以限定拥有相同网络地址的终端都在同一个范围内，那么路由表只需要维护一条这个网络地址的方向，就可以找到相应的这些终端了。</p>
<p>当互联网规律很小时，类别信息被编码进 IP 地址：</p>
<table>
<thead>
<tr>
<th style="text-align:left">IP 地址类别</th>
<th style="text-align:left">首字节</th>
<th style="text-align:left">网络号 Bit 数</th>
<th style="text-align:left">主机号 Bit 数</th>
<th style="text-align:left">理论地址范围</th>
<th style="text-align:left">预期用途</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">A 类地址</td>
<td style="text-align:left"><code>0xxx xxxx</code></td>
<td style="text-align:left">8</td>
<td style="text-align:left">24</td>
<td style="text-align:left"><code>1.0.0.0</code> ~ <code>126.255.255.255</code></td>
<td style="text-align:left">特大网络的单播传输</td>
</tr>
<tr>
<td style="text-align:left">B 类地址</td>
<td style="text-align:left"><code>10xx xxxx</code></td>
<td style="text-align:left">16</td>
<td style="text-align:left">16</td>
<td style="text-align:left"><code>128.0.0.0</code> ~ <code>191.255.255.255</code></td>
<td style="text-align:left">数千台中大型网络的单播传输</td>
</tr>
<tr>
<td style="text-align:left">C 类地址</td>
<td style="text-align:left"><code>110x xxxx</code></td>
<td style="text-align:left">24</td>
<td style="text-align:left">8</td>
<td style="text-align:left"><code>192.0.0.0</code> ~ <code>223.255.255.255</code></td>
<td style="text-align:left">250 台主机以下小型网络的单播传输</td>
</tr>
<tr>
<td style="text-align:left">D 类地址</td>
<td style="text-align:left"><code>1110 xxxx</code></td>
<td style="text-align:left">n/a</td>
<td style="text-align:left">n/a</td>
<td style="text-align:left"><code>224.0.0.0</code> ~ <code>239.255.255.255</code></td>
<td style="text-align:left">IP 多播</td>
</tr>
<tr>
<td style="text-align:left">E 类地址</td>
<td style="text-align:left"><code>1111 xxxx</code></td>
<td style="text-align:left">n/a</td>
<td style="text-align:left">n/a</td>
<td style="text-align:left"><code>240.0.0.0</code> ~ <code>255.255.255.255</code></td>
<td style="text-align:left">预留实验用</td>
</tr>
</tbody>
</table>
<h2>CIDR 子网掩码</h2>
<p>无类别域间路由（Classless Inter-Domain Routing，CIDR）是一个用于给用户分配 IP 地址以及在互联网上有效地路由 IP 数据包的对 IP 地址进行归类的方法。</p>
<p>表示方法：<code>A.B.C.D/N</code>（N 的范围 <code>[0, 32]</code>）</p>
<h2>链路层 MAC 地址</h2>
<ul>
<li>链路层地址 MAC（Media Access Control Address）
<ul>
<li>实现本地网络设备间的直接传输</li>
</ul>
</li>
<li>网络层地址 IP（Internet Protocol address）
<ul>
<li>实现大型网络间的传输</li>
</ul>
</li>
</ul>
<p>查看 MAC 地址：</p>
<pre class="hljs"><code class="language-bash"><span class="hljs-comment"># Window</span>
ipconfig / all

<span class="hljs-comment"># Linux</span>
ifconfig
</code></pre>
<h2>地址解析协议 ARP</h2>
<p>动态地址解析协议（Address Resolution Protocol，ARP）是根据 IP 地址获取 MAC 地址的一种协议。</p>
<p>简单的来说 ARP 的作用就是把 IP 地址映射为物理地址，而与之相反的 RARP（逆向 ARP）就是将物理地址映射为 IP 地址。</p>
<h2>NAT 地址转换</h2>
<p>网络地址转换（Network Address Translation，缩写：NAT；又称网络掩蔽、IP 掩蔽）在计算机网络中是一种在 IP 数据包通过路由器或防火墙时重写来源 IP 地址或目的 IP 地址的技术。这种技术被普遍使用在有多台主机但只通过一个公有 IP 地址访问互联网的私有网络中。它是一个方便且得到了广泛应用的技术。当然，NAT 也让主机之间的通信变得复杂，导致了通信效率的降低。</p>
<h2>IPv6</h2>
<p>网际协议第 6 版（英语：Internet Protocol version 6，缩写：IPv6）是网际协议的最新版本，用作互联网的协议。用它来取代 IPv4 主要是为了解决 IPv4 地址枯竭问题，同时它也在其他方面对于 IPv4 有许多改进。</p>
<p>IPv6 目的：</p>
<ul>
<li>更大的地址空间：128 位长度</li>
<li>更好的地址空间管理</li>
<li>消除 NAT 等寻址技术</li>
<li>更简易的 IP 配置管理</li>
<li>优秀的选路设计</li>
<li>更好的多播支持</li>
<li>安全性</li>
<li>移动性</li>
</ul>
<h3>格式</h3>
<p>IPv6 二进位制下为 128 位长度，以 16 位为一组，每组以冒号 <code>:</code> 隔开，可以分为 8 组，每组以 4 位十六进制方式表示。</p>
<p>例如：<code>2001:0db8:86a3:08d3:1319:8a2e:0370:7344</code> 是一个合法的 IPv6 地址。</p>
<p>类似于 IPv4 的点分十进制，同样也存在点分十六进制的写法，将 8 组 4 位十六进制地址的冒号去除后，每位以点号 <code>.</code> 分组。</p>
<p>例如：<code>2001:0db8:85a3:08d3:1319:8a2e:0370:7344</code> 则记为 <code>2.0.0.1.0.d.b.8.8.5.a.3.0.8.d.3.1.3.1.9.8.a.2.e.0.3.7.0.7.3.4.4</code>，其倒序写法用于 <code>ip6.arpa</code> 子域名记录 IPv6 地址与域名的映射。</p>
<p>同时 IPv6 在某些条件下可以省略：</p>
<ol>
<li>每项数字前导的 0 可以省略，省略后前导数字仍是 0 则继续，例如下组 IPv6 是等价的。</li>
</ol>
<pre class="hljs"><code class="language-bash">2001:0DB8:02de:0000:0000:0000:0000:0e13
2001:DB8:2de:0000:0000:0000:0000:e13
2001:DB8:2de:000:000:000:000:e13
2001:DB8:2de:00:00:00:00:e13
2001:DB8:2de:0:0:0:0:e13
</code></pre>
<ol start="2">
<li>可以用双冒号 <code>::</code> 表示一组 <code>0</code> 或多组连续的 <code>0</code>，但只能出现一次：</li>
</ol>
<ul>
<li>如果四组数字都是零，可以被省略。遵照以上省略规则，下面这两组 IPv6 都是相等的。</li>
</ul>
<pre class="hljs"><code class="language-bash">2001:DB8:2de:0:0:0:0:e13
2001:DB8:2de::e13
2001:0DB8:0000:0000:0000:0000:1428:57ab
2001:0DB8:0000:0000:0000::1428:57ab
2001:0DB8:0:0:0:0:1428:57ab
2001:0DB8:0::0:1428:57ab
2001:0DB8::1428:57ab
</code></pre>
<ul>
<li><code>2001::25de::cade</code> 是非法的，因为双冒号出现了两次。它有可能是下种情形之一，造成无法推断。</li>
</ul>
<pre class="hljs"><code class="language-bash">2001:0000:0000:0000:0000:25de:0000:cade
2001:0000:0000:0000:25de:0000:0000:cade
2001:0000:0000:25de:0000:0000:0000:cade
2001:0000:25de:0000:0000:0000:0000:cade
</code></pre>
<p>如果这个地址实际上是 IPv4 的地址，后 32 位可以用 10 进制数表示；因此 <code>::ffff:192.168.89.9</code> 相等于 <code>::ffff:c0a8:5909</code>。
另外，<code>::ffff:1.2.3.4</code> 格式叫做 IPv4 映射地址。</p>
<p>IPv4 位址可以很容易的转化为 IPv6 格式。举例来说，如果 IPv4 的一个地址为 <code>135.75.43.52</code>（十六进制为 <code>0x874B2B34</code>），它可以被转化为 <code>0000:0000:0000:0000:0000:FFFF:874B:2B34</code> 或者 <code>::FFFF:874B:2B34</code>。同时，还可以使用混合符号（IPv4-compatible address），则地址可以为 <code>::ffff:135.75.43.52</code>。</p>
4:["$","div",null,{"className":"markdown-body","children":[["$","h1",null,{"children":"网络层与数据链路层协议"}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
