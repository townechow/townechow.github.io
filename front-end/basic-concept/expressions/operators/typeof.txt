1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d4dd73d504c89c58.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"1zJy3VHENUSg9vzcRvJ6P","p":"","c":["","front-end","basic-concept","expressions","operators","typeof"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","basic-concept/expressions/operators/typeof","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d4dd73d504c89c58.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","basic-concept/expressions/operators/typeof","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","3vfj-wC61fycu_dQKa5L_",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T21b1,<h1>typeof</h1>
<p><code>typeof</code> 操作符返回一个字符串，表示未经计算的操作数的类型。</p>
<h2>语法</h2>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> operand;
</code></pre>
<h3>参数</h3>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>perand</code></td>
<td>是一个表达式，表示对象或原始值，其类型将被返回</td>
</tr>
</tbody>
</table>
<h3>返回值</h3>
<p>下表总结了 <code>typeof</code> 可能的返回值。</p>
<table>
<thead>
<tr>
<th style="text-align:left">类型</th>
<th style="text-align:left">结果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Undefined</td>
<td style="text-align:left"><code>'undefined'</code></td>
</tr>
<tr>
<td style="text-align:left">Null</td>
<td style="text-align:left"><code>'object'</code></td>
</tr>
<tr>
<td style="text-align:left">Boolean</td>
<td style="text-align:left"><code>'boolean'</code></td>
</tr>
<tr>
<td style="text-align:left">Number</td>
<td style="text-align:left"><code>'number'</code></td>
</tr>
<tr>
<td style="text-align:left">String</td>
<td style="text-align:left"><code>'string'</code></td>
</tr>
<tr>
<td style="text-align:left">Symbol</td>
<td style="text-align:left"><code>'symbol'</code></td>
</tr>
<tr>
<td style="text-align:left">宿主对象</td>
<td style="text-align:left">Implementation-dependent</td>
</tr>
<tr>
<td style="text-align:left">函数对象</td>
<td style="text-align:left"><code>'function'</code></td>
</tr>
<tr>
<td style="text-align:left">任何其他对象</td>
<td style="text-align:left"><code>'object'</code></td>
</tr>
</tbody>
</table>
<h2>示例</h2>
<h3>代码示例</h3>
<h4>Number</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> <span class="hljs-number">37</span> === <span class="hljs-string">&#x27;number&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-number">3.14</span> === <span class="hljs-string">&#x27;number&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Math</span>.<span class="hljs-property">LN2</span> === <span class="hljs-string">&#x27;number&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Infinity</span> === <span class="hljs-string">&#x27;number&#x27;</span>;

<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">NaN</span> === <span class="hljs-string">&#x27;number&#x27;</span>;
<span class="hljs-comment">// 尽管 NaN 是 &quot;Not-A-Number&quot; 的缩写</span>

<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">1</span>) === <span class="hljs-string">&#x27;number&#x27;</span>;
<span class="hljs-comment">// 但不要使用这种形式!</span>
</code></pre>
<h4>String</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> <span class="hljs-string">&#x27;&#x27;</span> === <span class="hljs-string">&#x27;string&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-string">&#x27;bla&#x27;</span> === <span class="hljs-string">&#x27;string&#x27;</span>;

<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">typeof</span> <span class="hljs-number">1</span> === <span class="hljs-string">&#x27;string&#x27;</span>;
<span class="hljs-comment">// typeof 总是返回一个字符串</span>

<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&#x27;abc&#x27;</span>) === <span class="hljs-string">&#x27;string&#x27;</span>;
<span class="hljs-comment">// 但不要使用这种形式!</span>
</code></pre>
<h4>Boolean</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> <span class="hljs-literal">true</span> === <span class="hljs-string">&#x27;boolean&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-literal">false</span> === <span class="hljs-string">&#x27;boolean&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">true</span>) === <span class="hljs-string">&#x27;boolean&#x27;</span>;
<span class="hljs-comment">// 但不要使用这种形式!</span>
</code></pre>
<h4>Symbol</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Symbol</span>() === <span class="hljs-string">&#x27;symbol&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#x27;foo&#x27;</span>) === <span class="hljs-string">&#x27;symbol&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span> === <span class="hljs-string">&#x27;symbol&#x27;</span>;
</code></pre>
<h4>Undefined</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> <span class="hljs-literal">undefined</span> === <span class="hljs-string">&#x27;undefined&#x27;</span>;
<span class="hljs-keyword">typeof</span> declaredButUndefinedVariable === <span class="hljs-string">&#x27;undefined&#x27;</span>;
<span class="hljs-keyword">typeof</span> undeclaredVariable === <span class="hljs-string">&#x27;undefined&#x27;</span>;
</code></pre>
<h4>Object</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> { <span class="hljs-attr">a</span>: <span class="hljs-number">1</span> } === <span class="hljs-string">&#x27;object&#x27;</span>;

<span class="hljs-comment">// 使用Array.isArray 或者 Object.prototype.toString.call</span>
<span class="hljs-comment">// 区分数组,普通对象</span>
<span class="hljs-keyword">typeof</span> [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>] === <span class="hljs-string">&#x27;object&#x27;</span>;

<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>() === <span class="hljs-string">&#x27;object&#x27;</span>;

<span class="hljs-comment">// 下面的容易令人迷惑，不要使用！</span>
<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">true</span>) === <span class="hljs-string">&#x27;object&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">1</span>) === <span class="hljs-string">&#x27;object&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&#x27;abc&#x27;</span>) === <span class="hljs-string">&#x27;object&#x27;</span>;
</code></pre>
<h4>Function</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {} === <span class="hljs-string">&#x27;function&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">C</span> {} === <span class="hljs-string">&#x27;function&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Math</span>.<span class="hljs-property">sin</span> === <span class="hljs-string">&#x27;function&#x27;</span>;
<span class="hljs-keyword">typeof</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Function</span>() === <span class="hljs-string">&#x27;function&#x27;</span>;
</code></pre>
<h3>特殊的 <code>null</code></h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">typeof</span> <span class="hljs-literal">null</span> === <span class="hljs-string">&#x27;object&#x27;</span>;
<span class="hljs-comment">// 从一开始出现 JavaScript 就是这样的</span>
</code></pre>
<p>在 JavaScript 最初的实现中，JavaScript 中的值是由一个表示类型的标签和实际数据值表示的。对象的类型标签是 0。由于 <code>null</code> 代表的是空指针（大多数平台下值为 <code>0x00</code>），因此，<code>null</code> 的类型标签也成为了 0，<code>typeof null</code> 就错误的返回了 <code>&quot;object&quot;</code>。</p>
<p>ECMAScript 提出了一个修复（通过 opt-in），但被拒绝。这将导致 <code>typeof null === 'object'</code>。</p>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
