1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"ToCgoFiTXvECVEVLCeZww","p":"","c":["","front-end","basic-concept","statements-and-declarations","the-for-statement"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","basic-concept/statements-and-declarations/the-for-statement","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","basic-concept/statements-and-declarations/the-for-statement","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","jVjZL5_-SCOc0DrIHkct7",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T127c,<h1>for 语句</h1>
<p><strong>for 语句</strong> 也是一种前测试循环语句，但它具有在执行循环之前初始化变量和定义循环后要执行的代码的能力。</p>
<h2>语法</h2>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">for</span> (initialization; expression; post - loop - expression) {
  <span class="hljs-comment">// statement</span>
}
</code></pre>
<p>参数：</p>
<ul>
<li><code>initialization</code> 初始化表达式：表达式通常会初始化一个或多个循环计数器（变量），但语法上是允许一个任意复杂度的表达式，通常为一条<strong>声明赋值语句</strong>（只在循环开始之前执行一次）。</li>
<li><code>expression</code> 循环条件判断：执行循环语句前的判断语句（通常为比较表达式），若为 <code>true</code> 则执行循环语句，否则则不执行循环语句，并跳出循环语句。</li>
<li><code>post-loop-expression</code> 计数器变量更新：循环执行语句执行后执行的计数器变量更新表达式，更新循环计数器（变量），以进入下一次循环条件判断。</li>
<li><code>statement</code> 循环执行语句：当循环条件满足时所执行的语句，执行完毕后执行计数器变量更新语句（利用 <code>break</code> 、<code>continue</code> 语句除外）。</li>
</ul>
<h2>最佳实践</h2>
<h3>代码示例</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">var</span> count = <span class="hljs-number">10</span>;

<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; count; i++) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);
}
</code></pre>
<h3>从尾部向前循环</h3>
<h3>位数的整倍循环</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-comment">// 五位数的数字</span>
<span class="hljs-keyword">const</span> num = <span class="hljs-number">99999</span>;

<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; num; i *= <span class="hljs-number">10</span>) {
  <span class="hljs-comment">// 被除数 num</span>
  <span class="hljs-comment">// 除数</span>
  <span class="hljs-keyword">const</span> divisor = i * <span class="hljs-number">10</span>;
  <span class="hljs-comment">// 整除部分</span>
  <span class="hljs-keyword">const</span> divided = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(num / divisor);
  <span class="hljs-comment">// 余数</span>
  <span class="hljs-keyword">const</span> remainder = num % divisor;

  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i, divisor);
  <span class="hljs-comment">//    i       divisor</span>
  <span class="hljs-comment">// 1. 1       10</span>
  <span class="hljs-comment">// 2. 10      100</span>
  <span class="hljs-comment">// 3. 100     1000</span>
  <span class="hljs-comment">// 4. 1000    10000</span>
  <span class="hljs-comment">// 5. 10000   100000</span>
}
</code></pre>
<h3>涉及多个变量的循环</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>, j = <span class="hljs-number">10</span>; i &lt; <span class="hljs-number">10</span>; i++, j--) {
  sum += i * j;
}
</code></pre>
<p>若在循环中一次迭代改变多个变量，则必须使用到逗号运算符，它将初始化表达式和自增表达式合并入一个表达式中以用于 <code>for</code> 循环。</p>
<h3>可忽略的表达式</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">tail</span>(<span class="hljs-params">o</span>) {
  <span class="hljs-comment">// 返回链表的最后一个节点对象</span>
  <span class="hljs-keyword">for</span> (; o.<span class="hljs-property">next</span>; o = o.<span class="hljs-property">netx</span> <span class="hljs-comment">/* empty */</span>);
  <span class="hljs-keyword">return</span>; <span class="hljs-comment">// 根据判断 o.next 是不是真值来执行遍历</span>
}
</code></pre>
<p>循环计数器（变量）中一般都是数字，也是最常用的，但不是必需的。<code>for</code> 循环中的三个表达式中的任何一个都可以忽略，但是两个分号必不可少。如果 <code>expression</code> ，那么这将是一个死循环，同样，和 <code>while(true)</code> 类似，死循环的另一种写法是 <code>for(;;)</code>。</p>
4:["$","div",null,{"className":"markdown-body","children":[["$","h1",null,{"children":"for 语句"}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
