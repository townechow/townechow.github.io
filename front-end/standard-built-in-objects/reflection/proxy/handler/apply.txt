1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d4dd73d504c89c58.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"1zJy3VHENUSg9vzcRvJ6P","p":"","c":["","front-end","standard-built-in-objects","reflection","proxy","handler","apply"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","standard-built-in-objects/reflection/proxy/handler/apply","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d4dd73d504c89c58.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","standard-built-in-objects/reflection/proxy/handler/apply","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","_G7iXzMxNxTcr_elkr2tE",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T12d9,<h1>Proxy - handler.apply</h1>
<p><code>handler.apply()</code> 方法主要用于拦截函数的调用、<code>call</code> 和 <code>apply</code> 操作。</p>
<h2>语法</h2>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> proxy = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(target, {
  <span class="hljs-attr">apply</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, context, args</span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Reflect</span>.<span class="hljs-title function_">apply</span>(...<span class="hljs-variable language_">arguments</span>);
  },
});
</code></pre>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>类型</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>target</code></td>
<td>目标对象</td>
<td>function</td>
</tr>
<tr>
<td><code>context</code></td>
<td>被调用的上下文对象</td>
<td>this</td>
</tr>
<tr>
<td><code>args</code></td>
<td>参数列表</td>
<td>typed array</td>
</tr>
</tbody>
</table>
<h2>说明</h2>
<h3>拦截</h3>
<p>该方法会拦截目标对象的以下操作：</p>
<ul>
<li><code>proxy(...args)</code></li>
<li><code>Function.prototype.apply()</code> 和 <code>Function.prototype.call()</code></li>
<li><code>Reflect.apply()</code></li>
</ul>
<h3>约束</h3>
<p>如果违背了以下的约束，<code>proxy</code> 会抛出 TypeError 异常：</p>
<p><code>target</code> 必须是可被调用的，也就是说，它必须是一个函数对象。</p>
<h2>示例</h2>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> proxy = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {}, {
  <span class="hljs-attr">apply</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">target, context, args</span>) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Called:&#x27;</span> + args.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;, &#x27;</span>));
    <span class="hljs-keyword">return</span> args[<span class="hljs-number">0</span>] + args[<span class="hljs-number">1</span>] + args[<span class="hljs-number">2</span>];
  },
});

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">proxy</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>));
<span class="hljs-comment">// &#x27;Called: 1, 2, 3&#x27;</span>
</code></pre>
<p>当 Proxy 的实例 <code>proxy</code> 作为函数调用的时候，就会被 <code>apply</code> 方法拦截，返回一个字符串。</p>
<h3>算术运算</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> twice = {
  <span class="hljs-title function_">apply</span>(<span class="hljs-params">target, context, args</span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Reflect</span>.<span class="hljs-title function_">apply</span>(...args) * <span class="hljs-number">2</span>;
  },
};

<span class="hljs-keyword">const</span> sum = <span class="hljs-keyword">function</span> (<span class="hljs-params">left, right</span>) {
  <span class="hljs-keyword">return</span> left + right;
};

<span class="hljs-keyword">const</span> proxy = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(sum, twice);

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">proxy</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>));
<span class="hljs-comment">// 6</span>

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(proxy.<span class="hljs-title function_">call</span>(<span class="hljs-literal">null</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>));
<span class="hljs-comment">// 22</span>

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(proxy.<span class="hljs-title function_">apply</span>(<span class="hljs-literal">null</span>, [<span class="hljs-number">7</span>, <span class="hljs-number">8</span>]));
<span class="hljs-comment">// 30</span>
</code></pre>
<p>上面代码中，每当执行 <code>proxy</code> 函数（直接调用或 <code>call</code> 和 <code>apply</code> 调用），就会被 <code>apply</code> 方法拦截。</p>
<p>另外，直接调用 <code>Reflect.apply</code> 方法，也会被拦截。</p>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
