1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d4dd73d504c89c58.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"1zJy3VHENUSg9vzcRvJ6P","p":"","c":["","front-end","standard-built-in-objects","indexed-collections","array","prototype","iteration-methods","keys"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/keys","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d4dd73d504c89c58.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/keys","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","4bZi1fucoBcaf6o5bI5aa",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T17d7,<h1>Array.prototype.keys()</h1>
<p><code>Array.prototype.keys()</code> 方法用于获取一个新的 Iterator 对象，它包含数组中每个索引的键。</p>
<h2>语法</h2>
<p>语法：</p>
<pre class="hljs"><code class="language-js">arr.<span class="hljs-title function_">keys</span>();
</code></pre>
<p>类型声明：</p>
<pre class="hljs"><code class="language-ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">IteratorYieldResult</span>&lt;<span class="hljs-title class_">TYield</span>&gt; {
  <span class="hljs-attr">done</span>?: <span class="hljs-literal">false</span>;
  <span class="hljs-attr">value</span>: <span class="hljs-title class_">TYield</span>;
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">IteratorReturnResult</span>&lt;<span class="hljs-title class_">TReturn</span>&gt; {
  <span class="hljs-attr">done</span>: <span class="hljs-literal">true</span>;
  <span class="hljs-attr">value</span>: <span class="hljs-title class_">TReturn</span>;
}

<span class="hljs-keyword">type</span> <span class="hljs-title class_">IteratorResult</span>&lt;T, <span class="hljs-title class_">TReturn</span> = <span class="hljs-built_in">any</span>&gt; = <span class="hljs-title class_">IteratorYieldResult</span>&lt;T&gt; | <span class="hljs-title class_">IteratorReturnResult</span>&lt;<span class="hljs-title class_">TReturn</span>&gt;;

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">Iterator</span>&lt;T, <span class="hljs-title class_">TReturn</span> = <span class="hljs-built_in">any</span>, <span class="hljs-title class_">TNext</span> = undefined&gt; {
  <span class="hljs-comment">// <span class="hljs-doctag">NOTE:</span> &#x27;next&#x27; is defined using a tuple to ensure we report the correct assignability errors in all places.</span>
  <span class="hljs-title function_">next</span>(...<span class="hljs-attr">args</span>: [] | [<span class="hljs-title class_">TNext</span>]): <span class="hljs-title class_">IteratorResult</span>&lt;T, <span class="hljs-title class_">TReturn</span>&gt;;
  <span class="hljs-keyword">return</span>?(<span class="hljs-attr">value</span>?: <span class="hljs-title class_">TReturn</span>): <span class="hljs-title class_">IteratorResult</span>&lt;T, <span class="hljs-title class_">TReturn</span>&gt;;
  <span class="hljs-keyword">throw</span>?(<span class="hljs-attr">e</span>?: <span class="hljs-built_in">any</span>): <span class="hljs-title class_">IteratorResult</span>&lt;T, <span class="hljs-title class_">TReturn</span>&gt;;
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">IterableIterator</span>&lt;T&gt; <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Iterator</span>&lt;T&gt; {
  [<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>](): <span class="hljs-title class_">IterableIterator</span>&lt;T&gt;;
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">Array</span>&lt;T&gt; {
  <span class="hljs-title function_">keys</span>(): <span class="hljs-title class_">IterableIterator</span>&lt;<span class="hljs-built_in">number</span>&gt;;
}
</code></pre>
<p>返回值：</p>
<p>返回 一个新的 Array Iterator 对象。</p>
<h2>代码示例</h2>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>];

<span class="hljs-keyword">let</span> iterator = arr.<span class="hljs-title function_">keys</span>();
<span class="hljs-comment">// undefined</span>

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator);
<span class="hljs-comment">// Array Iterator {}</span>

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());
<span class="hljs-comment">// Object {value: 0, done: false}</span>

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());
<span class="hljs-comment">// Object {value: 1, done: false}</span>

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());
<span class="hljs-comment">// Object {value: 2, done: false}</span>

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(iterator.<span class="hljs-title function_">next</span>());
<span class="hljs-comment">// Object {value: undefined, done: true}</span>
</code></pre>
<p>索引迭代器会包含那些没有对应元素的索引。</p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> arr = [<span class="hljs-string">&#x27;a&#x27;</span>, , <span class="hljs-string">&#x27;c&#x27;</span>];
<span class="hljs-keyword">const</span> sparseKeys = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(arr);
<span class="hljs-keyword">const</span> denseKeys = [...arr.<span class="hljs-title function_">keys</span>()];

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sparseKeys); <span class="hljs-comment">// [&#x27;0&#x27;, &#x27;2&#x27;]</span>

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(denseKeys); <span class="hljs-comment">// [0, 1, 2]</span>
</code></pre>
<h2>参考资料</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/keys" target="_blank" rel="noopener noreferrer nofollow">MDN: Array.prototype.keys</a></li>
<li><a href="https://github.com/microsoft/TypeScript/blob/main/lib/lib.es2015.iterable.d.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript: lib.es2015.iterable.d.ts</a></li>
</ul>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
