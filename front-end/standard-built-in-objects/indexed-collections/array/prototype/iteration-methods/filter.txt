1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"NW9bMA21iAaih0TqCHqj1","p":"","c":["","front-end","standard-built-in-objects","indexed-collections","array","prototype","iteration-methods","filter"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/filter","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/filter","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","8AYy8MwaIbkkVmw4O5TJ6",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T16ef,<h1>Array.prototype.filter()</h1>
<p><code>Array.prototype.filter()</code> 方法创建一个新数组，其包含通过所提供函数实现的测试的所有元素。</p>
<h2>语法</h2>
<p>语法：</p>
<pre class="hljs"><code class="language-js">arr.<span class="hljs-title function_">filter</span>( callback = <span class="hljs-keyword">function</span> (<span class="hljs-params">currentValue, index, arr</span>) {} [, thisArg ] )
</code></pre>
<p>类型声明：</p>
<pre class="hljs"><code class="language-ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Array</span>&lt;T&gt; {
  filter&lt;S <span class="hljs-keyword">extends</span> T&gt;(
    <span class="hljs-attr">predicate</span>: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">value</span>: T, <span class="hljs-attr">index</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">array</span>: T[]</span>) =&gt;</span> value is S,
    <span class="hljs-attr">thisArg</span>?: <span class="hljs-built_in">any</span>
  ): S[];

  <span class="hljs-title function_">filter</span>(<span class="hljs-attr">predicate</span>: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">value</span>: T, <span class="hljs-attr">index</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">array</span>: T[]</span>) =&gt;</span> <span class="hljs-built_in">unknown</span>, <span class="hljs-attr">thisArg</span>?: <span class="hljs-built_in">any</span>): T[];
}
</code></pre>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">说明</th>
<th style="text-align:left">类型</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">callback</td>
<td style="text-align:left">用于判定数组成员的回调函数</td>
<td style="text-align:left">function</td>
</tr>
<tr>
<td style="text-align:left">thisArg</td>
<td style="text-align:left">执行回调函数的 <code>this</code> 值</td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
<p><code>callback</code> 函数的参数：</p>
<ul>
<li><code>currentValue</code>：当前数组中处理的元素</li>
<li><code>index</code>：数组中正处理的当前元素的索引</li>
<li><code>array</code>：被调用的数组</li>
</ul>
<p>返回值：</p>
<p>返回一个新的通过测试的成员的集合的数组。</p>
<h2>方法说明</h2>
<ul>
<li>该方法为数组中的每个成员调用一次回调函数，并利用所有使得回调函数返回 <code>true</code> 或 等价于 <code>true</code> 的值的成员创建一个新数组。回调函数只会在已经赋值的索引上被调用，对于那些已经被删除或者从未被赋值的索引不会被调用。那些没有通过回调函数测试的元素会被跳过，不会被包含在新数组中。</li>
<li>如果提供 <code>thisArg</code> 参数，则它会被作为回调函数被调用时的 <code>this</code> 值。否则，回调函数的 <code>this</code> 值在非严格模式下将是全局对象，严格模式下为 <code>undefined</code>。</li>
<li>遍历的元素范围在第一次调用回调函数之前就已经确定了。在调用该方法之后被添加到数组中的元素不会被 遍历到。如果已经存在的元素被改变了，则他们传入回调函数的值是遍历到它们那一刻的值。被删除或从来未被赋值的元素不会被遍历到。</li>
</ul>
<h2>代码示例</h2>
<h3>基本用法</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">isBigEnough</span> = (<span class="hljs-params">value</span>) =&gt; value &gt;= (<span class="hljs-number">10</span>)[(<span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">130</span>, <span class="hljs-number">44</span>)].<span class="hljs-title function_">filter</span>(isBigEnough);
<span class="hljs-comment">// false</span>
</code></pre>
<h3>排除偶数保留奇数</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>];

arr.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> value % <span class="hljs-number">2</span> !== <span class="hljs-number">0</span>);
<span class="hljs-comment">// [1, 3, 5, 9]</span>
</code></pre>
<h3>清除数组空字符</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">let</span> arr = [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>];

arr.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> value &amp;&amp; value.<span class="hljs-title function_">trim</span>());
<span class="hljs-comment">// [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]</span>
</code></pre>
<h2>参考资料</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" target="_blank" rel="noopener noreferrer nofollow">MDN: Array.prototype.filter</a></li>
<li><a href="https://github.com/microsoft/TypeScript/blob/main/lib/lib.es5.d.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript: lib.es5.d.ts</a></li>
</ul>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
