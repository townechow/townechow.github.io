1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d4dd73d504c89c58.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"1zJy3VHENUSg9vzcRvJ6P","p":"","c":["","front-end","standard-built-in-objects","indexed-collections","array","prototype","iteration-methods","reduceRight"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/reduceRight","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d4dd73d504c89c58.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/reduceRight","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Mec5Zb3JFfCr4621qioI6",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T17d5,<h1>Array.prototype.reduceRight</h1>
<p><code>Array.prototype.reduceRight()</code> 方法接收一个函数作为累加器和数组的每个值（从右到左）将其减少为单个值。</p>
<h2>语法</h2>
<p>语法：</p>
<pre class="hljs"><code class="language-js">arr.<span class="hljs-title function_">reduceRight</span>( callback [, initialValue])
</code></pre>
<p>类型声明：</p>
<pre class="hljs"><code class="language-ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Array</span>&lt;T&gt; {
  <span class="hljs-title function_">reduceRight</span>(
    <span class="hljs-attr">callbackfn</span>: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">previousValue</span>: T, <span class="hljs-attr">currentValue</span>: T, <span class="hljs-attr">currentIndex</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">array</span>: T[]</span>) =&gt;</span> T
  ): T;
  <span class="hljs-title function_">reduceRight</span>(
    <span class="hljs-attr">callbackfn</span>: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">previousValue</span>: T, <span class="hljs-attr">currentValue</span>: T, <span class="hljs-attr">currentIndex</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">array</span>: T[]</span>) =&gt;</span> T,
    <span class="hljs-attr">initialValue</span>: T
  ): T;
  reduceRight&lt;U&gt;(
    <span class="hljs-attr">callbackfn</span>: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">previousValue</span>: U, <span class="hljs-attr">currentValue</span>: T, <span class="hljs-attr">currentIndex</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">array</span>: T[]</span>) =&gt;</span> U,
    <span class="hljs-attr">initialValue</span>: U
  ): U;
}
</code></pre>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">说明</th>
<th style="text-align:left">类型</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">callback</td>
<td style="text-align:left">回调函数，用于遍历数组成员时执行</td>
<td style="text-align:left">function</td>
</tr>
<tr>
<td style="text-align:left">initialValue</td>
<td style="text-align:left">（可选）累加器初始值，用作第一个调用回调函数的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用将报错。</td>
<td style="text-align:left">any</td>
</tr>
</tbody>
</table>
<p><code>callbackfn</code> 函数的参数：</p>
<ul>
<li><code>previousValue</code>：累加器累加回调的返回值，它是上一次调用回调时返回的累积值，或 <code>initialValue</code></li>
<li><code>currentValue</code>：当前数组中处理的元素</li>
<li><code>index</code>：数组中正处理的当前元素的索引</li>
<li><code>array</code>：被调用的数组</li>
</ul>
<p>返回值：</p>
<p>返回函数累计处理的结果。</p>
<h2>代码示例</h2>
<h3>数组求和</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> total = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>].<span class="hljs-title function_">reduceRight</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) {
  <span class="hljs-keyword">return</span> a + b;
});

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(total); <span class="hljs-comment">// 6</span>
</code></pre>
<h3>二维数组扁平化</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> flattened = [
  [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>],
  [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>],
  [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>],
].<span class="hljs-title function_">reduceRight</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) {
  <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">concat</span>(b);
}, []);

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(flattend); <span class="hljs-comment">// [4, 5, 2, 3, 0, 1]</span>
</code></pre>
<h3>reduce 和 reduceRight 区别</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> a = [<span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>];
<span class="hljs-keyword">const</span> left = a.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">prev, cur</span>) =&gt;</span> {
  <span class="hljs-keyword">return</span> prev + cur;
});
<span class="hljs-keyword">const</span> right = a.<span class="hljs-title function_">reduceRight</span>(<span class="hljs-function">(<span class="hljs-params">prev, cur</span>) =&gt;</span> {
  <span class="hljs-keyword">return</span> prev + cur;
});

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(left);
<span class="hljs-comment">// &quot;12345&quot;</span>
<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(right);
<span class="hljs-comment">// &quot;54321&quot;</span>
</code></pre>
<h2>参考资料</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight" target="_blank" rel="noopener noreferrer nofollow">MDN: Array.prototype.reduceRight</a></li>
<li><a href="https://github.com/microsoft/TypeScript/blob/main/lib/lib.es5.d.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript: lib.es5.d.ts</a></li>
</ul>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
