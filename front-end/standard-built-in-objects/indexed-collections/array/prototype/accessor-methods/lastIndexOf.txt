1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"NW9bMA21iAaih0TqCHqj1","p":"","c":["","front-end","standard-built-in-objects","indexed-collections","array","prototype","accessor-methods","lastIndexOf"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/lastIndexOf","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/lastIndexOf","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","sH1D0s7jeTHP1G3LrF7uM",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T12e6,<h1>Array.prototype.lastIndexOf()</h1>
<p><code>Array.prototype.lastIndexOf()</code> 方法用于查找指定数组成员在数组中最后一次出现的位置。</p>
<h2>语法</h2>
<p>语法：</p>
<pre class="hljs"><code class="language-js">arr.<span class="hljs-title function_">lastIndexOd</span>( searchElement [, fromIndex ] )
</code></pre>
<p>类型声明：</p>
<pre class="hljs"><code class="language-ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Array</span>&lt;T&gt; {
  <span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-attr">searchElement</span>: T, <span class="hljs-attr">fromIndex</span>?: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">number</span>;
}
</code></pre>
<p>参考资料：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">说明</th>
<th style="text-align:left">类型</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">searchElement</td>
<td style="text-align:left">需要查找的数组元素</td>
<td style="text-align:left">any</td>
</tr>
<tr>
<td style="text-align:left">fromIndex</td>
<td style="text-align:left">在当前数组中查找的起始索引，默认为 <code>arr.lengt - 1</code></td>
<td style="text-align:left">numer</td>
</tr>
</tbody>
</table>
<p>返回值：</p>
<p>返回值为 <code>Number</code> 类型，返回数组元素在当前数组中最后一次查找到的起始位置（索引）。</p>
<h2>代码示例</h2>
<h3>基本用法</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> arr = [<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>];

<span class="hljs-keyword">const</span> index = arr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">2</span>);
<span class="hljs-comment">// 3</span>

index = arr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">7</span>);
<span class="hljs-comment">// -1</span>

index = arr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>);
<span class="hljs-comment">// 3</span>

index = arr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);
<span class="hljs-comment">// 0</span>

index = arr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">2</span>);
<span class="hljs-comment">// 0</span>

index = arr.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-number">2</span>, -<span class="hljs-number">1</span>);
<span class="hljs-comment">// 3</span>
</code></pre>
<h3>查找所有元素</h3>
<p>下例使用 <code>lastIndexOf</code> 查找到一个成员在数组中所有的索引（下标），并使用 <code>push</code> 将所有添加到另一个数组中。</p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">var</span> indices = [];
<span class="hljs-keyword">var</span> arr = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>];
<span class="hljs-keyword">var</span> element = <span class="hljs-string">&#x27;a&#x27;</span>;
<span class="hljs-keyword">var</span> idx = arr.<span class="hljs-title function_">lastIndexOf</span>(element);

<span class="hljs-keyword">while</span> (idx != -<span class="hljs-number">1</span>) {
  indices.<span class="hljs-title function_">push</span>(idx);
  idx = idx &gt; <span class="hljs-number">0</span> ? arr.<span class="hljs-title function_">lastIndexOf</span>(element, idx - <span class="hljs-number">1</span>) : -<span class="hljs-number">1</span>;
}

<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(indices); <span class="hljs-comment">// Outputs: [4, 2, 0];</span>
</code></pre>
<p>注意：我们要单独处理 <code>idx == 0</code> 时的情况，因为如果是第一个元素，忽略了<code>fromIndex</code> 参数则第一个元素总会被查找。这不同于 <code>indexOf</code> 方法。</p>
<h2>参考资料</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf" target="_blank" rel="noopener noreferrer nofollow">MDN: Array.prototype.lastIndexOf</a></li>
<li><a href="https://github.com/microsoft/TypeScript/blob/main/lib/lib.es5.d.ts" target="_blank" rel="noopener noreferrer nofollow">TypeScript: lib.es5.d.ts</a></li>
</ul>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
