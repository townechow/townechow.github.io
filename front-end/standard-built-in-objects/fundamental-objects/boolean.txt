1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"NW9bMA21iAaih0TqCHqj1","p":"","c":["","front-end","standard-built-in-objects","fundamental-objects","boolean"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","standard-built-in-objects/fundamental-objects/boolean","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","standard-built-in-objects/fundamental-objects/boolean","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","mZNZL4JWenDQngWKCi8kY",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T16c3,<h1>Boolean 对象</h1>
<p>Boolean 内置对象是一个布尔值的对象包装器，表示两个值 <code>true</code> 和 <code>false</code>。</p>
<h2>语法</h2>
<p><strong>构造函数</strong></p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Boolean</span>(value);
</code></pre>
<p><strong>布尔类型转换函数</strong></p>
<pre class="hljs"><code class="language-js"><span class="hljs-title class_">Boolean</span>(value);
</code></pre>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">说明</th>
<th style="text-align:left">类型</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">value</td>
<td style="text-align:left">可选参数。将由布尔对象存放的值或者要转换成布尔值的值</td>
<td style="text-align:left">any</td>
</tr>
</tbody>
</table>
<ul>
<li>当作为一个构造函数（带有运算符 <code>new</code>）调用时，<code>Boolean()</code> 将把它的参数转换成一个布尔值，并且返回一个包含该值的 Boolean 对象。</li>
<li>如果作为一个函数（不带有运算符 <code>new</code>）调用时，<code>Boolean()</code> 只将把它的参数转换成一个原始的布尔值，并且返回这个值。</li>
</ul>
<h2>描述</h2>
<ul>
<li>若 Boolean 构造函数的参数不是一个布尔值，则该参数会被转换成一个布尔值</li>
<li>若参数是 <code>0</code>、<code>-0</code>、<code>null</code>、<code>false</code>、<code>NaN</code>、<code>undefined</code> 或者 <code>空字符串(&quot;&quot;)</code> 生成的 Boolean 对象的值为 <code>false</code>。其他任何值，包括任何对象或者字符串 <code>&quot;false&quot;</code>， 都会创建一个值为 <code>true</code> 的 Boolean 对象。</li>
<li>不要将原始值 <code>true</code> 和 <code>false</code>，和值为 <code>true</code> 和 <code>false</code> 的 Boolean 对象相混淆。</li>
<li>任何值不为 <code>undefined</code> 或者 <code>null</code> 的对象，包括值为 <code>false</code> 的 Boolean 对象，在条件语句中，其值都将作为 <code>true</code> 来判断。</li>
</ul>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> foo = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">false</span>);

<span class="hljs-keyword">if</span> (foo) {
  <span class="hljs-comment">// ...still works</span>
}
</code></pre>
<p>基本类型的布尔值（Boolean 的原始值）则不受此规则影响</p>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">var</span> foo = <span class="hljs-literal">false</span>;
<span class="hljs-keyword">if</span> (foo) {
  <span class="hljs-comment">// ...not works</span>
}
</code></pre>
<p>不要通过新建 Boolean 对象的方法将一个非布尔值转化成布尔值，可直接使用 Boolean 函数才是正确的。</p>
<pre class="hljs"><code class="language-js"><span class="hljs-comment">// Bad</span>
<span class="hljs-keyword">var</span> bad = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Boolean</span>(expression);

<span class="hljs-comment">// Good</span>
<span class="hljs-keyword">var</span> good = <span class="hljs-title class_">Boolean</span>(expression);
</code></pre>
<h2>示例</h2>
<p>创建值为 <code>false</code> 的 Boolean 对象</p>
<pre class="hljs"><code class="language-js"><span class="hljs-comment">// no param</span>
<span class="hljs-keyword">var</span> bNoParam = <span class="hljs-title class_">Boolean</span>();
<span class="hljs-comment">// 0</span>
<span class="hljs-keyword">var</span> bZero = <span class="hljs-title class_">Boolean</span>(<span class="hljs-number">0</span>);
<span class="hljs-comment">// null</span>
<span class="hljs-keyword">var</span> bNull = <span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">null</span>);
<span class="hljs-comment">// &#x27;&#x27;</span>
<span class="hljs-keyword">var</span> bEmptyString = <span class="hljs-title class_">Boolean</span>(<span class="hljs-string">&#x27;&#x27;</span>);
<span class="hljs-comment">// undefined</span>
<span class="hljs-keyword">var</span> bUndefined = <span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">undefined</span>);
<span class="hljs-comment">// false</span>
<span class="hljs-keyword">var</span> bfalse = <span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">false</span>);
</code></pre>
<p>创建值为 <code>true</code> 的 Boolean 对象</p>
<pre class="hljs"><code class="language-js"><span class="hljs-comment">// true</span>
<span class="hljs-keyword">var</span> btrue = <span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">true</span>);
<span class="hljs-comment">// string true</span>
<span class="hljs-keyword">var</span> btrueString = <span class="hljs-title class_">Boolean</span>(<span class="hljs-string">&#x27;true&#x27;</span>);
<span class="hljs-comment">// string false</span>
<span class="hljs-keyword">var</span> bfalseString = <span class="hljs-title class_">Boolean</span>(<span class="hljs-string">&#x27;false&#x27;</span>);
<span class="hljs-comment">// string</span>
<span class="hljs-keyword">var</span> bSuLin = <span class="hljs-title class_">Boolean</span>(<span class="hljs-string">&#x27;Su Lin&#x27;</span>);
<span class="hljs-comment">// array</span>
<span class="hljs-keyword">var</span> bArrayProto = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Boolean</span>([]);
<span class="hljs-comment">// object</span>
<span class="hljs-keyword">var</span> bObjProto = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Boolean</span>({});
</code></pre>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
