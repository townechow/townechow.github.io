1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
4:I[2383,["173","static/chunks/173-bec6a7171f0a18ea.js","973","static/chunks/app/front-end/layout-a1b05212ed9e5fc8.js"],"default"]
6:I[6213,[],"OutletBoundary"]
8:I[6213,[],"MetadataBoundary"]
a:I[6213,[],"ViewportBoundary"]
c:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d498c84e4ab246b3.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/bcf94c9592804980.css","style"]
:HL["/_next/static/css/a76f55c7d362b05c.css","style"]
0:{"P":null,"b":"b_QXo_AvRK1xXBItfwLyr","p":"","c":["","front-end","standard-built-in-objects","control-abstraction-objects","generator","generator-async"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","standard-built-in-objects/control-abstraction-objects/generator/generator-async","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d498c84e4ab246b3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/bcf94c9592804980.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a76f55c7d362b05c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"className":"front-end_main__QEFaG","children":[["$","$L4",null,{"tree":[{"name":"基本语法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/index.md","uri":"front-end/basic-concept/index","children":[{"name":"data-types","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/data-types","uri":"","children":[{"name":"数据类型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/data-types/data-types.md","uri":"front-end/basic-concept/data-types/data-types","children":[]},{"name":"类型检测","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/data-types/type-check.md","uri":"front-end/basic-concept/data-types/type-check","children":[]},{"name":"类型转换","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/data-types/type-conversion.md","uri":"front-end/basic-concept/data-types/type-conversion","children":[]}]},{"name":"expressions","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions","uri":"","children":[{"name":"expressions","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/expressions","uri":"","children":[{"name":"数组初始化表达式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/expressions/array-initializer.md","uri":"front-end/basic-concept/expressions/expressions/array-initializer","children":[]},{"name":"字面量","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/expressions/literal.md","uri":"front-end/basic-concept/expressions/expressions/literal","children":[]},{"name":"对象初始化表达式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/expressions/object-initializer.md","uri":"front-end/basic-concept/expressions/expressions/object-initializer","children":[]},{"name":"属性访问器","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/expressions/property-accessors.md","uri":"front-end/basic-concept/expressions/expressions/property-accessors","children":[]}]},{"name":"operators","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators","uri":"","children":[{"name":"算术运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/arithmetic-operators.md","uri":"front-end/basic-concept/expressions/operators/arithmetic-operators","children":[]},{"name":"赋值运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/assignment-operators.md","uri":"front-end/basic-concept/expressions/operators/assignment-operators","children":[]},{"name":"位运算移位运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/bitwise-operators.md","uri":"front-end/basic-concept/expressions/operators/bitwise-operators","children":[]},{"name":"逗号运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/comma-operator.md","uri":"front-end/basic-concept/expressions/operators/comma-operator","children":[]},{"name":"比较运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/comparation-operators.md","uri":"front-end/basic-concept/expressions/operators/comparation-operators","children":[]},{"name":"条件运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/conditional-operator.md","uri":"front-end/basic-concept/expressions/operators/conditional-operator","children":[]},{"name":"delete","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/delete.md","uri":"front-end/basic-concept/expressions/operators/delete","children":[]},{"name":"解构赋值","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/detructing-assignment.md","uri":"front-end/basic-concept/expressions/operators/detructing-assignment","children":[]},{"name":"in","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/in.md","uri":"front-end/basic-concept/expressions/operators/in","children":[]},{"name":"instanceof","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/instanceof.md","uri":"front-end/basic-concept/expressions/operators/instanceof","children":[]},{"name":"逻辑运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/logical-operators.md","uri":"front-end/basic-concept/expressions/operators/logical-operators","children":[]},{"name":"运算符优先级","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/operators-precedence.md","uri":"front-end/basic-concept/expressions/operators/operators-precedence","children":[]},{"name":"扩展运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/spread-operator.md","uri":"front-end/basic-concept/expressions/operators/spread-operator","children":[]},{"name":"字符串运算符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/string-operator.md","uri":"front-end/basic-concept/expressions/operators/string-operator","children":[]},{"name":"分组表达式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/the-grouping-operator.md","uri":"front-end/basic-concept/expressions/operators/the-grouping-operator","children":[]},{"name":"typeof","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/typeof.md","uri":"front-end/basic-concept/expressions/operators/typeof","children":[]},{"name":"更新表达式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/update-expressions.md","uri":"front-end/basic-concept/expressions/operators/update-expressions","children":[]},{"name":"void","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/expressions/operators/void.md","uri":"front-end/basic-concept/expressions/operators/void","children":[]}]}]},{"name":"lexical-grammar","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/lexical-grammar","uri":"","children":[{"name":"词法语法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/lexical-grammar/lexical-grammar.md","uri":"front-end/basic-concept/lexical-grammar/lexical-grammar","children":[]}]},{"name":"statements-and-declarations","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations","uri":"","children":[{"name":"块语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/block.md","uri":"front-end/basic-concept/statements-and-declarations/block","children":[]},{"name":"变量声明","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/declarations-and-the-variable-statement.md","uri":"front-end/basic-concept/statements-and-declarations/declarations-and-the-variable-statement","children":[]},{"name":"label 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/labelled-statements.md","uri":"front-end/basic-concept/statements-and-declarations/labelled-statements","children":[]},{"name":"break 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-break-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-break-statement","children":[]},{"name":"continue 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-continue-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-continue-statement","children":[]},{"name":"do...while 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-do-while-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-do-while-statement","children":[]},{"name":"for...in 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-for-in-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-for-in-statement","children":[]},{"name":"for...of 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-for-of-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-for-of-statement","children":[]},{"name":"for 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-for-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-for-statement","children":[]},{"name":"if 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-if-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-if-statement","children":[]},{"name":"return 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-return-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-return-statement","children":[]},{"name":"switch 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-switch-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-switch-statement","children":[]},{"name":"throw 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-throw-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-throw-statement","children":[]},{"name":"try-catch 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-try-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-try-statement","children":[]},{"name":"while 语句","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/basic-concept/statements-and-declarations/the-while-statement.md","uri":"front-end/basic-concept/statements-and-declarations/the-while-statement","children":[]}]}]},{"name":"BOM 浏览器对象模型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/index.md","uri":"front-end/browser-object-model/index","children":[{"name":"binary-data-and-files","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files","uri":"","children":[{"name":"文件应用","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/application.md","uri":"front-end/browser-object-model/binary-data-and-files/application","children":[]},{"name":"base64","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/base64.md","uri":"front-end/browser-object-model/binary-data-and-files/base64","children":[]},{"name":"Blob API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/blob.md","uri":"front-end/browser-object-model/binary-data-and-files/blob","children":[]},{"name":"DataTransfer API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/data-transfer.md","uri":"front-end/browser-object-model/binary-data-and-files/data-transfer","children":[]},{"name":"FileList API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/file-list.md","uri":"front-end/browser-object-model/binary-data-and-files/file-list","children":[]},{"name":"FileReaderSync API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/file-reader-sync.md","uri":"front-end/browser-object-model/binary-data-and-files/file-reader-sync","children":[]},{"name":"FileReader API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/file-reader.md","uri":"front-end/browser-object-model/binary-data-and-files/file-reader","children":[]},{"name":"File API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/file.md","uri":"front-end/browser-object-model/binary-data-and-files/file","children":[]},{"name":"FormData API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/form-data.md","uri":"front-end/browser-object-model/binary-data-and-files/form-data","children":[]},{"name":"URL API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/binary-data-and-files/url.md","uri":"front-end/browser-object-model/binary-data-and-files/url","children":[]}]},{"name":"browser-working-principle","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle","uri":"","children":[{"name":"浏览器架构","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/browser-architecture.md","uri":"front-end/browser-object-model/browser-working-principle/browser-architecture","children":[]},{"name":"浏览器事件处理","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/browser-event.md","uri":"front-end/browser-object-model/browser-working-principle/browser-event","children":[]},{"name":"合并","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/composite.md","uri":"front-end/browser-object-model/browser-working-principle/composite","children":[]},{"name":"渲染树构建","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/construction-of-render-tree.md","uri":"front-end/browser-object-model/browser-working-principle/construction-of-render-tree","children":[]},{"name":"构建对象模型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/construction-of-the-object-model.md","uri":"front-end/browser-object-model/browser-working-principle/construction-of-the-object-model","children":[]},{"name":"布局","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/layout.md","uri":"front-end/browser-object-model/browser-working-principle/layout","children":[]},{"name":"绘制","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/paint.md","uri":"front-end/browser-object-model/browser-working-principle/paint","children":[]},{"name":"脚本异步加载","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/script-loading-asynchronously.md","uri":"front-end/browser-object-model/browser-working-principle/script-loading-asynchronously","children":[]},{"name":"渲染进程的内部机制","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/browser-working-principle/workflow.md","uri":"front-end/browser-object-model/browser-working-principle/workflow","children":[]}]},{"name":"connectivity","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity","uri":"","children":[{"name":"Beacon API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/beacon.md","uri":"front-end/browser-object-model/connectivity/beacon","children":[]},{"name":"EventSource","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/event-source.md","uri":"front-end/browser-object-model/connectivity/event-source","children":[]},{"name":"Fetch API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/featch.md","uri":"front-end/browser-object-model/connectivity/featch","children":[]},{"name":"PostMessage","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/post-message.md","uri":"front-end/browser-object-model/connectivity/post-message","children":[]},{"name":"Progress Event","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/progress-event.md","uri":"front-end/browser-object-model/connectivity/progress-event","children":[]},{"name":"Server-sent Events","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/server-sent-events.md","uri":"front-end/browser-object-model/connectivity/server-sent-events","children":[]},{"name":"WebRTC","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/web-real-time-communication.md","uri":"front-end/browser-object-model/connectivity/web-real-time-communication","children":[]},{"name":"WebSocket","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/web-socket.md","uri":"front-end/browser-object-model/connectivity/web-socket","children":[]},{"name":"XHMLHttpRequest API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/connectivity/xmlhttprequest.md","uri":"front-end/browser-object-model/connectivity/xmlhttprequest","children":[]}]},{"name":"device","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/device","uri":"","children":[{"name":"摄录设备","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/device/camera.md","uri":"front-end/browser-object-model/device/camera","children":[]},{"name":"地理定位 Geolocation API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/device/geolocation.md","uri":"front-end/browser-object-model/device/geolocation","children":[]},{"name":"位置信息 Position API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/device/position.md","uri":"front-end/browser-object-model/device/position","children":[]}]},{"name":"integration","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/integration","uri":"","children":[{"name":"全屏 Fullscreen API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/integration/full-screen.md","uri":"front-end/browser-object-model/integration/full-screen","children":[]}]},{"name":"observer","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/observer","uri":"","children":[{"name":"IntersectionObserver API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/observer/intersection-observer.md","uri":"front-end/browser-object-model/observer/intersection-observer","children":[]},{"name":"MutationObserver API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/observer/mutation-observer.md","uri":"front-end/browser-object-model/observer/mutation-observer","children":[]}]},{"name":"offline-and-storage","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/offline-and-storage","uri":"","children":[{"name":"浏览器缓存机制","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/offline-and-storage/browser-cache.md","uri":"front-end/browser-object-model/offline-and-storage/browser-cache","children":[]},{"name":"Cookie","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/offline-and-storage/cookie.md","uri":"front-end/browser-object-model/offline-and-storage/cookie","children":[]},{"name":"HTTP Cache","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/offline-and-storage/http-cache.md","uri":"front-end/browser-object-model/offline-and-storage/http-cache","children":[]},{"name":"IndexedDB","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/offline-and-storage/indexedDB.md","uri":"front-end/browser-object-model/offline-and-storage/indexedDB","children":[]},{"name":"Service Worker","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/offline-and-storage/service-worker.md","uri":"front-end/browser-object-model/offline-and-storage/service-worker","children":[]},{"name":"Web Storage","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/offline-and-storage/web-storage.md","uri":"front-end/browser-object-model/offline-and-storage/web-storage","children":[]},{"name":"Web Workers","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/offline-and-storage/web-workers.md","uri":"front-end/browser-object-model/offline-and-storage/web-workers","children":[]}]},{"name":"performance","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/performance","uri":"","children":[{"name":"Performance Navifation API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/performance/performance-navigation-timing.md","uri":"front-end/browser-object-model/performance/performance-navigation-timing","children":[]},{"name":"Performance Resource Timing API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/performance/performance-resource-timing.md","uri":"front-end/browser-object-model/performance/performance-resource-timing","children":[]},{"name":"Performance API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/performance/performance.md","uri":"front-end/browser-object-model/performance/performance","children":[]},{"name":"性能时间线","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/performance/perfromance-timeline.md","uri":"front-end/browser-object-model/performance/perfromance-timeline","children":[]}]},{"name":"web-event","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/web-event","uri":"","children":[{"name":"对话框 API","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/web-event/dialog.md","uri":"front-end/browser-object-model/web-event/dialog","children":[]},{"name":"getComputedStyle","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/web-event/get-computed-style.md","uri":"front-end/browser-object-model/web-event/get-computed-style","children":[]},{"name":"lifecycle","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/web-event/lifecycle.md","uri":"front-end/browser-object-model/web-event/lifecycle","children":[]},{"name":"requestAnimationFrame","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/web-event/request-animation-frame.md","uri":"front-end/browser-object-model/web-event/request-animation-frame","children":[]},{"name":"requestIdleCallback","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/web-event/request-idle-callback.md","uri":"front-end/browser-object-model/web-event/request-idle-callback","children":[]},{"name":"setInterval","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/web-event/set-interval.md","uri":"front-end/browser-object-model/web-event/set-interval","children":[]},{"name":"setTimeout","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/web-event/set-time-out.md","uri":"front-end/browser-object-model/web-event/set-time-out","children":[]}]},{"name":"window","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window","uri":"","children":[{"name":"History 对象","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window/history.md","uri":"front-end/browser-object-model/window/history","children":[]},{"name":"Location 对象","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window/location.md","uri":"front-end/browser-object-model/window/location","children":[]},{"name":"Navigator 对象","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window/navigator.md","uri":"front-end/browser-object-model/window/navigator","children":[]},{"name":"Screen 对象","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window/screen.md","uri":"front-end/browser-object-model/window/screen","children":[]},{"name":"Window 对象","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window/window.md","uri":"front-end/browser-object-model/window/window","children":[]}]},{"name":"window-position","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window-position","uri":"","children":[{"name":"文档视图和元素视图","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window-position/document-view-and-element-view.md","uri":"front-end/browser-object-model/window-position/document-view-and-element-view","children":[]},{"name":"Element 文档元素视图属性","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window-position/element-view-properties.md","uri":"front-end/browser-object-model/window-position/element-view-properties","children":[]},{"name":"鼠标位置","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window-position/mouse-position.md","uri":"front-end/browser-object-model/window-position/mouse-position","children":[]},{"name":"Screen 对象视图属性","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window-position/screen-view-properties.md","uri":"front-end/browser-object-model/window-position/screen-view-properties","children":[]},{"name":"Window 对象视图属性","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/browser-object-model/window-position/window-view-properties.md","uri":"front-end/browser-object-model/window-position/window-view-properties","children":[]}]}]},{"name":"计算机网络","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/index.md","uri":"front-end/computer-networks/index","children":[{"name":"computer-network-architecture","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/computer-network-architecture","uri":"","children":[{"name":"CDN 内容分发网络","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/computer-network-architecture/cdn.md","uri":"front-end/computer-networks/computer-network-architecture/cdn","children":[]},{"name":"计算机网络体系","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/computer-network-architecture/computer-networks.md","uri":"front-end/computer-networks/computer-network-architecture/computer-networks","children":[]},{"name":"DNS 域名解析系统","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/computer-network-architecture/dns.md","uri":"front-end/computer-networks/computer-network-architecture/dns","children":[]},{"name":"hls","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/computer-network-architecture/hls.md","uri":"front-end/computer-networks/computer-network-architecture/hls","children":[]},{"name":"网络层与数据链路层协议","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/computer-network-architecture/network-layer-and-data-link-layer-protocol.md","uri":"front-end/computer-networks/computer-network-architecture/network-layer-and-data-link-layer-protocol","children":[]},{"name":"传输层协议","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/computer-network-architecture/transport-layer-protocol.md","uri":"front-end/computer-networks/computer-network-architecture/transport-layer-protocol","children":[]}]},{"name":"http","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http","uri":"","children":[{"name":"HTTP CSP 内容安全策略","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/content-security-policy.md","uri":"front-end/computer-networks/http/content-security-policy","children":[]},{"name":"HTTP CORS 跨域资源共享","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/cross-origin-resource-sharing.md","uri":"front-end/computer-networks/http/cross-origin-resource-sharing","children":[]},{"name":"HTTP 连接","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http-connection.md","uri":"front-end/computer-networks/http/http-connection","children":[]},{"name":"HTTP 内容协商","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http-content-negotiation.md","uri":"front-end/computer-networks/http/http-content-negotiation","children":[]},{"name":"HTTP 首部字段","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http-headers.md","uri":"front-end/computer-networks/http/http-headers","children":[]},{"name":"HTTP 报文格式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http-message.md","uri":"front-end/computer-networks/http/http-message","children":[]},{"name":"HTTP 资源标识","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http-resource-and-uris.md","uri":"front-end/computer-networks/http/http-resource-and-uris","children":[]},{"name":"HTTP 状态码","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http-status-code.md","uri":"front-end/computer-networks/http/http-status-code","children":[]},{"name":"HTTP","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http.md","uri":"front-end/computer-networks/http/http","children":[]},{"name":"HTTP2","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http2.md","uri":"front-end/computer-networks/http/http2","children":[]},{"name":"HTTP3","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/http3.md","uri":"front-end/computer-networks/http/http3","children":[]},{"name":"HTTPS","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/http/https.md","uri":"front-end/computer-networks/http/https","children":[]}]},{"name":"web-security","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/web-security","uri":"","children":[{"name":"CSRF 跨站请求伪造攻击","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/web-security/csrf.md","uri":"front-end/computer-networks/web-security/csrf","children":[]},{"name":"DDoS 攻击","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/web-security/ddos.md","uri":"front-end/computer-networks/web-security/ddos","children":[]},{"name":"流量劫持","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/web-security/hijacking.md","uri":"front-end/computer-networks/web-security/hijacking","children":[]},{"name":"同源策略","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/web-security/same-origin-policy.md","uri":"front-end/computer-networks/web-security/same-origin-policy","children":[]},{"name":"SQL 注入攻击","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/web-security/sql-injection.md","uri":"front-end/computer-networks/web-security/sql-injection","children":[]},{"name":"XSS 跨站脚本攻击","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/computer-networks/web-security/xss.md","uri":"front-end/computer-networks/web-security/xss","children":[]}]}]},{"name":"核心模块","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/index.md","uri":"front-end/core-modules/index","children":[{"name":"ecmascript-function-objects","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects","uri":"","children":[{"name":"function-arguments","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-arguments","uri":"","children":[{"name":"默认参数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-arguments/default-parameters.md","uri":"front-end/core-modules/ecmascript-function-objects/function-arguments/default-parameters","children":[]},{"name":"函数参数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-arguments/function-parameters.md","uri":"front-end/core-modules/ecmascript-function-objects/function-arguments/function-parameters","children":[]},{"name":"剩余参数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-arguments/rest-parameters.md","uri":"front-end/core-modules/ecmascript-function-objects/function-arguments/rest-parameters","children":[]}]},{"name":"function-calls","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-calls","uri":"","children":[{"name":"间接调用模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-calls/apply-invocation-pattern.md","uri":"front-end/core-modules/ecmascript-function-objects/function-calls/apply-invocation-pattern","children":[]},{"name":"构造函数调用模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-calls/constructor-invocation-pattern.md","uri":"front-end/core-modules/ecmascript-function-objects/function-calls/constructor-invocation-pattern","children":[]},{"name":"函数调用模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-calls/function-invocation-pattern.md","uri":"front-end/core-modules/ecmascript-function-objects/function-calls/function-invocation-pattern","children":[]},{"name":"方法调用模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-calls/method-invocation-pattern.md","uri":"front-end/core-modules/ecmascript-function-objects/function-calls/method-invocation-pattern","children":[]}]},{"name":"function-declarations","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-declarations","uri":"","children":[{"name":"箭头函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-declarations/arrow-function-definitions.md","uri":"front-end/core-modules/ecmascript-function-objects/function-declarations/arrow-function-definitions","children":[]},{"name":"异步函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-declarations/async-function-definitions.md","uri":"front-end/core-modules/ecmascript-function-objects/function-declarations/async-function-definitions","children":[]},{"name":"函数声明定义","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-declarations/function-definitions.md","uri":"front-end/core-modules/ecmascript-function-objects/function-declarations/function-definitions","children":[]}]},{"name":"function-internal","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-internal","uri":"","children":[{"name":"函数存取器","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-internal/function-accessor.md","uri":"front-end/core-modules/ecmascript-function-objects/function-internal/function-accessor","children":[]},{"name":"函数原型对象方法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-internal/function-prototype-object-methods.md","uri":"front-end/core-modules/ecmascript-function-objects/function-internal/function-prototype-object-methods","children":[]},{"name":"函数原型对象属性","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-internal/function-prototype-object-properties.md","uri":"front-end/core-modules/ecmascript-function-objects/function-internal/function-prototype-object-properties","children":[]}]},{"name":"function-types","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types","uri":"","children":[{"name":"回调函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/callback-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/callback-function","children":[]},{"name":"级联函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/cascade-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/cascade-function","children":[]},{"name":"类构造函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/class-structure-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/class-structure-function","children":[]},{"name":"函数防抖","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/debounce.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/debounce","children":[]},{"name":"函数柯里化","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/function-currying.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/function-currying","children":[]},{"name":"高阶函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/hight-order-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/hight-order-function","children":[]},{"name":"惰性函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/lazy-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/lazy-function","children":[]},{"name":"函数记忆","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/memorize-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/memorize-function","children":[]},{"name":"偏函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/partial-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/partial-function","children":[]},{"name":"函数睡眠","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/sleep-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/sleep-function","children":[]},{"name":"构造函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/structure-function.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/structure-function","children":[]},{"name":"函数节流","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/ecmascript-function-objects/function-types/throttle.md","uri":"front-end/core-modules/ecmascript-function-objects/function-types/throttle","children":[]}]}]},{"name":"executable-code-and-execution-contexts","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts","uri":"","children":[{"name":"compilation","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/compilation","uri":"","children":[{"name":"编译阶段","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/compilation/_compilation.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/compilation/_compilation","children":[]},{"name":"块作用域","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/compilation/blocks-as-scopes.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/compilation/blocks-as-scopes","children":[]},{"name":"闭包","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/compilation/closures.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/compilation/closures","children":[]},{"name":"函数作用域","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/compilation/function-as-scopes.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/compilation/function-as-scopes","children":[]},{"name":"声明提升","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/compilation/hoisting.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/compilation/hoisting","children":[]},{"name":"词法作用域","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/compilation/lexical-scope.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/compilation/lexical-scope","children":[]}]},{"name":"concurrency-model","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/concurrency-model","uri":"","children":[{"name":"并发模型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/concurrency-model/concurrency-model.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/concurrency-model/concurrency-model","children":[]},{"name":"事件循环","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/concurrency-model/event-loop.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/concurrency-model/event-loop","children":[]},{"name":"定时器机制","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/concurrency-model/timers-mechanism.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/concurrency-model/timers-mechanism","children":[]}]},{"name":"execution","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/execution","uri":"","children":[{"name":"执行上下文","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/execution/execution-context-stack.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/execution/execution-context-stack","children":[]},{"name":"作用域链","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/execution/scope-chain.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/execution/scope-chain","children":[]},{"name":"当前执行上下文 this","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/execution/this.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/execution/this","children":[]},{"name":"变量对象","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/execution/variable-object.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/execution/variable-object","children":[]}]},{"name":"memory-management","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/memory-management","uri":"","children":[{"name":"垃圾回收","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/memory-management/garbage-collection.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/memory-management/garbage-collection","children":[]},{"name":"内存生命周期","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/memory-management/memory-life-cycle.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/memory-management/memory-life-cycle","children":[]},{"name":"内存模型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/executable-code-and-execution-contexts/memory-management/memory-model.md","uri":"front-end/core-modules/executable-code-and-execution-contexts/memory-management/memory-model","children":[]}]}]},{"name":"modularization","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/modularization","uri":"","children":[{"name":"模块导入/导出的复合写法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/modularization/compound.md","uri":"front-end/core-modules/modularization/compound","children":[]},{"name":"跨模块常量","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/modularization/cross-module-constant.md","uri":"front-end/core-modules/modularization/cross-module-constant","children":[]},{"name":"动态加载","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/modularization/dynamic-import.md","uri":"front-end/core-modules/modularization/dynamic-import","children":[]},{"name":"模块导出 export","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/modularization/export.md","uri":"front-end/core-modules/modularization/export","children":[]},{"name":"模块导入 import","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/modularization/import.md","uri":"front-end/core-modules/modularization/import","children":[]},{"name":"模块化","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/modularization/modularization.md","uri":"front-end/core-modules/modularization/modularization","children":[]},{"name":"模块继承","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/core-modules/modularization/module-inheritance.md","uri":"front-end/core-modules/modularization/module-inheritance","children":[]}]}]},{"name":"设计模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/index.md","uri":"front-end/design-patterns/index","children":[{"name":"behavioral","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral","uri":"","children":[{"name":"职责链模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/chain-of-responsibility.md","uri":"front-end/design-patterns/behavioral/chain-of-responsibility","children":[]},{"name":"命令模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/command.md","uri":"front-end/design-patterns/behavioral/command","children":[]},{"name":"解释器模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/interpreter.md","uri":"front-end/design-patterns/behavioral/interpreter","children":[]},{"name":"迭代器模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/iterator.md","uri":"front-end/design-patterns/behavioral/iterator","children":[]},{"name":"中介者模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/mediator.md","uri":"front-end/design-patterns/behavioral/mediator","children":[]},{"name":"备忘录模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/memento.md","uri":"front-end/design-patterns/behavioral/memento","children":[]},{"name":"观察者模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/observer.md","uri":"front-end/design-patterns/behavioral/observer","children":[]},{"name":"状态模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/state.md","uri":"front-end/design-patterns/behavioral/state","children":[]},{"name":"策略模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/strategy.md","uri":"front-end/design-patterns/behavioral/strategy","children":[]},{"name":"模版方法模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/template-method.md","uri":"front-end/design-patterns/behavioral/template-method","children":[]},{"name":"访问者模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/behavioral/visitor.md","uri":"front-end/design-patterns/behavioral/visitor","children":[]}]},{"name":"creational","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/creational","uri":"","children":[{"name":"单例模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/creational/singleton.md","uri":"front-end/design-patterns/creational/singleton","children":[]}]},{"name":"设计思想与原则","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/design-principles-and-ideas.md","uri":"front-end/design-patterns/design-principles-and-ideas","children":[]},{"name":"structual","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/structual","uri":"","children":[{"name":"适配器模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/structual/adapter.md","uri":"front-end/design-patterns/structual/adapter","children":[]},{"name":"桥接模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/structual/bridge.md","uri":"front-end/design-patterns/structual/bridge","children":[]},{"name":"组合模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/structual/composite.md","uri":"front-end/design-patterns/structual/composite","children":[]},{"name":"装饰者模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/structual/decorator.md","uri":"front-end/design-patterns/structual/decorator","children":[]},{"name":"外观模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/structual/facade.md","uri":"front-end/design-patterns/structual/facade","children":[]},{"name":"享元模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/structual/flyweight.md","uri":"front-end/design-patterns/structual/flyweight","children":[]},{"name":"代理模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/design-patterns/structual/proxy.md","uri":"front-end/design-patterns/structual/proxy","children":[]}]}]},{"name":"DOM 文档对象模型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/index.md","uri":"front-end/document-object-model/index","children":[{"name":"cssom","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/cssom","uri":"","children":[{"name":"CSSStyleDeclaration","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/cssom/css-style-declaration.md","uri":"front-end/document-object-model/cssom/css-style-declaration","children":[]},{"name":"CSSstyleSheet","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/cssom/css-style-sheet.md","uri":"front-end/document-object-model/cssom/css-style-sheet","children":[]}]},{"name":"document","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/document","uri":"","children":[{"name":"DocumentFragment","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/document/document-fragment.md","uri":"front-end/document-object-model/document/document-fragment","children":[]},{"name":"Document 方法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/document/document-methods.md","uri":"front-end/document-object-model/document/document-methods","children":[]},{"name":"Document 属性","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/document/document-properties.md","uri":"front-end/document-object-model/document/document-properties","children":[]},{"name":"Document","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/document/document.md","uri":"front-end/document-object-model/document/document","children":[]}]},{"name":"dom","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dom","uri":"","children":[{"name":"AudioContext","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dom/audio-context.md","uri":"front-end/document-object-model/dom/audio-context","children":[]},{"name":"DOMRect","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dom/dom-rect.md","uri":"front-end/document-object-model/dom/dom-rect","children":[]},{"name":"文档对象模型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dom/dom.md","uri":"front-end/document-object-model/dom/dom","children":[]},{"name":"EventTarget","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dom/event-target.md","uri":"front-end/document-object-model/dom/event-target","children":[]},{"name":"global-attributes","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dom/global-attributes.md","uri":"front-end/document-object-model/dom/global-attributes","children":[]},{"name":"节点层次","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dom/hierarchy-of-nodes.md","uri":"front-end/document-object-model/dom/hierarchy-of-nodes","children":[]},{"name":"VideoContext","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dom/video-context.md","uri":"front-end/document-object-model/dom/video-context","children":[]}]},{"name":"dynamic-collection","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dynamic-collection","uri":"","children":[{"name":"DOMTokenList","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dynamic-collection/dom-token-list.md","uri":"front-end/document-object-model/dynamic-collection/dom-token-list","children":[]},{"name":"HTMLCollection","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dynamic-collection/html-collection.md","uri":"front-end/document-object-model/dynamic-collection/html-collection","children":[]},{"name":"NamedNodeMap","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dynamic-collection/named-node-map.md","uri":"front-end/document-object-model/dynamic-collection/named-node-map","children":[]},{"name":"NodeList","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/dynamic-collection/node-list.md","uri":"front-end/document-object-model/dynamic-collection/node-list","children":[]}]},{"name":"element","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element","uri":"","children":[{"name":"Element 方法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/element-methods.md","uri":"front-end/document-object-model/element/element-methods","children":[]},{"name":"Element 属性","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/element-properties.md","uri":"front-end/document-object-model/element/element-properties","children":[]},{"name":"Element","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/element.md","uri":"front-end/document-object-model/element/element","children":[]},{"name":"HTMLAudioElement","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/html-audio-element.md","uri":"front-end/document-object-model/element/html-audio-element","children":[]},{"name":"HTMLElement","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/html-element.md","uri":"front-end/document-object-model/element/html-element","children":[]},{"name":"HTMLIFrameElement","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/html-iframe-element.md","uri":"front-end/document-object-model/element/html-iframe-element","children":[]},{"name":"HTMLImageElement","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/html-image-element.md","uri":"front-end/document-object-model/element/html-image-element","children":[]},{"name":"HTMLMediaElement","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/html-media-element.md","uri":"front-end/document-object-model/element/html-media-element","children":[]},{"name":"HTMLTextAreaElement","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/html-text-area-element.md","uri":"front-end/document-object-model/element/html-text-area-element","children":[]},{"name":"HTMLVideoElement","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/element/html-video-element.md","uri":"front-end/document-object-model/element/html-video-element","children":[]}]},{"name":"events","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events","uri":"","children":[{"name":"事件委托","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-delegation.md","uri":"front-end/document-object-model/events/event-delegation","children":[]},{"name":"事件流","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-flow.md","uri":"front-end/document-object-model/events/event-flow","children":[]},{"name":"事件处理程序","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-handlers-or-listener.md","uri":"front-end/document-object-model/events/event-handlers-or-listener","children":[]},{"name":"event-types","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types","uri":"","children":[{"name":"剪贴板事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/clipboard-events.md","uri":"front-end/document-object-model/events/event-types/clipboard-events","children":[]},{"name":"CSS 动画事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/css-animation-events.md","uri":"front-end/document-object-model/events/event-types/css-animation-events","children":[]},{"name":"CSS 过渡事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/css-transition-events.md","uri":"front-end/document-object-model/events/event-types/css-transition-events","children":[]},{"name":"自定义事件 CustomEvent","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/custom-event.md","uri":"front-end/document-object-model/events/event-types/custom-event","children":[]},{"name":"拖拽事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/drag-and-drop-events.md","uri":"front-end/document-object-model/events/event-types/drag-and-drop-events","children":[]},{"name":"事件类型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/event-types.md","uri":"front-end/document-object-model/events/event-types/event-types","children":[]},{"name":"焦点事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/focus-events.md","uri":"front-end/document-object-model/events/event-types/focus-events","children":[]},{"name":"表单事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/form-events.md","uri":"front-end/document-object-model/events/event-types/form-events","children":[]},{"name":"键盘事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/keyboard-events.md","uri":"front-end/document-object-model/events/event-types/keyboard-events","children":[]},{"name":"媒体事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/media-events.md","uri":"front-end/document-object-model/events/event-types/media-events","children":[]},{"name":"鼠标事件 MouseEvent","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/mouse-event.md","uri":"front-end/document-object-model/events/event-types/mouse-event","children":[]},{"name":"网络事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/network-events.md","uri":"front-end/document-object-model/events/event-types/network-events","children":[]},{"name":"指针事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/pointer-events.md","uri":"front-end/document-object-model/events/event-types/pointer-events","children":[]},{"name":"打印事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/printing-events.md","uri":"front-end/document-object-model/events/event-types/printing-events","children":[]},{"name":"进度条事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/progress-events.md","uri":"front-end/document-object-model/events/event-types/progress-events","children":[]},{"name":"资源事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/resource-events.md","uri":"front-end/document-object-model/events/event-types/resource-events","children":[]},{"name":"会话历史事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/session-history-events.md","uri":"front-end/document-object-model/events/event-types/session-history-events","children":[]},{"name":"存储事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/storage-events.md","uri":"front-end/document-object-model/events/event-types/storage-events","children":[]},{"name":"文本写作事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/text-composition-events.md","uri":"front-end/document-object-model/events/event-types/text-composition-events","children":[]},{"name":"设备事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/the-orientationchange-event.md","uri":"front-end/document-object-model/events/event-types/the-orientationchange-event","children":[]},{"name":"触控事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/touch-events.md","uri":"front-end/document-object-model/events/event-types/touch-events","children":[]},{"name":"用户界面事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/ui-events.md","uri":"front-end/document-object-model/events/event-types/ui-events","children":[]},{"name":"未分类事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/uncategorized-events.md","uri":"front-end/document-object-model/events/event-types/uncategorized-events","children":[]},{"name":"更新事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/update-events.md","uri":"front-end/document-object-model/events/event-types/update-events","children":[]},{"name":"值变化事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/value-change-events.md","uri":"front-end/document-object-model/events/event-types/value-change-events","children":[]},{"name":"视图事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/view-events.md","uri":"front-end/document-object-model/events/event-types/view-events","children":[]},{"name":"WebSocket 事件","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/event-types/websocket-events.md","uri":"front-end/document-object-model/events/event-types/websocket-events","children":[]}]},{"name":"事件对象","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/events/the-event-object.md","uri":"front-end/document-object-model/events/the-event-object","children":[]}]},{"name":"multimedia","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/multimedia","uri":"","children":[{"name":"audio-buffer","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/multimedia/audio-buffer.md","uri":"front-end/document-object-model/multimedia/audio-buffer","children":[]},{"name":"audio-node","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/multimedia/audio-node.md","uri":"front-end/document-object-model/multimedia/audio-node","children":[]},{"name":"audio-track","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/multimedia/audio-track.md","uri":"front-end/document-object-model/multimedia/audio-track","children":[]}]},{"name":"node","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/node","uri":"","children":[{"name":"Node 方法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/node/node-methods.md","uri":"front-end/document-object-model/node/node-methods","children":[]},{"name":"Node 属性","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/node/node-properties.md","uri":"front-end/document-object-model/node/node-properties","children":[]},{"name":"Node","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/document-object-model/node/node.md","uri":"front-end/document-object-model/node/node","children":[]}]}]},{"name":"目录","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/index.md","uri":"front-end/object-oriented-programming/index","children":[{"name":"class-definitions","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/class-definitions","uri":"","children":[{"name":"类的基本语法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/class-definitions/class-basic.md","uri":"front-end/object-oriented-programming/class-definitions/class-basic","children":[]},{"name":"类的继承","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/class-definitions/class-extends.md","uri":"front-end/object-oriented-programming/class-definitions/class-extends","children":[]},{"name":"私有成员","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/class-definitions/class-private-member.md","uri":"front-end/object-oriented-programming/class-definitions/class-private-member","children":[]},{"name":"静态成员","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/class-definitions/class-static-member.md","uri":"front-end/object-oriented-programming/class-definitions/class-static-member","children":[]}]},{"name":"inheritance","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/inheritance","uri":"","children":[{"name":"组合继承","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/inheritance/combination-inheritance.md","uri":"front-end/object-oriented-programming/inheritance/combination-inheritance","children":[]},{"name":"借用构造函数","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/inheritance/constructor-stealing.md","uri":"front-end/object-oriented-programming/inheritance/constructor-stealing","children":[]},{"name":"寄生组合式继承","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/inheritance/parasitic-combination-inheritance.md","uri":"front-end/object-oriented-programming/inheritance/parasitic-combination-inheritance","children":[]},{"name":"寄生式继承","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/inheritance/parasitic-inheritance.md","uri":"front-end/object-oriented-programming/inheritance/parasitic-inheritance","children":[]},{"name":"原型式继承","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/inheritance/prototypal-inheritance.md","uri":"front-end/object-oriented-programming/inheritance/prototypal-inheritance","children":[]},{"name":"原型链","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/inheritance/prototype-chain.md","uri":"front-end/object-oriented-programming/inheritance/prototype-chain","children":[]}]},{"name":"object-creation","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-creation","uri":"","children":[{"name":"组合使用构造函数模式和原型模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-creation/combination-constructor-and-prototype-pattern.md","uri":"front-end/object-oriented-programming/object-creation/combination-constructor-and-prototype-pattern","children":[]},{"name":"稳妥构造函数模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-creation/durable-constructor-pattern.md","uri":"front-end/object-oriented-programming/object-creation/durable-constructor-pattern","children":[]},{"name":"动态原型模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-creation/dynamic-prototype-pattern.md","uri":"front-end/object-oriented-programming/object-creation/dynamic-prototype-pattern","children":[]},{"name":"寄生构造函数模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-creation/parastic-constructor-pattern.md","uri":"front-end/object-oriented-programming/object-creation/parastic-constructor-pattern","children":[]},{"name":"构造函数模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-creation/the-constructor-pattern.md","uri":"front-end/object-oriented-programming/object-creation/the-constructor-pattern","children":[]},{"name":"工厂模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-creation/the-factory-pattern.md","uri":"front-end/object-oriented-programming/object-creation/the-factory-pattern","children":[]},{"name":"原型模式","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-creation/the-prototype-pattern.md","uri":"front-end/object-oriented-programming/object-creation/the-prototype-pattern","children":[]}]},{"name":"简介","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-oriented-programming.md","uri":"front-end/object-oriented-programming/object-oriented-programming","children":[]},{"name":"object-understand","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-understand","uri":"","children":[{"name":"对象属性描述符","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-understand/attributes-object.md","uri":"front-end/object-oriented-programming/object-understand/attributes-object","children":[]},{"name":"属性操作","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-understand/manipulating-property.md","uri":"front-end/object-oriented-programming/object-understand/manipulating-property","children":[]},{"name":"对象状态","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-understand/the-object-status.md","uri":"front-end/object-oriented-programming/object-understand/the-object-status","children":[]},{"name":"对象类型","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/object-oriented-programming/object-understand/the-object-type.md","uri":"front-end/object-oriented-programming/object-understand/the-object-type","children":[]}]}]},{"name":"标准内置对象","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/index.md","uri":"front-end/standard-built-in-objects/index","children":[{"name":"control-abstraction-objects","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects","uri":"","children":[{"name":"generator","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/generator","uri":"","children":[{"name":"Generator 函数的异步应用","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/generator/generator-async.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/generator/generator-async","children":[]},{"name":"Generator","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/generator/generator.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/generator/generator","children":[]},{"name":"prototype","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/generator/prototype","uri":"","children":[{"name":"Generator.prototype.next","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/generator/prototype/next.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/generator/prototype/next","children":[]},{"name":"Generator.prototype.return","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/generator/prototype/return.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/generator/prototype/return","children":[]},{"name":"Generator.prototype.throw","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/generator/prototype/throw.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/generator/prototype/throw","children":[]}]}]},{"name":"iterator","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/iterator","uri":"","children":[{"name":"Iterator","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/iterator/iterator.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/iterator/iterator","children":[]}]},{"name":"promise","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise","uri":"","children":[{"name":"constructor","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor","uri":"","children":[{"name":"Promise.allSettled","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/all-settled.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/all-settled","children":[]},{"name":"Promise.all","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/all.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/all","children":[]},{"name":"Promise.any","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/any.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/any","children":[]},{"name":"Promise.race","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/race.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/race","children":[]},{"name":"Promise.reject","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/reject.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/reject","children":[]},{"name":"Promise.resolve","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/resolve.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/constructor/resolve","children":[]}]},{"name":"Promise/A+ 规范","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/promise-standard.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/promise-standard","children":[]},{"name":"Promise","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/promise.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/promise","children":[]},{"name":"prototype","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/prototype","uri":"","children":[{"name":"Promise.prototype.catch","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/prototype/catch.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/prototype/catch","children":[]},{"name":"Promise.prototype.finally","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/prototype/finally.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/prototype/finally","children":[]},{"name":"Promise.prototype.then","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/control-abstraction-objects/promise/prototype/then.md","uri":"front-end/standard-built-in-objects/control-abstraction-objects/promise/prototype/then","children":[]}]}]}]},{"name":"fundamental-objects","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects","uri":"","children":[{"name":"Boolean","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/boolean.md","uri":"front-end/standard-built-in-objects/fundamental-objects/boolean","children":[]},{"name":"Error","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/error.md","uri":"front-end/standard-built-in-objects/fundamental-objects/error","children":[]},{"name":"function","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/function","uri":"","children":[{"name":"Function.prototype.apply","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/function/apply.md","uri":"front-end/standard-built-in-objects/fundamental-objects/function/apply","children":[]},{"name":"Function.prototype.bind","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/function/bind.md","uri":"front-end/standard-built-in-objects/fundamental-objects/function/bind","children":[]},{"name":"Function.prototype.call","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/function/call.md","uri":"front-end/standard-built-in-objects/fundamental-objects/function/call","children":[]},{"name":"Function","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/function/function.md","uri":"front-end/standard-built-in-objects/fundamental-objects/function/function","children":[]}]},{"name":"object","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object","uri":"","children":[{"name":"Object.assign","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/assign.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/assign","children":[]},{"name":"Object.create","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/create.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/create","children":[]},{"name":"Object.defineProperties","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/defineProperties.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/defineProperties","children":[]},{"name":"Object.defineProperty","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/defineProperty.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/defineProperty","children":[]},{"name":"Object.entries","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/entries.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/entries","children":[]},{"name":"Object.freeze","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/freeze.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/freeze","children":[]},{"name":"Object.getOwnPropertyDescriptor","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/getOwnPropertyDescriptor.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/getOwnPropertyDescriptor","children":[]},{"name":"Object.getOwnPropertyDescriptors","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/getOwnPropertyDescriptors.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/getOwnPropertyDescriptors","children":[]},{"name":"Object.getOwnPropertyNames","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/getOwnPropertyNames.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/getOwnPropertyNames","children":[]},{"name":"Object.getOwnPropertySymbols","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/getOwnPropertySymbols.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/getOwnPropertySymbols","children":[]},{"name":"Object.getPrototypeOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/getPrototypeOf.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/getPrototypeOf","children":[]},{"name":"Object.prototype.hasOwnProperty","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/hasOwnProperty.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/hasOwnProperty","children":[]},{"name":"Object.is","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/is.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/is","children":[]},{"name":"Object.isExtensible","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/isExtensible.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/isExtensible","children":[]},{"name":"Object.isFrozen","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/isFrozen.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/isFrozen","children":[]},{"name":"Object.prototype.isPrototypeOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/isPrototypeOf.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/isPrototypeOf","children":[]},{"name":"Object.isSealed","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/isSealed.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/isSealed","children":[]},{"name":"Object.keys","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/keys.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/keys","children":[]},{"name":"Object","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/object.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/object","children":[]},{"name":"Object.preventExtensions","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/preventExtensions.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/preventExtensions","children":[]},{"name":"Object.prototype.isPrototypeOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/propertyIsEnumerable.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/propertyIsEnumerable","children":[]},{"name":"Object.seal","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/seal.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/seal","children":[]},{"name":"Object.setPrototypeOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/setPrototypeOf.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/setPrototypeOf","children":[]},{"name":"Object.prototype.isPrototypeOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/toString.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/toString","children":[]},{"name":"Object.values","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/object/values.md","uri":"front-end/standard-built-in-objects/fundamental-objects/object/values","children":[]}]},{"name":"symbol","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol","uri":"","children":[{"name":"Symbol.hasInstance","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/hasInstance.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/hasInstance","children":[]},{"name":"Symbol.isConcatSpreadable","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/isConcatSpreadable.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/isConcatSpreadable","children":[]},{"name":"Symbol.iterator","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/iterator.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/iterator","children":[]},{"name":"Symbol.match","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/match.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/match","children":[]},{"name":"Symbol.replace","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/replace.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/replace","children":[]},{"name":"Symbol.search","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/search.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/search","children":[]},{"name":"Symbol.species","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/species.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/species","children":[]},{"name":"Symbol.split","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/split.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/split","children":[]},{"name":"Symbol","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/symbol.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/symbol","children":[]},{"name":"Symbol.toPrimitive","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/toPrimitive.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/toPrimitive","children":[]},{"name":"Symbol.toStringTag","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/toStringTag.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/toStringTag","children":[]},{"name":"Symbol.unscopables","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/fundamental-objects/symbol/unscopables.md","uri":"front-end/standard-built-in-objects/fundamental-objects/symbol/unscopables","children":[]}]}]},{"name":"indexed-collections","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections","uri":"","children":[{"name":"array","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array","uri":"","children":[{"name":"数组检测","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/array-detection.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/array-detection","children":[]},{"name":"Array","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/array.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/array","children":[]},{"name":"constructor","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/constructor","uri":"","children":[{"name":"Array.from","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/constructor/from.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/constructor/from","children":[]},{"name":"Array.isArray","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/constructor/isArray.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/constructor/isArray","children":[]},{"name":"Array.of","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/constructor/of.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/constructor/of","children":[]}]},{"name":"prototype","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype","uri":"","children":[{"name":"accessor-methods","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods","uri":"","children":[{"name":"Array.prototype.concat","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/concat.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/concat","children":[]},{"name":"Array.prototype.copyWithin","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/copyWithin.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/copyWithin","children":[]},{"name":"Array.prototype.flat","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/flat.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/flat","children":[]},{"name":"Array.prototype.flatMap","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/flatMap.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/flatMap","children":[]},{"name":"Array.prototype.includes","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/includes.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/includes","children":[]},{"name":"Array.prototype.indexOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/indexOf.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/indexOf","children":[]},{"name":"Array.prototype.join","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/join.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/join","children":[]},{"name":"Array.prototype.lastIndexOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/lastIndexOf.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/lastIndexOf","children":[]},{"name":"Array.prototype.slice","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/slice.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/accessor-methods/slice","children":[]}]},{"name":"iteration-methods","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods","uri":"","children":[{"name":"Array.prototype.entries","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/entries.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/entries","children":[]},{"name":"Array.prototype.every","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/every.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/every","children":[]},{"name":"Array.prototype.filter","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/filter.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/filter","children":[]},{"name":"Array.prototype.find","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/find.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/find","children":[]},{"name":"Array.prototype.findIndex","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/findIndex.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/findIndex","children":[]},{"name":"Array.prototype.forEach","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/forEach.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/forEach","children":[]},{"name":"Array.prototype.keys","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/keys.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/keys","children":[]},{"name":"Array.prototype.map","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/map.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/map","children":[]},{"name":"Array.prototype.reduce","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/reduce.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/reduce","children":[]},{"name":"Array.prototype.reduceRight","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/reduceRight.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/reduceRight","children":[]},{"name":"Array.prototype.some","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/some.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/iteration-methods/some","children":[]}]},{"name":"mutator-methods","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods","uri":"","children":[{"name":"Array.prototype.fill","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/fill.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/fill","children":[]},{"name":"Array.prototype.pop","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/pop.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/pop","children":[]},{"name":"Array.prototype.push","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/push.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/push","children":[]},{"name":"Array.prototype.reverse","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/reverse.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/reverse","children":[]},{"name":"Array.prototype.shift","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/shift.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/shift","children":[]},{"name":"Array.prototype.sort","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/sort.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/sort","children":[]},{"name":"Array.prototype.splice","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/splice.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/splice","children":[]},{"name":"Array.prototype.unshift","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/unshift.md","uri":"front-end/standard-built-in-objects/indexed-collections/array/prototype/mutator-methods/unshift","children":[]}]}]}]},{"name":"typed-array","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/typed-array","uri":"","children":[{"name":"Typed Array","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/indexed-collections/typed-array/typed-array.md","uri":"front-end/standard-built-in-objects/indexed-collections/typed-array/typed-array","children":[]}]}]},{"name":"keyed-collections","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections","uri":"","children":[{"name":"map","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections/map","uri":"","children":[{"name":"Map","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections/map/map.md","uri":"front-end/standard-built-in-objects/keyed-collections/map/map","children":[]}]},{"name":"set","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections/set","uri":"","children":[{"name":"Set","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections/set/set.md","uri":"front-end/standard-built-in-objects/keyed-collections/set/set","children":[]}]},{"name":"weak-map","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections/weak-map","uri":"","children":[{"name":"WeakMap","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections/weak-map/weak-map.md","uri":"front-end/standard-built-in-objects/keyed-collections/weak-map/weak-map","children":[]}]},{"name":"weak-set","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections/weak-set","uri":"","children":[{"name":"WeakSet","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/keyed-collections/weak-set/weak-set.md","uri":"front-end/standard-built-in-objects/keyed-collections/weak-set/weak-set","children":[]}]}]},{"name":"numbers-and-dates","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/numbers-and-dates","uri":"","children":[{"name":"date","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/numbers-and-dates/date","uri":"","children":[{"name":"Date","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/numbers-and-dates/date/date.md","uri":"front-end/standard-built-in-objects/numbers-and-dates/date/date","children":[]}]},{"name":"math","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/numbers-and-dates/math","uri":"","children":[{"name":"Math","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/numbers-and-dates/math/math.md","uri":"front-end/standard-built-in-objects/numbers-and-dates/math/math","children":[]}]},{"name":"number","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/numbers-and-dates/number","uri":"","children":[{"name":"Number","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/numbers-and-dates/number/number.md","uri":"front-end/standard-built-in-objects/numbers-and-dates/number/number","children":[]}]}]},{"name":"reflection","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection","uri":"","children":[{"name":"proxy","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy","uri":"","children":[{"name":"handler","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler","uri":"","children":[{"name":"Proxy - handler.apply","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/apply.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/apply","children":[]},{"name":"Proxy - handler.construct","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/construct.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/construct","children":[]},{"name":"Proxy - handler.defineProperty","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/defineProperty.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/defineProperty","children":[]},{"name":"Proxy - handler.deleteProperty","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/deleteProperty.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/deleteProperty","children":[]},{"name":"Proxy - handler.get","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/get.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/get","children":[]},{"name":"Proxy - handler.getOwnPropertyDescriptor","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/getOwnPropertyDescriptor.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/getOwnPropertyDescriptor","children":[]},{"name":"Proxy - handler.getPrototypeOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/getPrototypeOf.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/getPrototypeOf","children":[]},{"name":"Proxy - handler.has","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/has.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/has","children":[]},{"name":"Proxy - handler.isExtensions","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/isExtensible.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/isExtensible","children":[]},{"name":"Proxy - handler.ownKeys","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/ownKeys.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/ownKeys","children":[]},{"name":"Proxy - handler.preventExtensions","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/preventExtensions.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/preventExtensions","children":[]},{"name":"Proxy - revocable","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/revocable.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/revocable","children":[]},{"name":"Proxy - handler.set","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/set.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/set","children":[]},{"name":"Proxy - handler.setPrototypeOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/handler/setPrototypeOf.md","uri":"front-end/standard-built-in-objects/reflection/proxy/handler/setPrototypeOf","children":[]}]},{"name":"Proxy","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/proxy/proxy.md","uri":"front-end/standard-built-in-objects/reflection/proxy/proxy","children":[]}]},{"name":"reflect","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/reflect","uri":"","children":[{"name":"Reflect","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/reflection/reflect/reflect.md","uri":"front-end/standard-built-in-objects/reflection/reflect/reflect","children":[]}]}]},{"name":"structured-data","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/structured-data","uri":"","children":[{"name":"array-buffer","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/structured-data/array-buffer","uri":"","children":[{"name":"ArrayBuffer","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/structured-data/array-buffer/array-buffer.md","uri":"front-end/standard-built-in-objects/structured-data/array-buffer/array-buffer","children":[]}]},{"name":"json","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/structured-data/json","uri":"","children":[{"name":"JSON.parse","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/structured-data/json/json-parse.md","uri":"front-end/standard-built-in-objects/structured-data/json/json-parse","children":[]},{"name":"JSON.stringify","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/structured-data/json/json-stringify.md","uri":"front-end/standard-built-in-objects/structured-data/json/json-stringify","children":[]},{"name":"JSON","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/structured-data/json/json.md","uri":"front-end/standard-built-in-objects/structured-data/json/json","children":[]}]}]},{"name":"text-processing","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing","uri":"","children":[{"name":"regexp","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/regexp","uri":"","children":[{"name":"prototype","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/regexp/prototype","uri":"","children":[{"name":"RegExp.prototype.exec","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/regexp/prototype/exec.md","uri":"front-end/standard-built-in-objects/text-processing/regexp/prototype/exec","children":[]},{"name":"RegExp.prototype.test","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/regexp/prototype/test.md","uri":"front-end/standard-built-in-objects/text-processing/regexp/prototype/test","children":[]}]},{"name":"RegExp 语法","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/regexp/regexp-rule.md","uri":"front-end/standard-built-in-objects/text-processing/regexp/regexp-rule","children":[]},{"name":"RegExp","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/regexp/regexp.md","uri":"front-end/standard-built-in-objects/text-processing/regexp/regexp","children":[]}]},{"name":"string","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string","uri":"","children":[{"name":"prototype","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype","uri":"","children":[{"name":"String.prototype.charAt","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/charAt.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/charAt","children":[]},{"name":"String.prototype.charCodeAt","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/charCodeAt.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/charCodeAt","children":[]},{"name":"String.prototype.codePointAt","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/codePointAt.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/codePointAt","children":[]},{"name":"String.prototype.concat","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/concat.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/concat","children":[]},{"name":"String.prototype.endsWith","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/endsWith.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/endsWith","children":[]},{"name":"String.prototype.includes","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/includes.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/includes","children":[]},{"name":"String.prototype.indexOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/indexOf.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/indexOf","children":[]},{"name":"String.prototype.lastIndexOf","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/lastIndexOf.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/lastIndexOf","children":[]},{"name":"String.prototype.localeCompare","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/localeCompare.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/localeCompare","children":[]},{"name":"String.prototype.match","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/match.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/match","children":[]},{"name":"String.prototype.matchAll","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/matchAll.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/matchAll","children":[]},{"name":"String.prototype.normalize","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/normalize.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/normalize","children":[]},{"name":"String.prototype.padEnd","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/padEnd.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/padEnd","children":[]},{"name":"String.prototype.padStart","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/padStart.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/padStart","children":[]},{"name":"String.prototype.repeat","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/repeat.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/repeat","children":[]},{"name":"String.prototype.replace","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/replace.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/replace","children":[]},{"name":"String.prototype.search","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/search.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/search","children":[]},{"name":"String.prototype.slice","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/slice.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/slice","children":[]},{"name":"String.prototype.split","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/split.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/split","children":[]},{"name":"String.prototype.startsWith","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/startsWith.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/startsWith","children":[]},{"name":"String.prototype.substr","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/substr.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/substr","children":[]},{"name":"String.prototype.substring","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/substring.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/substring","children":[]},{"name":"String.prototype.toLowerCase","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/toLowerCase.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/toLowerCase","children":[]},{"name":"String.prototype.toUpperCase","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/toUpperCase.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/toUpperCase","children":[]},{"name":"String.prototype.trim","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/trim.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/trim","children":[]},{"name":"String.prototype.trimEnd","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/trimEnd.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/trimEnd","children":[]},{"name":"String.prototype.trimStart","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/prototype/trimStart.md","uri":"front-end/standard-built-in-objects/text-processing/string/prototype/trimStart","children":[]}]},{"name":"static","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/static","uri":"","children":[{"name":"String.fromCharCode","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/static/fromCharCode.md","uri":"front-end/standard-built-in-objects/text-processing/string/static/fromCharCode","children":[]},{"name":"String.fromCodePoint","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/static/fromCodePoint.md","uri":"front-end/standard-built-in-objects/text-processing/string/static/fromCodePoint","children":[]},{"name":"String.raw","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/static/raw.md","uri":"front-end/standard-built-in-objects/text-processing/string/static/raw","children":[]}]},{"name":"String","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/text-processing/string/string.md","uri":"front-end/standard-built-in-objects/text-processing/string/string","children":[]}]}]},{"name":"the-global-object","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object","uri":"","children":[{"name":"function-properties","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties","uri":"","children":[{"name":"decodeURI","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/decodeURI.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/decodeURI","children":[]},{"name":"decodeURIComponent","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/decodeURIComponent.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/decodeURIComponent","children":[]},{"name":"encodeURI","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/encodeURI.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/encodeURI","children":[]},{"name":"encodeURIComponent","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/encodeURIComponent.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/encodeURIComponent","children":[]},{"name":"eval","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/eval.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/eval","children":[]},{"name":"isFinite","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/isFinite.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/isFinite","children":[]},{"name":"isNaN","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/isNaN.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/isNaN","children":[]},{"name":"parseFloat","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/parseFloat.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/parseFloat","children":[]},{"name":"parseInt","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/function-properties/parseInt.md","uri":"front-end/standard-built-in-objects/the-global-object/function-properties/parseInt","children":[]}]},{"name":"value-properties","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/value-properties","uri":"","children":[{"name":"NaN","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/value-properties/NaN.md","uri":"front-end/standard-built-in-objects/the-global-object/value-properties/NaN","children":[]},{"name":"Infinity","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/value-properties/infinity.md","uri":"front-end/standard-built-in-objects/the-global-object/value-properties/infinity","children":[]},{"name":"undefined","path":"/home/runner/work/townechow.github.io/townechow.github.io/public/front-end/standard-built-in-objects/the-global-object/value-properties/undefined.md","uri":"front-end/standard-built-in-objects/the-global-object/value-properties/undefined","children":[]}]}]}]}]}],["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]]}],{"children":[["slug","standard-built-in-objects/control-abstraction-objects/generator/generator-async","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":"$L7"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","5gnBD3dcqQaKDThSBvS1L",{"children":[["$","$L8",null,{"children":"$L9"}],["$","$La",null,{"children":"$Lb"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
d:Tab8b,<h1>Generator 函数的异步应用</h1>
<p>ES6 诞生以前，异步编程的方法，大概有下面四种。</p>
<ul>
<li>回调函数</li>
<li>事件监听</li>
<li>发布/订阅</li>
<li>Promise 对象</li>
</ul>
<p>Generator 函数将 JavaScript 异步编程带入了一个全新的阶段。</p>
<h2>基本概念</h2>
<h3>异步</h3>
<p>所谓<strong>异步</strong>，简单说就是一个任务不是连续完成的，可以理解成该任务被人为分成两段，先执行第一段，然后转而执行其他任务，等做好了准备，再回过头执行第二段。</p>
<p>比如，有一个任务是读取文件进行处理，任务的第一段是向操作系统发出请求，要求读取文件。然后，程序执行其他任务，等到操作系统返回文件，再接着执行任务的第二段（处理文件）。这种不连续的执行，就叫做<strong>异步</strong>。</p>
<p>相应地，连续的执行就叫做<strong>同步</strong>。由于是连续执行，不能插入其他任务，所以操作系统从硬盘读取文件的这段时间，程序只能干等着。</p>
<h3>回调函数</h3>
<p>JavaScript 语言对异步编程的实现，就是<strong>回调函数</strong>。所谓回调函数，就是把任务的第二段单独写在一个函数里面，等到重新执行这个任务的时候，就直接调用这个函数。回调函数的英语名字 <code>callback</code>，直译过来就是<strong>重新调用</strong>。</p>
<p>读取文件进行处理，是这样写的。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code>fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>) {
  <span class="hljs-keyword">if</span> (err) <span class="hljs-keyword">throw</span> err;
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);
});
</code></pre>
<p>上面代码中，<code>readFile</code> 函数的第三个参数，就是回调函数，也就是任务的第二段。等到操作系统返回了 <code>/etc/passwd</code> 这个文件以后，回调函数才会执行。</p>
<p>一个有趣的问题是，为什么 Node 约定，回调函数的第一个参数，必须是错误对象 <code>err</code>（如果没有错误，该参数就是 <code>null</code>）？</p>
<p>原因是执行分成两段，第一段执行完以后，任务所在的上下文环境就已经结束了。在这以后抛出的错误，原来的上下文环境已经无法捕捉，只能当作参数，传入第二段。</p>
<h3>Promise</h3>
<p>回调函数本身并没有问题，它的问题出现在多个回调函数嵌套。假定读取文件 <code>A</code> 之后，再读取文件 <code>B</code>，代码如下。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code>fs.<span class="hljs-title function_">readFile</span>(fileA, <span class="hljs-string">&#x27;utf-8&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>) {
  fs.<span class="hljs-title function_">readFile</span>(fileB, <span class="hljs-string">&#x27;utf-8&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>) {
    <span class="hljs-comment">// ...</span>
  });
});
</code></pre>
<p>不难想象，如果依次读取两个以上的文件，就会出现多重嵌套。代码不是纵向发展，而是横向发展，很快就会乱成一团，无法管理。因为多个异步操作形成了<strong>强耦合</strong>，只要有一个操作需要修改，它的上层回调函数和下层回调函数，可能都要跟着修改。这种情况就称为 <strong>回调函数地狱</strong>（callback hell）。</p>
<p>Promise 对象就是为了解决这个问题而提出的。它不是新的语法功能，而是一种新的写法，允许将回调函数的嵌套，改成<strong>链式调用</strong>。采用 Promise，连续读取多个文件，写法如下。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">const</span> readFile = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs-readfile-promise&#x27;</span>);

<span class="hljs-title function_">readFile</span>(fileA)
  .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data.<span class="hljs-title function_">toString</span>());
  })
  .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-title function_">readFile</span>(fileB);
  })
  .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data.<span class="hljs-title function_">toString</span>());
  })
  .<span class="hljs-title function_">catch</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">err</span>) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);
  });
</code></pre>
<p>上面代码中，我使用了 <code>fs-readfile-promise</code> 模块，它的作用就是返回一个 Promise 版本的 <code>readFile</code> 函数。Promise 提供 <code>then</code> 方法加载回调函数，<code>catch</code> 方法捕捉执行过程中抛出的错误。</p>
<p>可以看到，Promise 的写法只是回调函数的改进，使用 <code>then</code> 方法以后，异步任务的两段执行看得更清楚了，除此以外，并无新意。</p>
<p>Promise 的最大问题是代码冗余，原来的任务被 Promise 包装了一下，不管什么操作，一眼看去都是一堆 <code>then</code>，原来的语义变得很不清楚。</p>
<h2>Generator 函数</h2>
<h3>协程</h3>
<p>传统的编程语言，早有异步编程的解决方案（其实是多任务的解决方案）。其中有一种叫做 <strong>协程</strong>（coroutine），意思是多个线程互相协作，完成异步任务。</p>
<p>协程有点像函数，又有点像线程。它的运行流程大致如下。</p>
<ul>
<li>第一步，协程 <code>A</code> 开始执行。</li>
<li>第二步，协程 <code>A</code> 执行到一半，进入暂停，执行权转移到协程 <code>B</code>。</li>
<li>第三步，（一段时间后）协程 <code>B</code> 交还执行权。</li>
<li>第四步，协程 <code>A</code> 恢复执行。</li>
</ul>
<p>上面流程的协程 <code>A</code>，就是异步任务，因为它分成两段（或多段）执行。</p>
<p>举例来说，读取文件的协程写法如下。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span>* <span class="hljs-title function_">asyncJob</span>(<span class="hljs-params"></span>) {
  <span class="hljs-comment">// ...其他代码</span>
  <span class="hljs-keyword">var</span> f = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFile</span>(fileA);
  <span class="hljs-comment">// ...其他代码</span>
}
</code></pre>
<p>上面代码的函数 <code>asyncJob</code> 是一个协程，它的奥妙就在其中的 <code>yield</code> 命令。它表示执行到此处，执行权将交给其他协程。也就是说，<code>yield</code> 命令是异步两个阶段的分界线。</p>
<p>协程遇到 <code>yield</code> 命令就暂停，等到执行权返回，再从暂停的地方继续往后执行。它的最大优点，就是代码的写法非常像同步操作，如果去除 <code>yield</code> 命令，简直一模一样。</p>
<h3>协程的 Generator 函数实现</h3>
<p>Generator 函数是协程在 ES6 的实现，最大特点就是可以交出函数的执行权（即暂停执行）。</p>
<p>整个 Generator 函数就是一个封装的异步任务，或者说是异步任务的容器。异步操作需要暂停的地方，都用 <code>yield</code> 语句注明。Generator 函数的执行方法如下。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span>* <span class="hljs-title function_">gen</span>(<span class="hljs-params">x</span>) {
  <span class="hljs-keyword">var</span> y = <span class="hljs-keyword">yield</span> x + <span class="hljs-number">2</span>;
  <span class="hljs-keyword">return</span> y;
}

<span class="hljs-keyword">const</span> generator = <span class="hljs-title function_">gen</span>(<span class="hljs-number">1</span>);

generator.<span class="hljs-title function_">next</span>(); <span class="hljs-comment">// { value: 3, done: false }</span>
generator.<span class="hljs-title function_">next</span>(); <span class="hljs-comment">// { value: undefined, done: true }</span>
</code></pre>
<p>上面代码中，调用 Generator 函数，会返回一个内部指针（即遍历器）<code>generator</code>。这是 Generator 函数不同于普通函数的另一个地方，即执行它不会返回结果，返回的是指针对象。调用指针 <code>generator</code> 的 <code>next</code> 方法，会移动内部指针（即执行异步任务的第一段），指向第一个遇到的 <code>yield</code> 语句，上例是执行到 <code>x + 2</code> 为止。</p>
<p>换言之，<code>next</code> 方法的作用是分阶段执行 <code>Generator</code> 函数。</p>
<p>每次调用 <code>next</code> 方法，会返回一个对象，表示当前阶段的信息（<code>value</code> 属性和 <code>done</code> 属性）。</p>
<ul>
<li><code>value</code> 属性是 <code>yield</code> 语句后面表达式的值，表示当前阶段的值</li>
<li><code>done</code> 属性是一个布尔值，表示 Generator 函数是否执行完毕，即是否还有下一个阶段。</li>
</ul>
<h3>Generator 函数的数据交换和错误处理</h3>
<p>Generator 函数可以<strong>暂停执行</strong>和<strong>恢复执行</strong>，这是它能封装异步任务的根本原因。</p>
<p>除此之外，它还有两个特性，使它可以作为异步编程的完整解决方案：<strong>函数体内外的数据交换</strong>和<strong>错误处理机制</strong>。</p>
<p><code>next</code> 返回值的 <code>value</code> 属性，是 Generator 函数向外输出数据；<code>next</code> 方法还可以接受参数，向 Generator 函数体内输入数据。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span>* <span class="hljs-title function_">gen</span>(<span class="hljs-params">x</span>) {
  <span class="hljs-keyword">var</span> y = <span class="hljs-keyword">yield</span> x + <span class="hljs-number">2</span>;
  <span class="hljs-keyword">return</span> y;
}

<span class="hljs-keyword">var</span> generator = <span class="hljs-title function_">gen</span>(<span class="hljs-number">1</span>);

generator.<span class="hljs-title function_">next</span>(); <span class="hljs-comment">// { value: 3, done: false }</span>
generator.<span class="hljs-title function_">next</span>(<span class="hljs-number">2</span>); <span class="hljs-comment">// { value: 2, done: true }</span>
</code></pre>
<p>上面代码中，第一个 <code>next</code> 方法的 <code>value</code> 属性，返回表达式 <code>x + 2</code> 的值 <code>3</code>。第二个 <code>next</code> 方法带有参数 <code>2</code>，这个参数可以传入 Generator 函数，作为上个阶段异步任务的返回结果，被函数体内的变量 <code>y</code> 接收。因此，这一步的 <code>value</code> 属性，返回的就是 <code>2</code>（变量<code>y</code>的值）。</p>
<p>Generator 函数内部还可以部署错误处理代码，捕获函数体外抛出的错误。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span>* <span class="hljs-title function_">gen</span>(<span class="hljs-params">x</span>) {
  <span class="hljs-keyword">try</span> {
    <span class="hljs-keyword">var</span> y = <span class="hljs-keyword">yield</span> x + <span class="hljs-number">2</span>;
  } <span class="hljs-keyword">catch</span> (e) {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);
  }
  <span class="hljs-keyword">return</span> y;
}

<span class="hljs-keyword">var</span> generator = <span class="hljs-title function_">gen</span>(<span class="hljs-number">1</span>);
generator.<span class="hljs-title function_">next</span>();
generator.<span class="hljs-keyword">throw</span>(<span class="hljs-string">&#x27;出错了&#x27;</span>);
<span class="hljs-comment">// 出错了</span>
</code></pre>
<p>上面代码的最后一行，Generator 函数体外，使用指针对象的 <code>throw</code> 方法抛出的错误，可以被函数体内的 <code>try...catch</code> 代码块捕获。这意味着，出错的代码与处理错误的代码，实现了时间和空间上的分离，这对于异步编程无疑是很重要的。</p>
<h3>异步任务的封装</h3>
<p>下面看看如何使用 Generator 函数，执行一个真实的异步任务。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> fetch = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;node-fetch&#x27;</span>);

<span class="hljs-keyword">function</span>* <span class="hljs-title function_">gen</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">var</span> url = <span class="hljs-string">&#x27;https://api.github.com/users/github&#x27;</span>;
  <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">fetch</span>(url);
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result.<span class="hljs-property">bio</span>);
}
</code></pre>
<p>上面代码中，Generator 函数封装了一个异步操作，该操作先读取一个远程接口，然后从 JSON 格式的数据解析信息。就像前面说过的，这段代码非常像同步操作，除了加上了 <code>yield</code> 命令。</p>
<p>执行这段代码的方法如下。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> g = <span class="hljs-title function_">gen</span>();
<span class="hljs-keyword">var</span> result = g.<span class="hljs-title function_">next</span>();

result.<span class="hljs-property">value</span>
  .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) {
    <span class="hljs-keyword">return</span> data.<span class="hljs-title function_">json</span>();
  })
  .<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) {
    g.<span class="hljs-title function_">next</span>(data);
  });
</code></pre>
<p>上面代码中，首先执行 Generator 函数，获取遍历器对象，然后使用 <code>next</code> 方法（第二行），执行异步任务的第一阶段。由于 <code>Fetch</code> 模块返回的是一个 Promise 对象，因此要用 <code>then</code> 方法调用下一个 <code>next</code> 方法。</p>
<p>可以看到，虽然 Generator 函数将异步操作表示得很简洁，但是流程管理却不方便（即何时执行第一阶段、何时执行第二阶段）。</p>
<h2>Thunk 函数</h2>
<p>Thunk 函数是自动执行 Generator 函数的一种方法。</p>
<h3>参数的求值策略</h3>
<p>Thunk 函数早在上个世纪 60 年代就诞生了。</p>
<p>那时，编程语言刚刚起步，计算机学家还在研究，编译器怎么写比较好。一个争论的焦点是 <strong>求值策略</strong>，即函数的参数到底应该何时求值。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> x = <span class="hljs-number">1</span>;

<span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">m</span>) {
  <span class="hljs-keyword">return</span> m * <span class="hljs-number">2</span>;
}

<span class="hljs-title function_">f</span>(x + <span class="hljs-number">5</span>);
</code></pre>
<p>上面代码先定义函数 <code>f</code>，然后向它传入表达式 <code>x + 5</code>。请问，这个表达式应该何时求值？</p>
<p>一种意见是 <strong>传值调用</strong>（call by value），即在进入函数体之前，就计算 <code>x + 5</code> 的值（等于 6），再将这个值传入函数 <code>f</code>。C 语言就采用这种策略。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-title function_">f</span>(x + <span class="hljs-number">5</span>);
<span class="hljs-comment">// 传值调用时，等同于</span>
<span class="hljs-title function_">f</span>(<span class="hljs-number">6</span>);
</code></pre>
<p>另一种意见是 <strong>传名调用</strong>（call by name），即直接将表达式 <code>x + 5</code> 传入函数体，只在用到它的时候求值。Haskell 语言采用这种策略。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-title function_">f</span>(x + <span class="hljs-number">5</span>)(
  <span class="hljs-comment">// 传名调用时，等同于</span>
  x + <span class="hljs-number">5</span>
) * <span class="hljs-number">2</span>;
</code></pre>
<p>传值调用和传名调用，哪一种比较好？</p>
<p>回答是各有利弊。传值调用比较简单，但是对参数求值的时候，实际上还没用到这个参数，有可能造成性能损失。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">a, b</span>) {
  <span class="hljs-keyword">return</span> b;
}

<span class="hljs-title function_">f</span>(<span class="hljs-number">3</span> * x * x - <span class="hljs-number">2</span> * x - <span class="hljs-number">1</span>, x);
</code></pre>
<p>上面代码中，函数 <code>f</code> 的第一个参数是一个复杂的表达式，但是函数体内根本没用到。对这个参数求值，实际上是不必要的。因此，有一些计算机学家倾向于&quot;传名调用&quot;，即只在执行时求值。</p>
<h3>Thunk 函数的含义</h3>
<p>编译器的“传名调用”实现，往往是将参数放到一个临时函数之中，再将这个临时函数传入函数体。这个临时函数就叫做 Thunk 函数。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">m</span>) {
  <span class="hljs-keyword">return</span> m * <span class="hljs-number">2</span>;
}

<span class="hljs-title function_">f</span>(x + <span class="hljs-number">5</span>);

<span class="hljs-comment">// 等同于</span>

<span class="hljs-keyword">var</span> thunk = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) {
  <span class="hljs-keyword">return</span> x + <span class="hljs-number">5</span>;
};

<span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">thunk</span>) {
  <span class="hljs-keyword">return</span> <span class="hljs-title function_">thunk</span>() * <span class="hljs-number">2</span>;
}
</code></pre>
<p>上面代码中，函数 <code>f</code> 的参数 <code>x + 5</code> 被一个函数替换了。凡是用到原参数的地方，对 <code>Thunk</code> 函数求值即可。</p>
<p>这就是 Thunk 函数的定义，它是“传名调用”的一种实现策略，用来替换某个表达式。</p>
<h3>JavaScript 语言的 Thunk 函数</h3>
<p>JavaScript 语言是传值调用，它的 Thunk 函数含义有所不同。在 JavaScript 语言中，Thunk 函数替换的不是表达式，而是多参数函数，将其替换成一个只接受回调函数作为参数的单参数函数。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-comment">// 正常版本的readFile（多参数版本）</span>
fs.<span class="hljs-title function_">readFile</span>(fileName, callback);

<span class="hljs-comment">// Thunk版本的readFile（单参数版本）</span>
<span class="hljs-keyword">var</span> <span class="hljs-title class_">Thunk</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">fileName</span>) {
  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">callback</span>) {
    <span class="hljs-keyword">return</span> fs.<span class="hljs-title function_">readFile</span>(fileName, callback);
  };
};

<span class="hljs-keyword">var</span> readFileThunk = <span class="hljs-title class_">Thunk</span>(fileName);
<span class="hljs-title function_">readFileThunk</span>(callback);
</code></pre>
<p>上面代码中，<code>fs</code> 模块的 <code>readFile</code> 方法是一个多参数函数，两个参数分别为文件名和回调函数。经过转换器处理，它变成了一个单参数函数，只接受回调函数作为参数。这个单参数版本，就叫做 Thunk 函数。</p>
<p>任何函数，只要参数有回调函数，就能写成 Thunk 函数的形式。下面是一个简单的 Thunk 函数转换器。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-comment">// ES5版本</span>
<span class="hljs-keyword">var</span> <span class="hljs-title class_">Thunk</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">fn</span>) {
  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">var</span> args = <span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">slice</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">arguments</span>);
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">callback</span>) {
      args.<span class="hljs-title function_">push</span>(callback);
      <span class="hljs-keyword">return</span> fn.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, args);
    };
  };
};

<span class="hljs-comment">// ES6版本</span>
<span class="hljs-keyword">const</span> <span class="hljs-title class_">Thunk</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">fn</span>) {
  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">...args</span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">callback</span>) {
      <span class="hljs-keyword">return</span> fn.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, ...args, callback);
    };
  };
};
</code></pre>
<p>使用上面的转换器，生成 <code>fs.readFile</code> 的 Thunk 函数。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> readFileThunk = <span class="hljs-title class_">Thunk</span>(fs.<span class="hljs-property">readFile</span>);

<span class="hljs-title function_">readFileThunk</span>(fileA)(callback);
</code></pre>
<p>下面是另一个完整的例子。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">a, cb</span>) {
  <span class="hljs-title function_">cb</span>(a);
}
<span class="hljs-keyword">const</span> ft = <span class="hljs-title class_">Thunk</span>(f);

<span class="hljs-title function_">ft</span>(<span class="hljs-number">1</span>)(<span class="hljs-variable language_">console</span>.<span class="hljs-property">log</span>); <span class="hljs-comment">// 1</span>
</code></pre>
<h3>Thunkify 模块</h3>
<p>生产环境的转换器，建议使用 Thunkify 模块。</p>
<p>首先是安装。</p>
<pre class="hljs language-bash"  style=--lang:"bash" ><code>$ npm install thunkify
</code></pre>
<p>使用方式如下。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> thunkify = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;thunkify&#x27;</span>);
<span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);

<span class="hljs-keyword">var</span> read = <span class="hljs-title function_">thunkify</span>(fs.<span class="hljs-property">readFile</span>);
<span class="hljs-title function_">read</span>(<span class="hljs-string">&#x27;package.json&#x27;</span>)(<span class="hljs-keyword">function</span>(<span class="hljs-params">err, str</span>) {
  <span class="hljs-comment">// ...</span>
});
</code></pre>
<p>Thunkify 的源码与上一节那个简单的转换器非常像。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span> <span class="hljs-title function_">thunkify</span>(<span class="hljs-params">fn</span>) {
  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">var</span> args = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>);
    <span class="hljs-keyword">var</span> ctx = <span class="hljs-variable language_">this</span>;

    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; args.<span class="hljs-property">length</span>; ++i) {
      args[i] = <span class="hljs-variable language_">arguments</span>[i];
    }

    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">done</span>) {
      <span class="hljs-keyword">var</span> called;

      args.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) {
        <span class="hljs-keyword">if</span> (called) <span class="hljs-keyword">return</span>;
        called = <span class="hljs-literal">true</span>;
        done.<span class="hljs-title function_">apply</span>(<span class="hljs-literal">null</span>, <span class="hljs-variable language_">arguments</span>);
      });

      <span class="hljs-keyword">try</span> {
        fn.<span class="hljs-title function_">apply</span>(ctx, args);
      } <span class="hljs-keyword">catch</span> (err) {
        <span class="hljs-title function_">done</span>(err);
      }
    };
  };
}
</code></pre>
<p>它的源码主要多了一个检查机制，变量 <code>called</code> 确保回调函数只运行一次。这样的设计与下文的 Generator 函数相关。请看下面的例子。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">a, b, callback</span>) {
  <span class="hljs-keyword">var</span> sum = a + b;
  <span class="hljs-title function_">callback</span>(sum);
  <span class="hljs-title function_">callback</span>(sum);
}

<span class="hljs-keyword">var</span> ft = <span class="hljs-title function_">thunkify</span>(f);
<span class="hljs-keyword">var</span> print = <span class="hljs-variable language_">console</span>.<span class="hljs-property">log</span>.<span class="hljs-title function_">bind</span>(<span class="hljs-variable language_">console</span>);
<span class="hljs-title function_">ft</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)(print);
<span class="hljs-comment">// 3</span>
</code></pre>
<p>上面代码中，由于 <code>thunkify</code> 只允许回调函数执行一次，所以只输出一行结果。</p>
<h3>Generator 函数的流程管理</h3>
<p>你可能会问， Thunk 函数有什么用？回答是以前确实没什么用，但是 ES6 有了 Generator 函数，Thunk 函数现在可以用于 Generator 函数的自动流程管理。</p>
<p>Generator 函数可以自动执行。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span>* <span class="hljs-title function_">gen</span>(<span class="hljs-params"></span>) {
  <span class="hljs-comment">// ...</span>
}

<span class="hljs-keyword">var</span> g = <span class="hljs-title function_">gen</span>();
<span class="hljs-keyword">var</span> res = g.<span class="hljs-title function_">next</span>();

<span class="hljs-keyword">while</span> (!res.<span class="hljs-property">done</span>) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">value</span>);
  res = g.<span class="hljs-title function_">next</span>();
}
</code></pre>
<p>上面代码中，Generator 函数 <code>gen</code> 会自动执行完所有步骤。</p>
<p>但是，这不适合异步操作。如果必须保证前一步执行完，才能执行后一步，上面的自动执行就不可行。这时，Thunk 函数就能派上用处。以读取文件为例。下面的 Generator 函数封装了两个异步操作。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);
<span class="hljs-keyword">var</span> thunkify = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;thunkify&#x27;</span>);
<span class="hljs-keyword">var</span> readFileThunk = <span class="hljs-title function_">thunkify</span>(fs.<span class="hljs-property">readFile</span>);

<span class="hljs-keyword">var</span> gen = <span class="hljs-keyword">function</span>*() {
  <span class="hljs-keyword">var</span> r1 = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFileThunk</span>(<span class="hljs-string">&#x27;/etc/fstab&#x27;</span>);
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(r1.<span class="hljs-title function_">toString</span>());
  <span class="hljs-keyword">var</span> r2 = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFileThunk</span>(<span class="hljs-string">&#x27;/etc/shells&#x27;</span>);
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(r2.<span class="hljs-title function_">toString</span>());
};
</code></pre>
<p>上面代码中，<code>yield</code> 命令用于将程序的执行权移出 Generator 函数，那么就需要一种方法，将执行权再交还给 Generator 函数。</p>
<p>这种方法就是 Thunk 函数，因为它可以在回调函数里，将执行权交还给 Generator 函数。为了便于理解，我们先看如何手动执行上面这个 Generator 函数。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> g = <span class="hljs-title function_">gen</span>();

<span class="hljs-keyword">var</span> r1 = g.<span class="hljs-title function_">next</span>();
r1.<span class="hljs-title function_">value</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>) {
  <span class="hljs-keyword">if</span> (err) <span class="hljs-keyword">throw</span> err;
  <span class="hljs-keyword">var</span> r2 = g.<span class="hljs-title function_">next</span>(data);
  r2.<span class="hljs-title function_">value</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>) {
    <span class="hljs-keyword">if</span> (err) <span class="hljs-keyword">throw</span> err;
    g.<span class="hljs-title function_">next</span>(data);
  });
});
</code></pre>
<p>上面代码中，变量 <code>g</code> 是 Generator 函数的内部指针，表示目前执行到哪一步。<code>next</code> 方法负责将指针移动到下一步，并返回该步的信息（<code>value</code> 属性和 <code>done</code> 属性）。</p>
<p>仔细查看上面的代码，可以发现 Generator 函数的执行过程，其实是将同一个回调函数，反复传入 <code>next</code> 方法的 <code>value</code> 属性。这使得我们可以用递归来自动完成这个过程。</p>
<h3>Thunk 函数的自动流程管理</h3>
<p>Thunk 函数真正的威力，在于可以自动执行 Generator 函数。下面就是一个基于 Thunk 函数的 Generator 执行器。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">fn</span>) {
  <span class="hljs-keyword">var</span> gen = <span class="hljs-title function_">fn</span>();

  <span class="hljs-keyword">function</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">err, data</span>) {
    <span class="hljs-keyword">var</span> result = gen.<span class="hljs-title function_">next</span>(data);
    <span class="hljs-keyword">if</span> (result.<span class="hljs-property">done</span>) <span class="hljs-keyword">return</span>;
    result.<span class="hljs-title function_">value</span>(next);
  }

  <span class="hljs-title function_">next</span>();
}

<span class="hljs-keyword">function</span>* <span class="hljs-title function_">g</span>(<span class="hljs-params"></span>) {
  <span class="hljs-comment">// ...</span>
}

<span class="hljs-title function_">run</span>(g);
</code></pre>
<p>上面代码的 <code>run</code> 函数，就是一个 Generator 函数的自动执行器。内部的 <code>next</code> 函数就是 Thunk 的回调函数。<code>next</code> 函数先将指针移到 Generator 函数的下一步（<code>gen.next</code> 方法），然后判断 Generator 函数是否结束（<code>result.done</code> 属性），如果没结束，就将 <code>next</code> 函数再传入 Thunk 函数（<code>result.value</code> 属性），否则就直接退出。</p>
<p>有了这个执行器，执行 Generator 函数方便多了。不管内部有多少个异步操作，直接把 Generator 函数传入 <code>run</code> 函数即可。当然，前提是每一个异步操作，都要是 Thunk 函数，也就是说，跟在 <code>yield</code> 命令后面的必须是 Thunk 函数。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> g = <span class="hljs-keyword">function</span>*() {
  <span class="hljs-keyword">var</span> f1 = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFileThunk</span>(<span class="hljs-string">&#x27;fileA&#x27;</span>);
  <span class="hljs-keyword">var</span> f2 = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFileThunk</span>(<span class="hljs-string">&#x27;fileB&#x27;</span>);
  <span class="hljs-comment">// ...</span>
  <span class="hljs-keyword">var</span> fn = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFileThunk</span>(<span class="hljs-string">&#x27;fileN&#x27;</span>);
};

<span class="hljs-title function_">run</span>(g);
</code></pre>
<p>上面代码中，函数 <code>g</code> 封装了 <code>n</code> 个异步的读取文件操作，只要执行 <code>run</code> 函数，这些操作就会自动完成。这样一来，异步操作不仅可以写得像同步操作，而且一行代码就可以执行。</p>
<p>Thunk 函数并不是 Generator 函数自动执行的唯一方案。因为自动执行的关键是，必须有一种机制，自动控制 Generator 函数的流程，接收和交还程序的执行权。回调函数可以做到这一点，Promise 对象也可以做到这一点。</p>
<h2>co 模块</h2>
<h3>基本用法</h3>
<p><a href="https://github.com/tj/co" target="_blank" rel="noopener noreferrer nofollow">co 模块</a> 是著名程序员 TJ Holowaychuk 于 2013 年 6 月发布的一个小工具，用于 Generator 函数的自动执行。</p>
<p>下面是一个 Generator 函数，用于依次读取两个文件。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> gen = <span class="hljs-keyword">function</span>*() {
  <span class="hljs-keyword">var</span> f1 = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;/etc/fstab&#x27;</span>);
  <span class="hljs-keyword">var</span> f2 = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;/etc/shells&#x27;</span>);
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(f1.<span class="hljs-title function_">toString</span>());
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(f2.<span class="hljs-title function_">toString</span>());
};
</code></pre>
<p>co 模块可以让你不用编写 Generator 函数的执行器。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> co = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;co&#x27;</span>);
<span class="hljs-title function_">co</span>(gen);
</code></pre>
<p>上面代码中，Generator 函数只要传入 <code>co</code> 函数，就会自动执行。</p>
<p><code>co</code> 函数返回一个 <code>Promise</code> 对象，因此可以用 <code>then</code> 方法添加回调函数。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-title function_">co</span>(gen).<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Generator 函数执行完成&#x27;</span>);
});
</code></pre>
<p>上面代码中，等到 Generator 函数执行结束，就会输出一行提示。</p>
<h3>co 模块的原理</h3>
<p>为什么 co 可以自动执行 Generator 函数？</p>
<p>前面说过，Generator 就是一个异步操作的容器。它的自动执行需要一种机制，当异步操作有了结果，能够自动交回执行权。</p>
<p>两种方法可以做到这一点。</p>
<ol>
<li>
<p>回调函数。将异步操作包装成 Thunk 函数，在回调函数里面交回执行权。</p>
</li>
<li>
<p>Promise 对象。将异步操作包装成 Promise 对象，用 <code>then</code> 方法交回执行权。</p>
</li>
</ol>
<p>co 模块其实就是将两种自动执行器（Thunk 函数和 Promise 对象），包装成一个模块。使用 co 的前提条件是，Generator 函数的 <code>yield</code> 命令后面，只能是 Thunk 函数或 Promise 对象。如果数组或对象的成员，全部都是 Promise 对象，也可以使用 co，详见后文的例子。</p>
<p>上一节已经介绍了基于 Thunk 函数的自动执行器。下面来看，基于 Promise 对象的自动执行器。这是理解 co 模块必须的。</p>
<h3>基于 Promise 对象的自动执行</h3>
<p>还是沿用上面的例子。首先，把 <code>fs</code> 模块的 <code>readFile</code> 方法包装成一个 Promise 对象。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);

<span class="hljs-keyword">var</span> readFile = <span class="hljs-keyword">function</span>(<span class="hljs-params">fileName</span>) {
  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) {
    fs.<span class="hljs-title function_">readFile</span>(fileName, <span class="hljs-keyword">function</span>(<span class="hljs-params">error, data</span>) {
      <span class="hljs-keyword">if</span> (error) <span class="hljs-keyword">return</span> <span class="hljs-title function_">reject</span>(error);
      <span class="hljs-title function_">resolve</span>(data);
    });
  });
};

<span class="hljs-keyword">var</span> gen = <span class="hljs-keyword">function</span>*() {
  <span class="hljs-keyword">var</span> f1 = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;/etc/fstab&#x27;</span>);
  <span class="hljs-keyword">var</span> f2 = <span class="hljs-keyword">yield</span> <span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;/etc/shells&#x27;</span>);
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(f1.<span class="hljs-title function_">toString</span>());
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(f2.<span class="hljs-title function_">toString</span>());
};
</code></pre>
<p>然后，手动执行上面的 Generator 函数。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">var</span> g = <span class="hljs-title function_">gen</span>();

g.<span class="hljs-title function_">next</span>().<span class="hljs-property">value</span>.<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) {
  g.<span class="hljs-title function_">next</span>(data).<span class="hljs-property">value</span>.<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) {
    g.<span class="hljs-title function_">next</span>(data);
  });
});
</code></pre>
<p>手动执行其实就是用 <code>then</code> 方法，层层添加回调函数。理解了这一点，就可以写出一个自动执行器。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">function</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">gen</span>) {
  <span class="hljs-keyword">var</span> g = <span class="hljs-title function_">gen</span>();

  <span class="hljs-keyword">function</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">data</span>) {
    <span class="hljs-keyword">var</span> result = g.<span class="hljs-title function_">next</span>(data);
    <span class="hljs-keyword">if</span> (result.<span class="hljs-property">done</span>) <span class="hljs-keyword">return</span> result.<span class="hljs-property">value</span>;
    result.<span class="hljs-property">value</span>.<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) {
      <span class="hljs-title function_">next</span>(data);
    });
  }

  <span class="hljs-title function_">next</span>();
}

<span class="hljs-title function_">run</span>(gen);
</code></pre>
<p>上面代码中，只要 Generator 函数还没执行到最后一步，<code>next</code> 函数就调用自身，以此实现自动执行。</p>
5:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$d"}}]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"前端 | adog"}],["$","meta","2",{"name":"description","content":"前端知识整理集合"}],["$","meta","3",{"name":"keywords","content":"前端知识, web,react,前端知识图谱,ECMAScript,DOM,BOM,HTML5,计算机网络 "}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
7:null
