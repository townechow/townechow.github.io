1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"P2aiewlOc1Z9OPuSRFf3D","p":"","c":["","front-end","standard-built-in-objects","the-global-object","function-properties","parseInt"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","standard-built-in-objects/the-global-object/function-properties/parseInt","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","standard-built-in-objects/the-global-object/function-properties/parseInt","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","lcfXX8ADQMi4ZXh0nehjc",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T1236,<h1>parseInt</h1>
<p><code>parseInt()</code> 函数用于 <strong>将字符串转换为整数并返回</strong>。该函数可以将字符串视作指定的进制形式表示。</p>
<p>该函数属于 <code>Global</code> 对象，所有主流浏览器均支持该函数。</p>
<h2>语法</h2>
<pre class="hljs"><code class="language-js"><span class="hljs-built_in">parseInt</span>( numString [, radix ] )
</code></pre>
<p>&lt;br /&gt;</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">类型</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>numString</code></td>
<td style="text-align:left"><code>String</code> 类型</td>
<td style="text-align:left">需要转换为整数的字符串</td>
</tr>
<tr>
<td style="text-align:left"><code>radix</code></td>
<td style="text-align:left"><code>Number</code> 类型</td>
<td style="text-align:left">可选，指定的进制基数（介于 <code>[2, 36]</code> 之间的数值。）</td>
</tr>
</tbody>
</table>
<p>例如：参数 <code>radix</code> 为 2，则将 <code>numString</code> 视作二进制；参数 <code>radix</code> 为 8，则视作八进制；参数 <code>radix</code> 为 16，则视作十六进制。</p>
<p>如果没有提供 <code>radix</code> 参数，则 <code>parseInt()</code> 函数将会根据参数 <code>numString</code> 的前缀来决定转换的进制基数。如果 <code>numString</code> 的前缀是 <code>0x</code>，则转换为十六进制；如果前缀是 <code>0</code>，则转换为八进制；其他情况均转换为十进制。</p>
<ul>
<li><code>parseInt()</code> 函数的返回值为 Number 类型，<strong>返回转换后的整数</strong>。
<ul>
<li>如果指定的字符串中包含非数字字符，只要字符串开头的一部分符合整数的转换规则，则 <code>parseInt()</code> 函数会将这一部分字符串转化为整数（从字符串开头，直到遇到非数字字符为止）。</li>
<li>如果字符串以非数字字符开头，则返回 <code>NaN</code>。</li>
</ul>
</li>
</ul>
<h2>示例</h2>
<ul>
<li>正常使用 <code>parseInt()</code>，以下均返回 15</li>
</ul>
<pre class="hljs"><code class="language-js"><span class="hljs-comment">// Binary</span>
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;1111&#x27;</span>, <span class="hljs-number">2</span>);

<span class="hljs-comment">// Octal</span>
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;17&#x27;</span>, <span class="hljs-number">8</span>);
<span class="hljs-built_in">parseInt</span>(<span class="hljs-number">021</span>, <span class="hljs-number">8</span>);

<span class="hljs-comment">// Decimal</span>
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;015&#x27;</span>, <span class="hljs-number">10</span>);
<span class="hljs-built_in">parseInt</span>(<span class="hljs-number">15.99</span>, <span class="hljs-number">10</span>);
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;15,123&#x27;</span>, <span class="hljs-number">10</span>);
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;15 * 3&#x27;</span>, <span class="hljs-number">10</span>);
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;15e2&#x27;</span>, <span class="hljs-number">10</span>);
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;15px&#x27;</span>, <span class="hljs-number">10</span>);

<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;12&#x27;</span>, <span class="hljs-number">13</span>);

<span class="hljs-comment">// Hexadecimal</span>
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;0xF&#x27;</span>, <span class="hljs-number">16</span>);
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-number">16</span>);
<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;FXX123&#x27;</span>, <span class="hljs-number">16</span>);
</code></pre>
<ul>
<li>以下均返回 <code>NaN</code></li>
</ul>
<pre class="hljs"><code class="language-js"><span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>, <span class="hljs-number">8</span>);
<span class="hljs-comment">// not a number</span>

<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;546&#x27;</span>, <span class="hljs-number">2</span>);
<span class="hljs-comment">// except 0 &amp; 1,other number are not valid binary numbers</span>
</code></pre>
4:["$","div",null,{"className":"markdown-body","children":[["$","h1",null,{"children":"parseInt"}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
