1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"P2aiewlOc1Z9OPuSRFf3D","p":"","c":["","front-end","browser-object-model","window","screen"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","browser-object-model/window/screen","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","browser-object-model/window/screen","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","sszY2gIqbgFYxQJZo2ZjH",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T26d3,<h1>Screen 对象</h1>
<h2>Screen Orientation API</h2>
<p>Screen Orientation API 是一个能让 Web 开发者能控制屏幕旋转方向的 API，开发者可以利用该 API 检测屏幕的当前方向，在屏幕方向发生改变时得到消息通知，并能通过 API 将屏幕方向锁定到指定状态。目前主流的浏览器都已经部分支持或决定支持该 API，FireFox 26 和 IE 11 都支持了 <code>lockOrientation</code> 和 <code>unlockOrientation</code> API，Crosswalk 4（基于 Chromium 的 Web Runtime）也支持了该 API，Android 上的 Chrome 也正在实现该 API，估计 2014 年一季度之前能够完成。</p>
<h3>使用方法</h3>
<h4>lockOrientation()</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> lockedAllowed = <span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-title function_">lockOrientation</span>(orientation);
</code></pre>
<p><strong>参数介绍</strong></p>
<ul>
<li>orientation：需要锁定屏幕的方向。这个参数是一个字符串或者是一个由字符串组成的数组。通过多个字符串可以让屏幕只在选定的方向上进行旋转。</li>
</ul>
<p>以下字符串即表示你也许会指定的一些可能的方向。</p>
<ul>
<li>
<p><code>portrait-primary</code></p>
<p>它表示屏幕处于主要的肖像模式时的方向。如果设备处于正常位置且该位置处于纵向位置，或设备的正常位置处于横向并且设备保持顺时针转动 90°，则会在主肖像模式下考虑屏幕。正常的位置是依赖于设备的。</p>
</li>
<li>
<p><code>portrait-secondary</code></p>
<p>它表示屏幕处于辅助肖像模式时的方向。如果设备与正常位置保持 180°，并且该位置处于纵向位置，或者设备的正常位置处于横向位置，并且持有的设备逆时针转动 90°，则屏幕将处于辅助人像模式。正常的位置是依赖于设备的。</p>
</li>
<li>
<p><code>landscape-primary</code></p>
<p>它代表了屏幕处于主要风景模式时的方向。 如果设备保持在正常位置，并且该位置处于横向位置，或者设备的正常位置处于纵向位置，并且所保持的设备顺时针旋转 90°，则会将其视为主要横向模式。正常的位置是依赖于设备的。</p>
</li>
<li>
<p><code>landscape-secondary</code></p>
<p>它代表了屏幕处于次要风景模式时的方向。如果设备与其正常位置保持 180° 并且该位置处于横向，或者如果设备的正常位置是纵向的，并且所保持的设备逆时针旋转 90°，则将其视为次要横向模式。正常的位置是依赖于设备的。</p>
</li>
<li>
<p><code>portrait</code></p>
<p>它表示同时包含 <code>portrait-primary</code> 和 <code>portrait-secondary</code>.</p>
</li>
<li>
<p><code>landscape</code></p>
<p>它表示同时包含 <code>landscape-primary</code> 和 <code>landscape-secondary</code>.</p>
</li>
<li>
<p><code>default</code></p>
<p>它代表 <code>portrait-primary</code> 和 <code>landscape-primary</code> 主要取决于设备的自然方向。例如，如果面板分辨率为 1280 _ 800，则 <code>default</code> 为横向，如果分辨率为 800 _ 1280，则 <code>default</code> 为纵向。</p>
</li>
</ul>
<blockquote>
<p>⚠️ 注意：可同时设置多个锁定值。因此，如果锁定设置为只有一个方向，屏幕方向将永远不会改变，知道屏幕方向解锁。否则，只要方向在设备锁定的方向之中，屏幕方向就会从一个方向改变到另一个方向。</p>
</blockquote>
<p><strong>返回值</strong></p>
<p>如果方向被授权锁定，则返回 true；如果方向锁定被拒绝，则返回 false。请注意，返回值并不表示屏幕方向确实被锁定：可能会有延迟。</p>
<h4>unlockOrientation()</h4>
<pre class="hljs"><code class="language-js"><span class="hljs-keyword">const</span> unlocked = <span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-title function_">unlockOrientation</span>();
</code></pre>
<p><strong>返回值</strong></p>
<p>如果方向授权解锁成功，则返回 true；如果方向锁定解除失败，则返回 false。</p>
<h3>示例</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-comment">// 锁定屏幕为竖屏模式，不能设备如何旋转，屏幕都不会切换到横屏模式。</span>
<span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-title function_">lockOrientation</span>([“portrait-primary”,“portrait-secondary”]);

<span class="hljs-comment">// 锁定屏幕为横屏模式，无论设备如何旋转，屏幕都不会切换到竖屏模式。</span>
<span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-title function_">lockOrientation</span>([“landscape-primary”,“landscape-secondary”]);

<span class="hljs-comment">// 取消屏幕的锁屏，屏幕回到原始状态，</span>
<span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-title function_">unlockOrientation</span>();
</code></pre>
<h3>兼容性</h3>
<p>另外需要注意的是 Screen Orientation API 的文档规范还处于开发阶段，浏览器的实现可能带有前缀，例如 Firefox 带有 moz 前缀，IE 带有 ms 前缀。在使用前我们需要添加一些代码，保持更好的兼容性。</p>
<pre class="hljs"><code class="language-js"><span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-property">lockOrientation</span> =
  screen.<span class="hljs-property">lockOrientation</span> || screen.<span class="hljs-property">mozLockOrientation</span> || screen.<span class="hljs-property">msLockOrientation</span>;

<span class="hljs-variable language_">window</span>.<span class="hljs-property">screen</span>.<span class="hljs-property">unlockOrientation</span> =
  screen.<span class="hljs-property">unlockOrientation</span> || screen.<span class="hljs-property">mozUnLockOrientation</span> || screen.<span class="hljs-property">msUnLockOrientation</span>;
</code></pre>
<h2>Screen 对象的属性</h2>
<p><code>screen</code> 对象用来表明客户端的能力，其中包括浏览器窗口外部的显示器的信息，如像素高度和宽度等。</p>
<p>每个浏览器中的 <code>screen</code> 对象都包含着各不相同的属性，其中 Chrome 包含 9 个属性，Firefox 包含 10 个，IE8- 浏览器包含 14 个，IE9+ 浏览器包含 17 个。</p>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">height</td>
<td style="text-align:center">屏幕的像素高度（包括导航和底部）</td>
</tr>
<tr>
<td style="text-align:center">width</td>
<td style="text-align:center">屏幕的像素宽度（包括侧边栏）</td>
</tr>
<tr>
<td style="text-align:center">availHeight</td>
<td style="text-align:center">屏幕的像素高度减去系统部件高度之后的值（只读）</td>
</tr>
<tr>
<td style="text-align:center">availWidth</td>
<td style="text-align:center">屏幕的像素宽度减去系统部件宽度之后的值（只读）</td>
</tr>
<tr>
<td style="text-align:center">left</td>
<td style="text-align:center">当前屏幕距左边的像素距离（Firefox 返回 0，Chrome 和 IE 不支持）</td>
</tr>
<tr>
<td style="text-align:center">top</td>
<td style="text-align:center">当前屏幕距上方的像素距离（Firefox 返回 0，Chrome 和 IE 不支持）</td>
</tr>
<tr>
<td style="text-align:center">availLeft</td>
<td style="text-align:center">未被系统部件占用的最左侧的像素值（只读）（Chrome 和 Firefox 返回 0，IE 不支持）</td>
</tr>
<tr>
<td style="text-align:center">availTop</td>
<td style="text-align:center">未被系统部件占用的最上方的像素值（只读）（Chrome 和 Firefox 返回 0，IE 不支持）</td>
</tr>
<tr>
<td style="text-align:center">orientation</td>
<td style="text-align:center">屏幕的方向。</td>
</tr>
<tr>
<td style="text-align:center">bufferDepth</td>
<td style="text-align:center">读、写用于呈现屏外位图的位数（IE 返回 0，Chrome 和 Firefox 不支持）</td>
</tr>
<tr>
<td style="text-align:center">colorDepth</td>
<td style="text-align:center">用于表现颜色的位数（只读）（IE8- 返回 32，其他浏览器返回 24）</td>
</tr>
<tr>
<td style="text-align:center">pixelDepth</td>
<td style="text-align:center">屏幕的位深（只读）（IE8- 不支持，其他浏览器返回 24）</td>
</tr>
<tr>
<td style="text-align:center">deviceXDPI</td>
<td style="text-align:center">屏幕实际的水平 DPI（只读）（IE 返回 96，Chrome 和 Firefox 不支持）</td>
</tr>
<tr>
<td style="text-align:center">deviceYDPI</td>
<td style="text-align:center">屏幕实际的垂直 DPI（只读）（IE 返回 96，Chrome 和 Firefox 不支持）</td>
</tr>
<tr>
<td style="text-align:center">logicalXDPI</td>
<td style="text-align:center">屏幕逻辑的水平 DPI（只读）（IE 返回 96，Chrome 和 Firefox 不支持）</td>
</tr>
<tr>
<td style="text-align:center">logicalYDPI</td>
<td style="text-align:center">屏幕逻辑的垂直 DPI（只读）（IE 返回 96，Chrome 和 Firefox 不支持）</td>
</tr>
<tr>
<td style="text-align:center">updateInterval</td>
<td style="text-align:center">读、写以毫秒表示的屏幕刷新时间间隔（IE 返回 0，Chrome 和 Firefox 不支持）</td>
</tr>
<tr>
<td style="text-align:center">fontSmoothingEnabled</td>
<td style="text-align:center">是否启用了字体平滑（只读）（IE 返回 true，Chrome 和 Firefox 不支持）</td>
</tr>
</tbody>
</table>
4:["$","div",null,{"className":"markdown-body","children":[["$","h1",null,{"children":"Screen 对象"}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
