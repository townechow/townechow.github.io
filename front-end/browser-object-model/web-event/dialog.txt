1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/d498c84e4ab246b3.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/b9d97b2190475167.css","style"]
:HL["/_next/static/css/851cdee6d90716dd.css","style"]
0:{"P":null,"b":"NFjmtHF2up8B2PpbDjLiS","p":"","c":["","front-end","browser-object-model","web-event","dialog"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","browser-object-model/web-event/dialog","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d498c84e4ab246b3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/b9d97b2190475167.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/851cdee6d90716dd.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","browser-object-model/web-event/dialog","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","O9GnwQJEAMwmpF2-7uw2h",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T1539,<h1>对话框 API</h1>
<h2>alert</h2>
<p>显示一个警告对话框，上面显示有指定的文本内容以及一个“确定”按钮。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">alert</span>(message);
</code></pre>
<p><code>message</code> 为显示在对话框内的文本字符串，如果传入其它类型的值，会转换成字符串。</p>
<ul>
<li>警告对话框使用在无需用户确认的情况下，否则应该使用其它类型的对话框，比如 confirm 或 prompt；</li>
<li>这里显示的对话框是一个模态窗口，它能阻止用户对浏览器窗口界面的其它部位进行操作，你不应该过多地使用这种模态窗口</li>
</ul>
<h3>示例</h3>
<h4>基本用法</h4>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;Hello world!&#x27;</span>);
</code></pre>
<h4>换行</h4>
<p><code>alert()</code> 方法的参数可以用 <code>\n</code> 指定换行</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;本条提示\n分成两行&#x27;</span>);
</code></pre>
<h2>confirm</h2>
<p><code>window.confirm</code> 方法显示一个具有一个可选消息和两个按钮（确定和取消）的模态对话框。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">const</span> res = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">confirm</span>(message);
</code></pre>
<ul>
<li><code>message</code> 是要在对话框中显示的可选字符串</li>
<li><code>res</code> 是一个布尔值，表示是选择确定还是取消（true 表示 ok）</li>
</ul>
<p>对话框是弹出式的，直到这个对话框被点击后，后面的脚本才会运行。</p>
<h3>示例</h3>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">confirm</span>(<span class="hljs-string">&#x27;Do you really want to leave?&#x27;</span>)) {
  <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;exit.html&#x27;</span>, <span class="hljs-string">&#x27;Thanks for Visiting&#x27;</span>);
}
</code></pre>
<h2>prompt</h2>
<p><code>window.prompt()</code> 显示一个对话框，对话框中包含一条文字信息，用来提示用户输入文字。</p>
<pre class="hljs language-js"  style=--lang:"js" ><code><span class="hljs-keyword">const</span> res = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">prompt</span>(text, value);
</code></pre>
<ul>
<li><code>res</code> 用来存储用户输入文字的字符串，或者是 <code>null</code>;</li>
<li><code>text</code> 用来提示用户输入文字的字符串，如果没有任何提示内容，该参数可以省略不写；</li>
<li><code>value</code> 文本输入框中的默认值，该参数也可以省略不写。</li>
</ul>
<p>该方法的第二个参数是可选的，如果不提供的话，IE 浏览器会在输入框中显示 undefined。因此，最好总是提供第二个参数，作为输入框的默认值。</p>
<h3>示例</h3>
<pre class="hljs language-html"  style=--lang:"html" ><code><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript">
      <span class="hljs-keyword">function</span> <span class="hljs-title function_">disp_prompt</span>(<span class="hljs-params"></span>) {
        <span class="hljs-keyword">var</span> name = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;Please enter your name&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>);
        <span class="hljs-keyword">if</span> (name != <span class="hljs-literal">null</span> &amp;&amp; name != <span class="hljs-string">&#x27;&#x27;</span>) {
          <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">write</span>(<span class="hljs-string">&#x27;Hello &#x27;</span> + name + <span class="hljs-string">&#x27;!&#x27;</span>);
        }
      }
    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;disp_prompt()&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Display a prompt box&quot;</span> /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>
</code></pre>
4:["$","div",null,{"className":"markdown-body","children":["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
