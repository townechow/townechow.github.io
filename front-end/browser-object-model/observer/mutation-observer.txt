1:"$Sreact.fragment"
2:I[5244,[],""]
3:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
7:I[6213,[],"MetadataBoundary"]
9:I[6213,[],"ViewportBoundary"]
b:I[4835,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ec0a9d078e716e00.css","style"]
:HL["/_next/static/css/485ff6fe79292a08.css","style"]
:HL["/_next/static/css/0ff121a467c0636f.css","style"]
0:{"P":null,"b":"P2aiewlOc1Z9OPuSRFf3D","p":"","c":["","front-end","browser-object-model","observer","mutation-observer"],"i":false,"f":[[["",{"children":["front-end",{"children":[["slug","browser-object-model/observer/mutation-observer","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ec0a9d078e716e00.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_4d318d __variable_ea5f4b antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["front-end",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/485ff6fe79292a08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/0ff121a467c0636f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","main",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],{"children":[["slug","browser-object-model/observer/mutation-observer","oc"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","front-end","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","QASY9btMrVUO7XYwHBPsC",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
c:T1b6c,<h1>MutationObserver API</h1>
<p>MutationObservr API 用于监视 DOM 的任何变动，比如节点的增减、属性的变动、文本内容的变动，这个 API 都可以得到通知。</p>
<p>DOM 发生变动都会触发 Mutation Observer 事件。但是，它跟事件还是有不同点：事件是同步触发的，DOM 变化立即触发相应的事件；Mutation Observer 是一部触发，DOM 变化不会马上触发，而是等当前所有 DOM 操作都结束后才触发。</p>
<p>总的来说，特点如下：</p>
<ul>
<li>它等待所有脚本任务完成后，才会运行（即一步触发方式）</li>
<li>它把 DOM 变动记录封装成一个数组进行处理，而不是一条条个别处理 DOM 变动</li>
<li>它既可以观察 DOM 的所有类型变动，也可以指定只观察某类变动</li>
</ul>
<h2>接口定义</h2>
<pre class="hljs"><code class="language-ts"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">var</span> <span class="hljs-title class_">MutationObserver</span>: {
  <span class="hljs-title function_">new</span>(<span class="hljs-attr">callback</span>: <span class="hljs-title class_">Mutationcallback</span>): <span class="hljs-title class_">MutationObserver</span>;

  <span class="hljs-attr">prototype</span>: <span class="hljs-title class_">MutationObserver</span>;
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">MutationObserver</span> {
  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-title class_">MutationCallback</span> callback</span>);

  <span class="hljs-comment">/**
   * <span class="hljs-doctag">@param</span> target 被观察的 DOM 节点
   * <span class="hljs-doctag">@param</span> options 配置对象（指定所要观察特征）
   */</span>
  <span class="hljs-title function_">observer</span>(<span class="hljs-attr">target</span>: <span class="hljs-title class_">Node</span>, <span class="hljs-attr">options</span>?: <span class="hljs-title class_">MutationObserverInit</span>): <span class="hljs-built_in">void</span>;

  <span class="hljs-title function_">disconnect</span>(): <span class="hljs-built_in">void</span>;

  <span class="hljs-title function_">takeRecords</span>(): <span class="hljs-title class_">MutationRecord</span>[];
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">MutationObserverInit</span> {
  <span class="hljs-comment">/* 观察特定属性 */</span>
  <span class="hljs-attr">attributeFilter</span>?: <span class="hljs-built_in">string</span>[];
  <span class="hljs-comment">/* 观察 attributes 变动时，是否需要记录变动前的属性值 */</span>
  <span class="hljs-attr">attributeOldValue</span>?: <span class="hljs-built_in">boolean</span>;
  <span class="hljs-comment">/* 属性的变动*/</span>
  <span class="hljs-attr">attributes</span>?: <span class="hljs-built_in">boolean</span>;
  <span class="hljs-comment">/* 节点内容或节点文本的变动*/</span>
  <span class="hljs-attr">characterData</span>?: <span class="hljs-built_in">boolean</span>;
  <span class="hljs-comment">/* 观察 characterData 变动，是否需要记录变动前的值 */</span>
  <span class="hljs-attr">characterDataOldValue</span>?: <span class="hljs-built_in">boolean</span>;
  <span class="hljs-comment">/* 子节点的变动（新增、删除或者更改） */</span>
  <span class="hljs-attr">childList</span>?: <span class="hljs-built_in">boolean</span>;
  <span class="hljs-comment">/* 是否将观察器应用于该节点的所有后代节点 */</span>
  <span class="hljs-attr">subtree</span>?: <span class="hljs-built_in">boolean</span>;
}

<span class="hljs-keyword">interface</span> <span class="hljs-title class_">MutationRecord</span> {

}
</code></pre>
<h2>应用实战</h2>
<h3>基本用法</h3>
<pre class="hljs"><code class="language-js"><span class="hljs-comment">// 获取需要观察变动的元素节点</span>
<span class="hljs-keyword">const</span> targetElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;observer&#x27;</span>);

<span class="hljs-comment">// 观察器的配置（需要观察什么变动）</span>
<span class="hljs-keyword">const</span> config = { <span class="hljs-attr">attributes</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">childList</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">subtree</span>: <span class="hljs-literal">true</span> };

<span class="hljs-comment">// 当观察到变动时执行的回调函数</span>
<span class="hljs-keyword">const</span> onMutationObserverChange = <span class="hljs-keyword">function</span>(<span class="hljs-params">mutationsList, observer</span>) {
  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> mutation <span class="hljs-keyword">of</span> mutationsList) {
    <span class="hljs-keyword">if</span> (mutation.<span class="hljs-property">type</span> === <span class="hljs-string">&#x27;childList&#x27;</span>) {
      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;A child node has been added or removed&#x27;</span>);
    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mutation.<span class="hljs-property">type</span> === <span class="hljs-string">&#x27;attributes&#x27;</span>) {
      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(mutation.<span class="hljs-property">attributeName</span>);
    }
  }
};

<span class="hljs-comment">// 创建一个观察器实例并传入回调函数</span>
<span class="hljs-keyword">const</span> observer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MutationObserver</span>(onMutationObserverChange);

<span class="hljs-comment">// 以上述配置开始观察目标节点</span>
observer.<span class="hljs-title function_">observe</span>(targetNode, config);

<span class="hljs-comment">// 停止观察</span>
observer.<span class="hljs-title function_">disconnect</span>();
</code></pre>
<h2>参考资料</h2>
<ul>
<li><a href="https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-eventgroupings-mutationevents">📖 W3C Mutation Events API Standard</a></li>
<li><a href="https://dom.spec.whatwg.org/#mutation-observers">📖 DOM Living Standard: Mutation observers</a></li>
<li><a href="https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.mutationobserver.html">📖 TypeScript: Interface MutationObserver</a></li>
<li><a href="https://developers.google.com/web/updates/2012/02/Detect-DOM-changes-with-Mutation-Observers">📝 Detect DOM changes with Mutation Observers</a></li>
<li><a href="https://segmentfault.com/a/1190000019877595">📝 如何优雅监听容器高度变化</a></li>
</ul>
4:["$","div",null,{"className":"markdown-body","children":[["$","h1",null,{"children":"MutationObserver API"}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]]}]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"front-end"}],["$","meta","2",{"name":"description","content":"front-end knowledge"}],["$","link","3",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
6:null
